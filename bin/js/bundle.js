var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameInstaller_1 = require("./GameInstaller");
var MenuId_1 = require("./gamemodule/MenuId");
var MenuManager_1 = require("./gamemodule/MenuManager");
var GameTimeData_1 = require("./gamemodule/DataStructs/GameTimeData");
var ScreenSettingConfig_1 = require("./Tool/ScreenSettingConfig");
var TimerManager_1 = require("./Tool/TimerManager");
var SystemManager_1 = require("./Tool/SystemManager");
var LoaderManager_1 = require("./Tool/LoaderManager");
var GameStatus_1 = require("./gamemodule/DataEnums/GameStatus");
var AudioManager_1 = require("./gamemodule/Sound/AudioManager");
var GameLocalStorage_1 = require("./gamemodule/LocalStorage/GameLocalStorage");
var ProtoManager_1 = require("./protobuf/ProtoManager");
var SystemToastMessag_1 = require("./gamemodule/System/SystemToastMessag");
var SystemTipWin_1 = require("./gamemodule/System/SystemTipWin");
var SystemGuide_1 = require("./gamemodule/System/SystemGuide");
var SystemPopup_1 = require("./gamemodule/System/SystemPopup");
var BattleMap_1 = require("./gamemodule/DataStructs/BattleMap");
var BattleData_1 = require("./gamemodule/DataStructs/BattleData");
var BattleScene_1 = require("./gamemodule/Models/BattleScene");
var CSVConfig_1 = require("./dataInfo/CSVConfig");
var ServerCSVConfig_1 = require("./dataInfo/ServerCSVConfig");
var PlayerData_1 = require("./gamemodule/DataStructs/PlayerData");
var UserData_1 = require("./Tool/UserData");
var EventManager_1 = require("./Tool/EventManager");
var ProtoEvent_1 = require("./protobuf/ProtoEvent");
var WaveData_1 = require("./gamemodule/DataStructs/WaveData");
var TickManager_1 = require("./Tool/TickManager");
var GMData_1 = require("./gamemodule/DataStructs/GMData");
var Game = /** @class */ (function () {
    function Game() {
        Game.gameStatus = GameStatus_1.GameStatus.Load;
        Laya.init(1280, 720);
        // 是否开启多点触控
        Laya.MouseManager.multiTouchEnabled = false;
        Laya.stage.scaleMode = Laya.Browser.onMobile ? Laya.Stage.SCALE_FIXED_AUTO : Laya.Stage.SCALE_SHOWALL;
        if (window && window.navigator && window.navigator.userAgent) {
            var agent = window.navigator.userAgent;
            console.log(agent);
            Game.isIOS = agent.indexOf("iPod") > -1 || agent.indexOf("iPhone") > -1 || agent.indexOf("iPad") > -1;
            Game.isAndroid = (agent.indexOf("Android") > -1);
            Game.isMobile = Game.isIOS || Game.isAndroid;
        }
        EventManager_1.default.once(ProtoEvent_1.default.LOGIN_CALL_BACK, this, this.openHome);
        Game.install();
        LoaderManager_1.default.init();
        GameInstaller_1.default.install();
        SystemManager_1.default.init();
        TimerManager_1.default.init();
        window["TowerGame"] = Game;
    }
    Object.defineProperty(Game, "creatNum", {
        get: function () {
            this._creatNum++;
            return this._creatNum;
        },
        set: function (v) {
            this._creatNum = v;
        },
        enumerable: true,
        configurable: true
    });
    Game.onInstallComplete = function () {
        Game.proto.reqConfig();
        Game.gameStatus = GameStatus_1.GameStatus.Gaming;
        Game.sound.install();
        Game.sound.autoStopMusic = false;
        CSVConfig_1.default.InitAll();
        Game.battleData.init();
        Game.battleScene.init();
        this.menu.open(MenuId_1.MenuId.Load);
        // 资源加载完毕，登录
        SystemManager_1.default.login();
    };
    Game.prototype.openHome = function () {
        SystemManager_1.default.initAllData();
        // 登录完毕，打开主界面
        Game.menu.open(MenuId_1.MenuId.Home);
    };
    Game.install = function () {
        Game.configs = ServerCSVConfig_1.default.Instance;
        Game.total = SystemToastMessag_1.default.Instance;
        Game.tipWin = SystemTipWin_1.default.Instance;
        Game.guide = SystemGuide_1.default.Instance;
        Game.popup = SystemPopup_1.default.Instance;
        Game.battleMap = BattleMap_1.default.Instance;
        Game.battleData = BattleData_1.default.Instance;
        Game.battleScene = BattleScene_1.default.Instance;
        Game.localStorage = GameLocalStorage_1.default.Instance;
        Game.playData = PlayerData_1.default.Instance;
        Game.userData = UserData_1.default.Instance;
        Game.waveData = WaveData_1.default.Instance;
        Game.tick = TickManager_1.default.Instance;
        Game.gm = GMData_1.default.Instance;
    };
    // 屏幕自适应
    Game.autoScreenSize = function (content, alignH, alignV) {
        var rate = this.ScreenSetting.screenScaleExpand;
        content.width = content.sourceWidth * rate;
        content.height = content.sourceHeight * rate;
        if (alignH) {
            var parent_1 = fairygui.GRoot.inst;
            switch (alignH) {
                case Laya.Stage.ALIGN_LEFT:
                    content.x = 0;
                    break;
                case Laya.Stage.ALIGN_CENTER:
                    content.x = (parent_1.width - content.width) * 0.5;
                    break;
                case Laya.Stage.ALIGN_RIGHT:
                    content.x = parent_1.width - content.width;
                    break;
            }
            switch (alignV) {
                case Laya.Stage.ALIGN_TOP:
                    content.y = 0;
                    break;
                case Laya.Stage.ALIGN_MIDDLE:
                    content.y = (parent_1.height - content.height) * 0.5;
                    break;
                case Laya.Stage.ALIGN_BOTTOM:
                    content.y = parent_1.height - content.height;
                    break;
            }
        }
    };
    // 生成sk的数量
    Game._creatNum = 0;
    // 游戏状态
    Game.gameStatus = GameStatus_1.GameStatus.Load;
    // 模块管理器
    Game.menu = new MenuManager_1.default();
    // 游戏时间
    Game.time = new GameTimeData_1.default();
    // 加载管理器
    Game.loadManager = new LoaderManager_1.default();
    // 音效管理器
    Game.sound = new AudioManager_1.default();
    // 协议发送管理器
    Game.proto = new ProtoManager_1.default();
    Game.ScreenSetting = new ScreenSettingConfig_1.default();
    return Game;
}());
exports.default = Game;
},{"./GameInstaller":3,"./Tool/EventManager":7,"./Tool/LoaderManager":10,"./Tool/ScreenSettingConfig":13,"./Tool/SystemManager":16,"./Tool/TickManager":18,"./Tool/TimerManager":19,"./Tool/UserData":20,"./dataInfo/CSVConfig":27,"./dataInfo/ServerCSVConfig":35,"./gamemodule/DataEnums/GameStatus":134,"./gamemodule/DataStructs/BattleData":138,"./gamemodule/DataStructs/BattleMap":139,"./gamemodule/DataStructs/GMData":141,"./gamemodule/DataStructs/GameTimeData":142,"./gamemodule/DataStructs/PlayerData":145,"./gamemodule/DataStructs/WaveData":146,"./gamemodule/LocalStorage/GameLocalStorage":149,"./gamemodule/MenuId":153,"./gamemodule/MenuManager":155,"./gamemodule/Models/BattleScene":161,"./gamemodule/Sound/AudioManager":166,"./gamemodule/System/SystemGuide":167,"./gamemodule/System/SystemPopup":168,"./gamemodule/System/SystemTipWin":169,"./gamemodule/System/SystemToastMessag":170,"./protobuf/ProtoEvent":191,"./protobuf/ProtoManager":193}],2:[function(require,module,exports){
"use strict";
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
Object.defineProperty(exports, "__esModule", { value: true });
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
    };
    GameConfig.width = 1280;
    GameConfig.height = 720;
    GameConfig.scaleMode = "noscale";
    GameConfig.screenMode = "horizontal";
    GameConfig.alignV = "middle";
    GameConfig.alignH = "center";
    GameConfig.startScene = "";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = false;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LoadFgui_1 = require("./fgui/LoadFgui");
var GamePreload_1 = require("./fgui/GamePreload");
var Game_1 = require("./Game");
var MenuWindows_1 = require("./gamemodule/MenuWindows");
var MenuLayer_1 = require("./gamemodule/MenuLayer");
var SoundKey_1 = require("./fgui/SoundKey");
var GameInstaller = /** @class */ (function () {
    function GameInstaller() {
    }
    GameInstaller.install = function () {
        if (Laya.stage.width < 1280) {
            Laya.stage.scaleMode = Laya.Stage.SCALE_FIXED_WIDTH;
            Laya.stage.setScreenSize(Laya.stage.width, Laya.stage.height);
        }
        this.installSystem();
    };
    GameInstaller.installSystem = function () {
        // 初始化UI窗口配置
        MenuWindows_1.default.install();
        // 加载配置文件
        // 加载声音
        // 设置按钮声音
        fairygui.UIConfig.buttonSound = SoundKey_1.default.getUrl(SoundKey_1.default.click);
        fairygui.UIConfig.popupMenu = "ui://System/PopupMenu";
        // 加载fgui组件
        LoadFgui_1.default.install();
        GamePreload_1.default.begin(this, this.onLoadRes);
    };
    GameInstaller.onLoadRes = function () {
        console.log("load over");
        var _scene = fairygui.GRoot.inst.displayObject;
        _scene.x = (Laya.stage.width - 1280) * 0.5;
        _scene.y = (Laya.stage.height - 960) * 0.5;
        Laya.stage.addChild(_scene);
        Game_1.default.scenes = new Laya.Point(_scene.x, _scene.y);
        Game_1.default.scenesWH = new Laya.Point(_scene.width, _scene.height);
        MenuLayer_1.default.install();
        Game_1.default.onInstallComplete();
    };
    return GameInstaller;
}());
exports.default = GameInstaller;
},{"./Game":1,"./fgui/GamePreload":86,"./fgui/LoadFgui":130,"./fgui/SoundKey":132,"./gamemodule/MenuLayer":154,"./gamemodule/MenuWindows":156}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var Game_1 = require("./Game");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        //加载IDE指定的场景
        // GameConfig.startScene && Laya.Scene.open(GameConfig.startScene);
        new Game_1.default();
    };
    return Main;
}());
//激活启动类
new Main();
},{"./Game":1,"./GameConfig":2}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary = /** @class */ (function () {
    function Dictionary() {
        this.dict = {};
        this._count = 0;
    }
    Object.defineProperty(Dictionary.prototype, "count", {
        get: function () {
            return this._count;
        },
        enumerable: true,
        configurable: true
    });
    Dictionary.prototype.add = function (key, val) {
        if (this.hasKey(key) === false) {
            this._count++;
        }
        this.dict[key] = val;
    };
    Dictionary.prototype.set = function (key, val) {
        if (this.hasKey(key) === false) {
            this._count++;
        }
        this.dict[key] = val;
    };
    Dictionary.prototype.remove = function (key) {
        if (this.hasKey(key)) {
            this._count--;
        }
        delete this.dict[key];
    };
    Dictionary.prototype.hasKey = function (key) {
        return this.dict[key] != undefined;
    };
    Dictionary.prototype.getValue = function (key) {
        return this.dict[key];
    };
    Dictionary.prototype.getValueOrDefault = function (key, _default) {
        if (this.hasKey(key)) {
            return this.getValue(key);
        }
        else {
            return _default;
        }
    };
    Dictionary.prototype.__getDict = function () {
        return this.dict;
    };
    Dictionary.prototype.getValues = function () {
        var list = [];
        for (var key in this.dict) {
            list.push(this.dict[key]);
        }
        return list;
    };
    Dictionary.prototype.getKeys = function () {
        var list = [];
        for (var key in this.dict) {
            list.push(key);
        }
        return list;
    };
    Dictionary.prototype.clear = function () {
        this.dict = {};
        this._count = 0;
    };
    return Dictionary;
}());
exports.default = Dictionary;
},{}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventKey = /** @class */ (function () {
    function EventKey() {
    }
    Object.defineProperty(EventKey, "ENTER_SECOND", {
        // 秒触发
        get: function () {
            return "ENTER_SECOND";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventKey, "ENTER_MINUTE", {
        // 分钟触发
        get: function () {
            return "ENTER_MINUTE";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventKey, "ENTER_FRAME", {
        // 帧触发
        get: function () {
            return "ENTER_FRAME";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventKey, "DATA_REQUEST", {
        // 下一秒触发
        get: function () {
            return "DATA_REQUEST";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventKey, "COIN_GOLD_UPDATE", {
        // 货币资源更新
        get: function () {
            return "MONEY_REFRUSH";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventKey, "COIN_DIAMOND_UPDATE", {
        get: function () {
            return "COIN_DIAMOND_UPDATE";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventKey, "COIN_JADEITE_UPDATE", {
        get: function () {
            return "COIN_JADEITE_UPDATE";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventKey, "HERO_LEVEL_UPDATE", {
        get: function () {
            return "HERO_LEVEL_UPDATE";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventKey, "HERO_STAR_UPDATE", {
        get: function () {
            return "HERO_STAR_UPDATE";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventKey, "RE_TRYPLAY", {
        // 重新开始当前游戏
        get: function () {
            return "RE_TRYPLAY";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventKey, "GAMELOSE", {
        // 失败
        get: function () {
            return "GAMELOSE";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventKey, "GAMEWIN", {
        // 胜利
        get: function () {
            return "GAMEWIN";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventKey, "GAMEEXIT", {
        // 退出战斗
        get: function () {
            return "GAMEEXIT";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventKey, "LOADER_COMPLETE", {
        // 加载完成
        get: function () {
            return "LOADER_COMPLETE";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventKey, "LOADER_OVER", {
        get: function () {
            return "LOADER_OVER";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventKey, "LOADER_PROGRESS", {
        get: function () {
            return "LOADER_PROGRESS";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventKey, "LOADER_ERROR", {
        get: function () {
            return "LOADER_ERROR";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventKey, "LOADER_FAIL", {
        get: function () {
            return "LOADER_FAIL";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventKey, "SHOW_UI_WAIT", {
        get: function () {
            return "SHOW_UI_WAIT";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventKey, "CLOSE_UI_WAIT", {
        get: function () {
            return "CLOSE_UI_WAIT";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventKey, "SHOW_WAIT", {
        /**
         * 显示系统等待界面
         */
        get: function () {
            return "SHOW_WAIT";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventKey, "CLOSE_WAIT", {
        /**
         * 关闭系统等待界面
         */
        get: function () {
            return "CLOSE_WAIT";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventKey, "MAP_REFRUSH", {
        // 地图信息已更新
        get: function () {
            return "MAP_REFRUSH";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventKey, "ADD_HERO", {
        // 添加英雄
        get: function () {
            return "ADD_HERO";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventKey, "REMOVE_HERO", {
        // 移除英雄
        get: function () {
            return "REMOVE_HERO";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventKey, "ADD_ENEMY", {
        // 添加敌人
        get: function () {
            return "ADD_ENEMY";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventKey, "REMOVE_ENEMY", {
        // 移除敌人
        get: function () {
            return "REMOVE_ENEMY";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventKey, "GAME_PAUSE", {
        // 暂停
        get: function () {
            return "GAME_PAUSE";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventKey, "GAME_CONTINUE", {
        // 继续游戏
        get: function () {
            return "GAME_CONTINUE";
        },
        enumerable: true,
        configurable: true
    });
    return EventKey;
}());
exports.default = EventKey;
},{}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventManager = /** @class */ (function (_super) {
    __extends(EventManager, _super);
    function EventManager() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    EventManager.getInstance = function () {
        if (this._instance == null) {
            this._instance = new EventManager();
        }
        return this._instance;
    };
    EventManager.on = function (type, caller, listener, args) {
        this.getInstance().on(type, caller, listener, args);
    };
    EventManager.once = function (type, caller, listener, args) {
        this.getInstance().once(type, caller, listener, args);
    };
    EventManager.event = function (type, data) {
        this.getInstance().event(type, data);
    };
    EventManager.off = function (type, caller, listener, onceOnly) {
        this.getInstance().off(type, caller, listener, onceOnly);
    };
    EventManager.offAll = function (type) {
        this.getInstance().offAll(type);
    };
    EventManager.offAllCaller = function (caller) {
        this.getInstance().offAllCaller(caller);
    };
    EventManager._instance = null;
    return EventManager;
}(Laya.EventDispatcher));
exports.default = EventManager;
},{}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../Game");
var Dictionary_1 = require("./Dictionary");
var Fun = /** @class */ (function () {
    function Fun() {
    }
    Fun.format = function (value) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        try {
            return value.replace(/{(\d+(:.*)?)}/g, function (match, i) {
                var s = match.split(':');
                if (s.length > 1) {
                    i = i[0];
                    match = s[1].replace('}', '');
                }
                var arg = Fun.formatPattern(match, args[i]);
                return typeof arg != 'undefined' && arg != null ? arg : "";
            });
        }
        catch (e) {
            return "";
        }
    };
    Fun.formatPattern = function (match, arg) {
        switch (match) {
            case 'L':
                arg = arg.toLowerCase();
                break;
            case 'U':
                arg = arg.toUpperCase();
                break;
            default:
                break;
        }
        return arg;
    };
    // int
    // min <= r < max
    Fun.range = function (min, max) {
        var range = max - min;
        var rand = Math.random();
        return min + Math.floor(range * rand);
    };
    // int
    // min <= r <= max
    Fun.rangeBoth = function (min, max) {
        var range = max - min;
        var rand = Math.random();
        return min + Math.round(range * rand);
    };
    // int
    // min < r < max
    Fun.rangeBetween = function (min, max) {
        var range = max - min;
        var rand = Math.random();
        if (Math.round(rand * range) == 0) {
            return min + 1;
        }
        else if (Math.round(rand * max) == max) {
            return max - 1;
        }
        else {
            return min + Math.round(rand * range) - 1;
        }
    };
    /**
     * 计算两点之间的距离
     */
    Fun.twoPositionDistance = function (x1, y1, x2, y2) {
        var disX = x1 - x2;
        var disY = y1 - y2;
        var dis = Math.pow(disX * disX + disY * disY, 0.5);
        return dis;
    };
    /**
     * 修整字符串，删除字符串首尾的无效内容
     */
    Fun.trimString = function (s) {
        if (s) {
            return s.replace(/^(\s|\u00A0)+/, '').replace(/(\s|\u00A0)+$/, '');
        }
        return "";
    };
    /**
     * 生成随机字符串
     * @param length 字符串长度
     */
    Fun.randString = function (length) {
        if (length === void 0) { length = 32; }
        var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
        var maxPos = chars.length;
        var str = '';
        for (var i = 0; i < length; i++) {
            str += chars.charAt(Math.floor(Math.random() * maxPos));
        }
        return str;
    };
    /**
     * 格式化时间
     * second 秒
     * length 返回几组信息
     *          1表示只返回秒（没什么用）
     *          2表示返回分钟和秒数  3:04
     *          3表示 返回小时分钟和秒数 2:03:04
     *          4表示返回 天数 小时 分钟和秒数 1:02:03:04
     **/
    Fun.formatTime = function (second, length, tab) {
        if (length === void 0) { length = 3; }
        if (tab === void 0) { tab = ":"; }
        second = Math.floor(second);
        length = Math.floor(length);
        if (!(second >= 0))
            second = 0;
        if (length < 1)
            length = 1;
        else if (length > 4)
            length = 4;
        var _str = "";
        var div_arr = [1, 60, 3600, 86400];
        var rem_arr = [60, 60, 24, 99];
        for (var i = length - 1; i >= 0; i--) {
            var _a = Math.floor(second / div_arr[i]);
            var _b = _a;
            if (i != length - 1) {
                _b = _a % rem_arr[i];
            }
            var _s = String(_b);
            if (i != length - 1 && _b < 10) {
                _s = "0" + _s;
            }
            _str += _s;
            if (i != 0) {
                _str += tab;
            }
        }
        return _str;
    };
    Fun.checkNullObj = function (obj) {
        if (obj) {
            for (var key in obj) {
                return false;
            }
        }
        return true;
    };
    Fun.getHashKeyList = function (_hash) {
        var _list = [];
        for (var key in _hash) {
            if (_hash.hasOwnProperty(key)) {
                _list.push(key);
            }
        }
        return _list;
    };
    Fun.uint8ArrayToBase64 = function (bytes) {
        var binary = '';
        var len = bytes.byteLength;
        for (var i = 0; i < len; i++) {
            binary += String.fromCharCode(bytes[i]);
        }
        return btoa(binary);
    };
    Fun.base64ToUint8Array = function (base64String) {
        String.prototype["repeat"] = function (count) {
            'use strict';
            if (this == null) {
                throw new TypeError('can\'t convert ' + this + ' to object');
            }
            var str = '' + this;
            count = +count;
            if (count != count) {
                count = 0;
            }
            if (count < 0) {
                throw new RangeError('repeat count must be non-negative');
            }
            if (count == Infinity) {
                throw new RangeError('repeat count must be less than infinity');
            }
            count = Math.floor(count);
            if (str.length == 0 || count == 0) {
                return '';
            }
            // 确保 count 是一个 31 位的整数。这样我们就可以使用如下优化的算法。
            // 当前（2014年8月），绝大多数浏览器都不能支持 1 << 28 长的字符串，所以：
            if (str.length * count >= 1 << 28) {
                throw new RangeError('repeat count must not overflow maximum string size');
            }
            var rpt = '';
            for (;;) {
                if ((count & 1) == 1) {
                    rpt += str;
                }
                count >>>= 1;
                if (count == 0) {
                    break;
                }
                str += str;
            }
            return rpt;
        };
        var padding = '='["repeat"]((4 - base64String.length % 4) % 4);
        var base64 = (base64String + padding)
            .replace(/\-/g, '+')
            .replace(/_/g, '/');
        var rawData = atob(base64);
        var outputArray = new Uint8Array(rawData.length);
        for (var i = 0; i < rawData.length; ++i) {
            outputArray[i] = rawData.charCodeAt(i);
        }
        return outputArray;
    };
    Fun.getResPath = function (filename, dir) {
        if (this.isNullOrEmpty(dir)) {
            return "res/" + filename;
        }
        else {
            return "res/" + dir + "/" + filename;
        }
    };
    Fun.isNullOrEmpty = function (x) {
        if (x instanceof Array)
            return x == null || x == undefined;
        return x == null || x == undefined || x == "";
    };
    Object.defineProperty(Fun, "leftTopPoint", {
        /**
         * 屏幕左上角点的坐标
         */
        get: function () {
            if (!this._ScenePoint.hasKey("leftTopPoint")) {
                var xx = Game_1.default.scenes.x >= 0 ? 0 : Game_1.default.scenes.x * -1;
                var yy = Game_1.default.scenes.y >= 0 ? 0 : Game_1.default.scenes.y * -1;
                this._ScenePoint.add("leftTopPoint", new Laya.Point(xx, yy));
            }
            return this._ScenePoint.getValue("leftTopPoint");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Fun, "leftBottomPoint", {
        /**
         * 屏幕左下角点的坐标
         */
        get: function () {
            if (!this._ScenePoint.hasKey("leftBottomPoint")) {
                var xx = Game_1.default.scenes.x >= 0 ? 0 : Game_1.default.scenes.x * -1;
                var yy = (Game_1.default.scenes.y >= 0 ? 0 : Game_1.default.scenes.y * -1) + Game_1.default.scenesWH.y;
                this._ScenePoint.add("leftBottomPoint", new Laya.Point(xx, yy));
            }
            return this._ScenePoint.getValue("leftBottomPoint");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Fun, "rightTopPoint", {
        /**
         * 屏幕右上角点的坐标
         */
        get: function () {
            if (!this._ScenePoint.hasKey("rightTopPoint")) {
                var xx = (Game_1.default.scenes.x >= 0 ? Game_1.default.scenes.x * -1 : 0) + Game_1.default.scenesWH.x - Game_1.default.scenes.x;
                var yy = Game_1.default.scenes.y >= 0 ? 0 : Game_1.default.scenes.y * -1;
                this._ScenePoint.add("rightTopPoint", new Laya.Point(xx, yy));
            }
            return this._ScenePoint.getValue("rightTopPoint");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Fun, "rightBottomPoint", {
        /**
         * 屏幕右下角点的坐标
         */
        get: function () {
            if (!this._ScenePoint.hasKey("rightBottomPoint")) {
                var xx = (Game_1.default.scenes.x >= 0 ? Game_1.default.scenes.x * -1 : 0) + Game_1.default.scenesWH.x - Game_1.default.scenes.x;
                var yy = (Game_1.default.scenes.y >= 0 ? 0 : Game_1.default.scenes.y * -1) + Game_1.default.scenesWH.y;
                this._ScenePoint.add("rightBottomPoint", new Laya.Point(xx, yy));
            }
            return this._ScenePoint.getValue("rightBottomPoint");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Fun, "topMiddlePoint", {
        /**
         * 屏幕顶部中心点的坐标
         */
        get: function () {
            if (!this._ScenePoint.hasKey("topMiddlePoint")) {
                var xx = (Game_1.default.scenes.x >= 0 ? 0 : Game_1.default.scenes.x * -1) + Game_1.default.scenesWH.x * 0.5;
                var yy = Game_1.default.scenes.y >= 0 ? 0 : Game_1.default.scenes.y * -1;
                this._ScenePoint.add("topMiddlePoint", new Laya.Point(xx, yy));
            }
            return this._ScenePoint.getValue("topMiddlePoint");
        },
        enumerable: true,
        configurable: true
    });
    Fun._ScenePoint = new Dictionary_1.default();
    return Fun;
}());
exports.default = Fun;
},{"../Game":1,"./Dictionary":5}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LoadFilesList = /** @class */ (function () {
    function LoadFilesList() {
    }
    Object.defineProperty(LoadFilesList, "effect_effect_ResList", {
        // effect文件夹内的effect类别的加载列表 
        get: function () {
            var _list = [];
            _list.push("res/effect/effect_1.sk");
            return _list;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LoadFilesList, "sk_enemy_ResList", {
        // sk文件夹内的enemy类别的加载列表 
        get: function () {
            var _list = [];
            _list.push("res/sk/enemy_1.sk");
            _list.push("res/sk/enemy_28.sk");
            return _list;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LoadFilesList, "sk_hero_ResList", {
        // sk文件夹内的hero类别的加载列表 
        get: function () {
            var _list = [];
            _list.push("res/sk/hero_12.sk");
            return _list;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LoadFilesList, "allResList", {
        /**
         * 加载全部资源
         */
        get: function () {
            var _list = [];
            _list = _list.concat(this.effect_effect_ResList);
            _list = _list.concat(this.sk_enemy_ResList);
            _list = _list.concat(this.sk_hero_ResList);
            return _list;
        },
        enumerable: true,
        configurable: true
    });
    return LoadFilesList;
}());
exports.default = LoadFilesList;
},{}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventManager_1 = require("./EventManager");
var SystemManager_1 = require("./SystemManager");
var TempletManager_1 = require("./TempletManager");
var EventKey_1 = require("./EventKey");
var LoaderManager = /** @class */ (function () {
    function LoaderManager() {
    }
    LoaderManager.init = function () {
        // Laya.MiniAdpter.autoCacheFile = false;
        // Laya.MiniAdpter.nativefiles = [
        // 	"res_code",
        // 	"res_font"
        // ];
        // Laya.URL.basePath = "http://192.168.10.127/";
        // Laya.loader.retryDelay = 100;
        Laya.loader.retryNum = 3;
        Laya.loader.on(Laya.Event.ERROR, LoaderManager, LoaderManager.loadError);
        EventManager_1.default.on(EventKey_1.default.LOADER_ERROR, SystemManager_1.default, SystemManager_1.default.loadError);
        EventManager_1.default.on(EventKey_1.default.LOADER_FAIL, SystemManager_1.default, SystemManager_1.default.loadFail);
        // Laya.MiniAdpter.enable();
    };
    LoaderManager.loadError = function (url) {
        console.log("============loadError 1 :", url);
        var _b = false;
        for (var i = 0, _length = Laya.MiniAdpter.nativefiles.length; i < _length; i++) {
            var _path = Laya.MiniAdpter.nativefiles[i];
            if (url.search(_path) == 0) {
                _b = true;
                break;
            }
        }
        this.errorHash[url] = 1;
        this.stop();
        if (_b) {
            EventManager_1.default.event(EventKey_1.default.LOADER_FAIL);
        }
        else {
            EventManager_1.default.event(EventKey_1.default.LOADER_ERROR);
        }
    };
    LoaderManager.reload = function () {
        this.network = true;
        var num = 0;
        this.reloadNum++;
        for (var url in this.errorHash) {
            if (this.errorHash.hasOwnProperty(url)) {
                num++;
            }
        }
        if (num >= 10 || this.reloadNum >= 3) {
            SystemManager_1.default.retryGame();
        }
        else {
            for (var url in this.errorHash) {
                if (this.errorHash.hasOwnProperty(url)) {
                    Laya.loader.clearRes(url);
                    this.addLoad(url, true);
                }
            }
        }
        this.errorHash = {};
    };
    LoaderManager.stop = function () {
        this.network = false;
        Laya.loader.clearUnLoaded();
    };
    LoaderManager.resetShowLoad = function () {
        this.network = true;
        this.loadHash = {};
    };
    LoaderManager.addList = function (list) {
        for (var i = 0; i < list.length; i++) {
            var url = list[i];
            this.loadHash[url] = 0;
        }
        for (var i = 0; i < list.length; i++) {
            var url = list[i];
            this.loadShow(url, false);
        }
    };
    LoaderManager.addLoad = function (url, cache) {
        if (cache === void 0) { cache = false; }
        this.loadHash[url] = 0;
        this.loadShow(url, cache);
    };
    LoaderManager.loadShow = function (url, cache) {
        var fix_arr = url.split(".");
        var fix = fix_arr.pop();
        var temp = fix_arr.pop().split("/");
        var key = temp.pop();
        if (fix == "sk") {
            if (TempletManager_1.default.hasTemplet(key)) {
                this.loadComplete(url);
            }
            else {
                var templet = new Laya.Templet();
                templet.on(Laya.Event.COMPLETE, this, this.loadTempletComplete, [url, key]);
                templet.loadAni(url);
            }
        }
        else if (fix == "fnt") {
            var bitmapFont = new Laya.BitmapFont();
            bitmapFont.loadFont(url, Laya.Handler.create(this, this.loadFNTComplete, [url, bitmapFont]));
        }
        else if (fix == "scene") {
            Laya.Scene.load(url, Laya.Handler.create(this, this.loadComplete, [url]));
        }
        else if (fix == "png" || fix == "jpg" || fix == "jpeg" || fix == "gif") {
            Laya.loader.load(url, Laya.Handler.create(this, this.loadComplete, [url]), null, Laya.Loader.IMAGE, 1, true, "", cache);
        }
        else if (fix == "mp3" || fix == "wav") {
            Laya.loader.load(url, Laya.Handler.create(this, this.loadComplete, [url]), null, Laya.Loader.SOUND, 1, true);
        }
        else {
        }
    };
    LoaderManager.loadTempletComplete = function (url, key, templet) {
        TempletManager_1.default.setTemplet(key, templet);
        this.loadComplete(url);
    };
    LoaderManager.loadFNTComplete = function (url, bitmapFont) {
        var temp = url.split(".fnt")[0].split("/");
        var key = temp[temp.length - 1];
        Laya.Text.registerBitmapFont(key, bitmapFont);
        this.loadComplete(url);
    };
    LoaderManager.loadComplete = function (url) {
        this.loadHash[url] = 1;
        if (!this.network)
            return;
        var currNum = 0;
        var maxNum = 0;
        for (var _url in this.loadHash) {
            maxNum++;
            currNum += this.loadHash[_url];
        }
        if (maxNum) {
            var peogressNum = currNum / maxNum;
            EventManager_1.default.event(EventKey_1.default.LOADER_PROGRESS, [currNum, maxNum]);
            if (currNum >= maxNum) {
                this.reloadNum = 0;
                EventManager_1.default.event(EventKey_1.default.LOADER_OVER);
            }
        }
        EventManager_1.default.event(EventKey_1.default.LOADER_COMPLETE, [url]);
    };
    LoaderManager.loadCSV = function () {
        // let csvList: Array<string> = [];
        // let csvKV = CSV.getKV();
        // for (let key in csvKV) {
        // 	let url = "res_code/csv/" + key;
        // 	csvList.push(url);
        // }
        // Laya.loader.load(csvList, Laya.Handler.create(this, this.csvComplete), null, Laya.Loader.TEXT, 1, true);
    };
    LoaderManager.csvComplete = function (b) {
        // let csvKV = CSV.getKV();
        // for (let key in csvKV) {
        // 	let url = "res_code/csv/" + key;
        // 	let csv: string = Laya.Loader.getRes(url);
        // 	CSV.install(url, csv);
        // 	Laya.Loader.clearRes(url);
        // }
        // EventManager.event(LoaderManager.CSV_LOAD_OVER);
    };
    LoaderManager.loadHash = {};
    LoaderManager.network = true;
    LoaderManager.errorHash = {};
    LoaderManager.reloadNum = 0;
    LoaderManager.csvMap = {};
    LoaderManager.csvNum = 0;
    return LoaderManager;
}());
exports.default = LoaderManager;
},{"./EventKey":6,"./EventManager":7,"./SystemManager":16,"./TempletManager":17}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MathRandom = /** @class */ (function () {
    function MathRandom(seed) {
        this._speed = 0;
        this.MOD_NUM = 233280;
        this._speed = seed;
    }
    MathRandom.prototype.nextSpeed = function () {
        this._speed = (this._speed * 9301 + 49297) % this.MOD_NUM;
    };
    MathRandom.prototype.random = function (num) {
        this.nextSpeed();
        return this._speed * num / this.MOD_NUM;
    };
    return MathRandom;
}());
exports.default = MathRandom;
},{}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseSK_1 = require("../base/BaseSK");
var Dictionary_1 = require("./Dictionary");
var Pools = /** @class */ (function () {
    function Pools() {
    }
    /**
     * 从对象池中获取fgui组件实例
     * @param newCls 组件类名
     */
    Pools.fetch = function (newCls) {
        var url = newCls["URL"];
        var fun = newCls["createInstance"];
        return Laya.Pool.getItemByCreateFun(url, fun);
    };
    /**
     * fgui组件实例放回对象池，并从舞台移除
     * @param newCls 实例对象
     */
    Pools.recycle = function (newCls) {
        var url = newCls["resourceURL"];
        if (newCls.parent != null) {
            newCls.parent.removeChild(newCls);
        }
        else if (newCls.displayObject.parent != null) {
            newCls.displayObject.parent.removeChild(newCls.displayObject);
        }
        Laya.Pool.recover(url, newCls);
    };
    /**
     * 获取sk实例
     */
    Pools.skFetch = function (names) {
        var result = null;
        if (this.skDict.hasKey(names)) {
            var list = this.skDict.getValue(names);
            if (list.length > 0) {
                result = list[0];
                list.splice(0, 1);
                this.skDict.set(names, list);
            }
        }
        if (result == null) {
            result = BaseSK_1.default.create(names);
        }
        result.scale(1, 1, true);
        return result;
    };
    /**
     * 回收sk实例
     */
    Pools.skRecycle = function (sk) {
        var names = sk.key;
        var list = new Array();
        if (this.skDict.hasKey(names)) {
            list = this.skDict.getValue(names);
            list.push(sk);
        }
        else {
            list.push(sk);
        }
        if (sk.parent != null) {
            sk.parent.removeChild(sk);
        }
        this.skDict.set(names, list);
    };
    /************************ sk对象池 ************************** */
    Pools.skDict = new Dictionary_1.default();
    return Pools;
}());
exports.default = Pools;
},{"../base/BaseSK":22,"./Dictionary":5}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 屏幕分辨率
 */
var ScreenSettingConfig = /** @class */ (function () {
    function ScreenSettingConfig() {
        // 开发分辨率
        this.developWidth = 1280;
        this.developHeight = 720;
    }
    Object.defineProperty(ScreenSettingConfig.prototype, "developAspect", {
        get: function () {
            return this.developWidth / this.developHeight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScreenSettingConfig.prototype, "screenWidth", {
        // 屏幕分辨率
        get: function () {
            return fairygui.GRoot.inst.width;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScreenSettingConfig.prototype, "screenHeight", {
        get: function () {
            return fairygui.GRoot.inst.height;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScreenSettingConfig.prototype, "screenAspect", {
        get: function () {
            return this.screenWidth / this.screenHeight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScreenSettingConfig.prototype, "screenScaleExpand", {
        // 获取缩放比例
        get: function () {
            var rate = 1;
            if (this.screenAspect <= this.developAspect) {
                rate = this.screenHeight / this.developHeight / (this.screenWidth / this.developWidth);
            }
            else {
                rate = this.screenWidth / this.developWidth / (this.screenHeight / this.developHeight);
            }
            return rate;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScreenSettingConfig.prototype, "screenScaleShrink", {
        get: function () {
            var rate = 1;
            if (this.screenAspect <= this.developAspect) {
                rate = this.screenHeight / this.developHeight;
            }
            else {
                rate = this.screenWidth / this.developWidth;
            }
            return rate;
        },
        enumerable: true,
        configurable: true
    });
    return ScreenSettingConfig;
}());
exports.default = ScreenSettingConfig;
},{}],14:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../Game");
var ShareManager = /** @class */ (function () {
    function ShareManager() {
    }
    Object.defineProperty(ShareManager, "title", {
        set: function (v) {
            this._title = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ShareManager, "url", {
        set: function (v) {
            this._url = v;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 初始化
     */
    ShareManager.init = function () {
        this.showMenu();
        this.onShare();
    };
    // 显示右上角列表里的分享按钮
    ShareManager.showMenu = function () {
        wx.showShareMenu({
            withShareTicket: false,
            success: null,
            fail: null,
            complete: null,
        });
    };
    // 被动转发 监听点击右上角转发
    ShareManager.onShare = function () {
        wx["onShareAppMessage"](function () {
            return {
                title: ShareManager._title,
                imageUrl: ShareManager._url,
                query: "id=" + Game_1.default.userData.openid,
            };
        });
    };
    // 主动分享
    ShareManager.share = function () {
        wx["shareAppMessage"]({
            title: ShareManager._title,
            imageUrl: ShareManager._url,
            query: "id=" + Game_1.default.userData.openid,
        });
    };
    ShareManager._title = "一边撸着猫一边就能玩的塔防--守护家园塔防";
    ShareManager._url = "https://ms.yz063.com/iron_throne/share/share.jpg";
    return ShareManager;
}());
exports.default = ShareManager;
},{"../Game":1}],15:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Signal = /** @class */ (function () {
    function Signal() {
        this._listeners = [];
    }
    Signal.prototype.add = function (listener, self) {
        if (!this.hasListener(listener, self)) {
            this._listeners.push(new SignalHandler(listener, self));
        }
    };
    Signal.prototype.addOnce = function (listener, self) {
        if (!this.hasListener(listener, self)) {
            this._listeners.push(new SignalHandler(listener, self, true));
        }
    };
    Signal.prototype.hasListener = function (listener, self) {
        for (var i = 0; i < this._listeners.length; i++) {
            if (this._listeners[i].equals(listener, self)) {
                return true;
            }
        }
        return false;
    };
    Signal.prototype.remove = function (listener, self) {
        for (var i = 0; i < this._listeners.length; i++) {
            if (this._listeners[i].equals(listener, self)) {
                this._listeners.splice(i, 1);
                break;
            }
        }
    };
    Signal.prototype.removeAll = function () {
        this._listeners.length = 0;
    };
    Signal.prototype.dispatch = function () {
        this._listeners.forEach(function (handler) { return handler.apply(); });
        this._listeners = this._listeners.filter(function (handler, i, arr) { return !handler.once(); });
    };
    return Signal;
}());
exports.default = Signal;
var SignalHandler = /** @class */ (function () {
    function SignalHandler(handler, self, once) {
        if (once === void 0) { once = false; }
        this._handler = handler;
        this._self = self;
        this._once = once;
    }
    SignalHandler.prototype.apply = function () {
        this._handler.apply(this._self);
    };
    SignalHandler.prototype.equals = function (handler, self) {
        return this._handler == handler && this._self == self;
    };
    SignalHandler.prototype.once = function () {
        return this._once;
    };
    return SignalHandler;
}());
},{}],16:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Fun_1 = require("../Tool/Fun");
var EventManager_1 = require("../Tool/EventManager");
var Game_1 = require("../Game");
var LoaderManager_1 = require("./LoaderManager");
var SystemManager = /** @class */ (function () {
    function SystemManager() {
    }
    Object.defineProperty(SystemManager, "VERSION_UPDATE", {
        get: function () {
            return "VERSION_UPDATE";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SystemManager, "ON_HIDE", {
        get: function () {
            return "ON_HIDE";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SystemManager, "ON_SHOW", {
        get: function () {
            return "ON_SHOW";
        },
        enumerable: true,
        configurable: true
    });
    SystemManager.initAllData = function () {
        Game_1.default.waveData.init();
    };
    SystemManager.init = function () {
        if (!Game_1.default.isMobile)
            return;
        this.info = wx.getSystemInfoSync();
        var _sdkv = this.info.SDKVersion;
        var _arr = _sdkv.split(".");
        var _v = 0;
        if (_arr.length == 3) {
            _v += parseInt(_arr[0]) * 10000;
            _v += parseInt(_arr[1]) * 100;
            _v += parseInt(_arr[2]);
        }
        this._verson = _v;
        this._platform = this.info.platform;
        this._screenWidth = this.info.screenWidth;
        this._screenHeight = this.info.screenHeight;
        this.launchReady();
        this.updateReady();
        this.sceneRefresh();
    };
    SystemManager.login = function () {
        wx.login({
            success: function (result) {
                var data = {
                    code: "11004",
                };
                if (Game_1.default.userData.inviter) {
                    data["inviter"] = Game_1.default.userData.inviter;
                }
                Game_1.default.proto.login(data);
            },
            fail: null,
            complete: null,
            pkgName: "",
        });
    };
    // 
    SystemManager.launchReady = function () {
        var _launchInfo = wx["getLaunchOptionsSync"]();
        if (_launchInfo.query && _launchInfo.query.hasOwnProperty("id")) {
            Game_1.default.userData.inviter = _launchInfo.query.id;
        }
        if (_launchInfo.query && _launchInfo.query.hasOwnProperty("channel")) {
            SystemManager._channel = _launchInfo.query.channel;
        }
        if (_launchInfo.hasOwnProperty("referrerInfo")) {
            SystemManager._channelAPPID = _launchInfo.referrerInfo.appId;
        }
    };
    SystemManager.backList = function (list) {
        if (Fun_1.default.checkNullObj(list))
            return;
        for (var id in list) {
            if (list.hasOwnProperty(id) && SystemManager.orderHash.hasOwnProperty(id)) {
                SystemManager.orderHash[id].state = 1;
            }
        }
        // EventManager.event(ServerManager.PAY_BACK);
    };
    //监听游戏客户端是否有加载完最新版的内容，更新完成后提示重启游戏
    SystemManager.updateReady = function () {
        wx["getUpdateManager"]().onCheckForUpdate(function (res) {
            if (res.hasUpdate) {
                EventManager_1.default.event(SystemManager.VERSION_UPDATE);
                wx["getUpdateManager"]().onUpdateReady(function () {
                    SystemManager.showModal({
                        title: "",
                        content: "游戏有新的版本发布，请切换到新版本，体验最新游戏玩法！",
                        showCancel: false,
                        cancelText: "",
                        cancelColor: "#000000",
                        confirmText: "进入新版",
                        confirmColor: "#000000",
                        success: function (res) {
                            if (res.confirm) {
                                SystemManager.deleteAllRes();
                                wx["getUpdateManager"]().applyUpdate();
                            }
                        },
                        fail: null,
                        complete: null,
                    });
                });
                wx["getUpdateManager"]().onUpdateFailed(function () {
                    SystemManager.showModal({
                        title: "",
                        content: "游戏有新的版本发布，请重新打开游戏，体验最新游戏玩法！",
                        showCancel: false,
                        cancelText: "",
                        cancelColor: "#000000",
                        confirmText: "重开游戏",
                        confirmColor: "#000000",
                        success: function (res) {
                            if (res.confirm) {
                                SystemManager.exitGame();
                            }
                        },
                        fail: null,
                        complete: null,
                    });
                });
            }
        });
    };
    SystemManager.sceneRefresh = function () {
        //保持屏幕常亮
        wx.setKeepScreenOn({
            keepScreenOn: true,
            success: null,
            fail: null,
            complete: null,
        });
        wx["onHide"](this.onHide);
        wx["onShow"](this.onShow);
    };
    //音频控制
    SystemManager.setAudioOption = function (b) {
        if (this.canInner) {
            wx["setInnerAudioOption"]({
                mixWithOther: b,
                obeyMuteSwitch: true,
            });
        }
    };
    SystemManager.showModal = function (_obj) {
        wx.showModal(_obj);
    };
    SystemManager.exitGame = function () {
        if (window.hasOwnProperty("wx")) {
            window["wx"].exitMiniProgram({});
        }
    };
    SystemManager.deleteAllRes = function () {
        // Laya.MiniFileMgr.deleteAll();
        laya.wx.mini.MiniAdpter.removeAll();
    };
    SystemManager.retryGame = function () {
        this.deleteAllRes();
        this.exitGame();
    };
    SystemManager.customerService = function () {
        wx["openCustomerServiceConversation"]({
            showMessageCard: true,
        });
    };
    Object.defineProperty(SystemManager, "canPlayAd", {
        /**
         * 设备是否支持播放视频广告（含Banner广告和激励广告）
         */
        get: function () {
            return this._verson >= 20006;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SystemManager, "canInner", {
        get: function () {
            return this._verson >= 20300;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SystemManager, "isAndroid", {
        // public static get offlineUnlock(): boolean {
        // 	if (MapData.currentLevel < 28) return false;
        // 	if (this.isAndroid) return true;
        // 	if (TotalData.vipUnlocked(1)) return true;
        // 	return false;
        // }
        // public static get signUnlock(): boolean {
        // 	return MapData.currentLevel >= 9;
        // }
        // public static get freeUnlock(): boolean {
        // 	return MapData.currentLevel >= 8;
        // }
        // public static get totalUnlock(): boolean {
        // 	if (TotalData.vipUnlocked(1)) return true;
        // 	if (this.isIOS) return false;
        // 	let maxLevel = MapData.currentLevel;
        // 	return maxLevel > 10;
        // }
        // public static get taskUnlock(): boolean {
        // 	return MapData.currentLevel >= 10;
        // }
        // public static get activeUnlock(): boolean {
        // 	return MapData.mapCompleted(1) || TotalData.vipUnlocked(1);
        // }
        get: function () {
            return this._platform == "android";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SystemManager, "isIOS", {
        get: function () {
            return this._platform != "android";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SystemManager, "screenWidth", {
        get: function () {
            return this._screenWidth;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SystemManager, "screenHeight", {
        get: function () {
            return this._screenHeight;
        },
        enumerable: true,
        configurable: true
    });
    SystemManager.pay = function (cost) {
        if (cost === void 0) { cost = 6; }
        if (SystemManager.isAndroid) {
            this.wxPay(cost);
        }
        else {
            // EventManager.event(ConstEvent.LOAD_DIALOG_BAG);
        }
    };
    SystemManager.wxPay = function (cost) {
        if (cost === void 0) { cost = 6; }
        if (cost > this.buyList[this.buyList.length - 1]) {
            cost = this.buyList[this.buyList.length - 1];
        }
        else {
            for (var i = 0; i < this.buyList.length; i++) {
                if (cost <= this.buyList[i]) {
                    cost = this.buyList[i];
                    break;
                }
            }
        }
        // EventManager.event(ConstEvent.SHOW_WAIT);
        wx["requestMidasPayment"]({
            mode: "game",
            env: 0,
            offerId: "1450018359",
            currencyType: "CNY",
            platform: "android",
            buyQuantity: cost * 10,
            zoneId: "1",
            success: function () {
                // ProtoManager.pay()
            },
            fail: function () {
                // EventManager.event(ConstEvent.CLOSE_WAIT);
            },
        });
    };
    SystemManager.onHide = function () {
        EventManager_1.default.event(SystemManager.ON_HIDE);
        // BJManager.BJexposure();
    };
    SystemManager.onShow = function (res) {
        console.log("onShow:", res);
        EventManager_1.default.event(SystemManager.ON_SHOW);
    };
    Object.defineProperty(SystemManager, "channel", {
        get: function () {
            return this._channel;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SystemManager, "channelAPPID", {
        get: function () {
            return this._channelAPPID;
        },
        enumerable: true,
        configurable: true
    });
    SystemManager.loadError = function () {
        Game_1.default.tipWin.showTip("网络情况不佳！点击确认按钮尝试重新加载。", Laya.Handler.create(LoaderManager_1.default, LoaderManager_1.default.reload));
    };
    SystemManager.loadFail = function () {
        Game_1.default.tipWin.showTip("网络情况不佳！请点击确认按钮，调整手机网络通畅以后重开打开游戏。", Laya.Handler.create(SystemManager, SystemManager.retryGame));
    };
    Object.defineProperty(SystemManager, "linkUnlock", {
        get: function () {
            return this._linkUnlock;
        },
        set: function (v) {
            this._linkUnlock = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SystemManager, "shareUnlock", {
        get: function () {
            return this._shareUnlock;
        },
        set: function (v) {
            this._shareUnlock = v;
        },
        enumerable: true,
        configurable: true
    });
    SystemManager.info = null;
    SystemManager.orderHash = {};
    SystemManager._verson = 0;
    SystemManager._platform = "";
    SystemManager.buyList = [1, 3, 6, 8, 12, 18, 25, 30, 40, 45, 50, 60, 68, 73, 78, 88, 98, 108, 118, 128, 148, 168, 188, 198, 328, 648];
    SystemManager._channel = "";
    SystemManager._channelAPPID = "";
    SystemManager._linkUnlock = false;
    SystemManager._shareUnlock = false;
    return SystemManager;
}());
exports.default = SystemManager;
},{"../Game":1,"../Tool/EventManager":7,"../Tool/Fun":8,"./LoaderManager":10}],17:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventManager_1 = require("./EventManager");
var TempletManager = /** @class */ (function () {
    function TempletManager() {
    }
    Object.defineProperty(TempletManager, "TEMPLET_INIT_COMPLETE", {
        get: function () {
            return "TEMPLET_INIT_COMPLETE";
        },
        enumerable: true,
        configurable: true
    });
    TempletManager.setTemplet = function (key, templet) {
        if (this._hash.hasOwnProperty(key)) {
            templet.destroy();
        }
        else {
            this._hash[key] = templet;
        }
        EventManager_1.default.event(this.TEMPLET_INIT_COMPLETE, [key, templet]);
    };
    TempletManager.getTemplet = function (name) {
        return this._hash[name];
    };
    TempletManager.hasTemplet = function (name) {
        return this._hash.hasOwnProperty(name);
    };
    TempletManager.gc = function (_list) {
        var length = _list.length;
        if (length == 0)
            return;
        var _obj = {};
        for (var i = 0; i < length; i++) {
            var url = _list[i];
            var fix_arr = url.split(".");
            var fix = fix_arr.pop();
            if (fix == "sk") {
                var temp = fix_arr[0].split("/");
                var key = temp[temp.length - 1];
                _obj[key] = 1;
            }
        }
    };
    TempletManager.destroyTemplet = function (name) {
        var templet = this._hash[name];
        if (templet) {
            templet.lock = false;
            templet.getTexture("_").bitmap.lock = false;
            delete this._hash[name];
        }
    };
    TempletManager._hash = {};
    return TempletManager;
}());
exports.default = TempletManager;
},{"./EventManager":7}],18:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventManager_1 = require("./EventManager");
var EventKey_1 = require("./EventKey");
var TickManager = /** @class */ (function () {
    function TickManager() {
        this.list = new Array();
    }
    Object.defineProperty(TickManager, "Instance", {
        get: function () {
            if (!TickManager._Instance) {
                TickManager._Instance = new TickManager();
                TickManager._Instance.install();
            }
            return TickManager._Instance;
        },
        enumerable: true,
        configurable: true
    });
    TickManager.prototype.install = function () {
        // let tick = this.addTick(1, 0, null, null);
        // tick.Start();
        EventManager_1.default.on(EventKey_1.default.ENTER_FRAME, this, this.loopUpDateTime);
    };
    /**
     * @param targetTimes 目标计数次数（共计数多少个间隔时间，小于等于0时无限循环）
     * @param clockHandler 计数时回调（每个间隔时间回调）
     * @param finishHandler 计数完成回调
     * @param uniform_speed 是否匀速，大于0表示匀速，速度为此值
     */
    TickManager.prototype.addTick = function (targetTimes, clockHandler, finishHandler, uniform_speed) {
        if (uniform_speed === void 0) { uniform_speed = 0; }
        var tick = Tick.createTick(targetTimes, clockHandler, finishHandler, uniform_speed);
        this.list.push(tick);
        this.listLength = this.list.length;
        return tick;
    };
    TickManager.prototype.clearTick = function (tick) {
        var index = this.list.indexOf(tick);
        if (index >= 0) {
            this.list.splice(index, 1);
        }
    };
    TickManager.prototype.loopUpDateTime = function () {
        if (this.listLength > 0) {
            for (var _i = 0, _a = this.list; _i < _a.length; _i++) {
                var tick = _a[_i];
                if (tick) {
                    tick.updateTime();
                }
            }
        }
    };
    return TickManager;
}());
exports.default = TickManager;
var Tick = /** @class */ (function () {
    function Tick() {
        // 是否开始
        this.isStart = false;
        // 当前次数
        this.curTimes = 0;
        // 当前计时
        this.curClock = 0;
        this.first_int = 30;
        this.once_int = 15;
        this.min_int = 2;
        this.uniform_speed = 0;
    }
    ;
    Tick.createTick = function (targetTimes, clockHandler, finishHandler, uniform_speed) {
        if (uniform_speed === void 0) { uniform_speed = 0; }
        var tick = new Tick();
        tick.isStart = false;
        tick.distance = tick.first_int;
        tick.targetTimes = targetTimes;
        tick.clockHandler = clockHandler;
        tick.finishHandler = finishHandler;
        tick.uniform_speed = uniform_speed;
        if (uniform_speed > 0) {
            tick.distance = uniform_speed;
        }
        return tick;
    };
    Tick.prototype.Start = function () {
        this.isStart = true;
        if (this.clockHandler) {
            this.clockHandler.runWith(this.targetTimes - this.curTimes);
        }
    };
    Tick.prototype.Restart = function () {
        this.curTimes = 0;
        this.curClock = 0;
        this.isStart = true;
        if (this.clockHandler) {
            this.clockHandler.runWith(this.targetTimes - this.curTimes);
        }
    };
    Tick.prototype.Continue = function () {
        this.isStart = true;
    };
    Tick.prototype.Stop = function () {
        this.isStart = false;
    };
    Tick.prototype.updateTime = function () {
        if (!this.isStart) {
            return;
        }
        this.curClock++;
        if (this.curClock >= this.distance) {
            this.curClock = 0;
            this.curTimes++;
            if (this.uniform_speed <= 0) {
                if (this.distance > this.once_int) {
                    this.distance = this.once_int;
                }
                else if (this.distance > this.min_int) {
                    this.distance--;
                }
            }
            if (this.targetTimes > 0 && this.curTimes > this.targetTimes) {
                if (this.isStart) {
                    this.isStart = false;
                    if (this.finishHandler) {
                        this.finishHandler.run();
                    }
                }
                return;
            }
            if (this.clockHandler) {
                this.clockHandler.runWith(this.targetTimes - this.curTimes);
            }
        }
    };
    return Tick;
}());
exports.Tick = Tick;
},{"./EventKey":6,"./EventManager":7}],19:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventManager_1 = require("./EventManager");
var EventKey_1 = require("./EventKey");
var TimerManager = /** @class */ (function () {
    function TimerManager() {
    }
    Object.defineProperty(TimerManager, "DAY_SECOND", {
        get: function () {
            return 86400;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimerManager, "TIME_OFFSET", {
        get: function () {
            return 28800;
        },
        enumerable: true,
        configurable: true
    });
    TimerManager.init = function () {
        Laya.timer.loop(1000, this, this.secondTimer);
        Laya.timer.frameLoop(1, this, this.frameLoop);
    };
    TimerManager.secondTimer = function () {
        if (this.nextSecondTimer) {
            this.nextSecondTimer = false;
            EventManager_1.default.event(EventKey_1.default.DATA_REQUEST);
        }
        this._second++;
        EventManager_1.default.event(EventKey_1.default.ENTER_SECOND);
        if (this._second % 60 == 0) {
            EventManager_1.default.event(EventKey_1.default.ENTER_MINUTE);
        }
        this._timestamp++;
        if ((this._timestamp + this.TIME_OFFSET) % this.DAY_SECOND == 0) {
            this.nextSecondTimer = true;
        }
    };
    TimerManager.frameLoop = function () {
        EventManager_1.default.event(EventKey_1.default.ENTER_FRAME);
    };
    Object.defineProperty(TimerManager, "timestamp", {
        set: function (v) {
            this._timestamp = v;
        },
        enumerable: true,
        configurable: true
    });
    TimerManager._second = 0;
    // 下一秒触发
    TimerManager.nextSecondTimer = false;
    return TimerManager;
}());
exports.default = TimerManager;
},{"./EventKey":6,"./EventManager":7}],20:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var UserData = /** @class */ (function () {
    function UserData() {
        /**
         * 邀请人
         */
        this._inviter = "";
    }
    Object.defineProperty(UserData, "Instance", {
        get: function () {
            if (!UserData._Instance) {
                UserData._Instance = new UserData();
            }
            return UserData._Instance;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UserData.prototype, "openid", {
        get: function () {
            return this._openid;
        },
        set: function (v) {
            this._openid = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UserData.prototype, "playerid", {
        get: function () {
            return this._playerid;
        },
        set: function (v) {
            this._playerid = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UserData.prototype, "password", {
        get: function () {
            return this._password;
        },
        set: function (v) {
            this._password = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UserData.prototype, "inviter", {
        get: function () {
            return this._inviter;
        },
        set: function (v) {
            this._inviter = v;
        },
        enumerable: true,
        configurable: true
    });
    return UserData;
}());
exports.default = UserData;
},{}],21:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventManager_1 = require("../tool/EventManager");
var EventKey_1 = require("../Tool/EventKey");
var BaseFilter = /** @class */ (function (_super) {
    __extends(BaseFilter, _super);
    function BaseFilter() {
        var _this = _super.call(this) || this;
        _this.filterList = [];
        return _this;
    }
    BaseFilter.prototype.onEnable = function () {
        EventManager_1.default.on(EventKey_1.default.ENTER_FRAME, this, this.updateFilter);
    };
    BaseFilter.prototype.onDisable = function () {
        EventManager_1.default.offAllCaller(this);
    };
    BaseFilter.prototype.updateFilter = function () {
        var _length = this.filterList.length;
        if (_length) {
            for (var i = this.filterList.length - 1; i >= 0; i--) {
                var obj = this.filterList[i];
                if (obj.hasOwnProperty("frame")) {
                    obj.frame--;
                    if (obj.frame <= 0) {
                        this.filterList.splice(i, 1);
                    }
                }
            }
            _length = this.filterList.length;
            var cf;
            // if (_length) {
            // 	var id = this.filterList[_length - 1].id;
            // 	cf = new Laya.ColorFilter(ColorMatrixInfo.getMatrix(id));
            // } else {
            // 	cf = new Laya.ColorFilter([1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0]);
            // }
            cf = new Laya.ColorFilter([1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0]);
            this.filters = [cf];
        }
    };
    BaseFilter.prototype.addTimerFilter = function (id, frame) {
        this.removeFilter(id);
        this.filterList.push({ "id": id, "frame": frame });
    };
    BaseFilter.prototype.addFilter = function (id) {
        this.removeFilter(id);
        this.filterList.push({ "id": id });
    };
    BaseFilter.prototype.removeFilter = function (id) {
        for (var i = this.filterList.length - 1; i >= 0; i--) {
            var obj = this.filterList[i];
            if (obj.id == id) {
                this.filterList.splice(i, 1);
                break;
            }
        }
    };
    BaseFilter.prototype.clearFilter = function () {
        this.filterList = [];
    };
    return BaseFilter;
}(Laya.Sprite));
exports.default = BaseFilter;
},{"../Tool/EventKey":6,"../tool/EventManager":195}],22:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseFilter_1 = require("../base/BaseFilter");
var EventManager_1 = require("../tool/EventManager");
var TempletManager_1 = require("../Tool/TempletManager");
var BaseSK = /** @class */ (function (_super) {
    __extends(BaseSK, _super);
    function BaseSK(key) {
        var _this = _super.call(this) || this;
        _this._key = "";
        _this._skeleton = null;
        _this._currAnimation = "";
        _this._isLoop = true;
        _this._isPause = false;
        _this._speed = 1;
        _this._lableHandlerList = [];
        _this._stopHandlerList = [];
        _this._key = key;
        var _templet = TempletManager_1.default.getTemplet(_this._key);
        if (_templet) {
            _this.init(_templet);
        }
        else {
            EventManager_1.default.on(TempletManager_1.default.TEMPLET_INIT_COMPLETE, _this, _this.templetInitOver);
            //添加高权资源
        }
        return _this;
    }
    BaseSK.create = function (key) {
        return new BaseSK(key);
    };
    BaseSK.prototype.onDisable = function () {
        EventManager_1.default.offAllCaller(this);
        if (this._skeleton)
            this._skeleton.offAll();
    };
    Object.defineProperty(BaseSK.prototype, "key", {
        get: function () {
            return this._key;
        },
        enumerable: true,
        configurable: true
    });
    BaseSK.prototype.templetInitOver = function (key, templet) {
        if (key != this._key)
            return;
        EventManager_1.default.off(TempletManager_1.default.TEMPLET_INIT_COMPLETE, this, this.templetInitOver);
        this.init(templet);
    };
    BaseSK.prototype.init = function (templet) {
        this._skeleton = templet.buildArmature(0);
        this._skeleton.x = 0;
        this._skeleton.y = 0;
        this.addChild(this._skeleton);
        if (this._currAnimation)
            this._skeleton.play(this._currAnimation, this._isLoop);
        var num = this._skeleton.getAnimNum();
        if (this._isPause)
            this._skeleton.paused();
        this.speed = this._speed;
        for (var i = 0; i < this._lableHandlerList.length; i++) {
            var _handler = this._lableHandlerList[i];
            this._skeleton.on(Laya.Event.LABEL, _handler.caller, _handler.method, _handler.args);
        }
        for (var i = 0; i < this._stopHandlerList.length; i++) {
            var _handler = this._stopHandlerList[i];
            this._skeleton.on(Laya.Event.STOPPED, _handler.caller, _handler.method, _handler.args);
        }
        this._lableHandlerList = [];
        this._stopHandlerList = [];
    };
    Object.defineProperty(BaseSK.prototype, "skeleton", {
        get: function () {
            return this._skeleton;
        },
        enumerable: true,
        configurable: true
    });
    BaseSK.prototype.addLableEvent = function (handler) {
        if (this._skeleton) {
            this._skeleton.on(Laya.Event.LABEL, handler.caller, handler.method, handler.args);
        }
        else {
            this._lableHandlerList.push(handler);
        }
    };
    BaseSK.prototype.removeLableEvent = function (handler) {
        if (this._skeleton) {
            this._skeleton.off(Laya.Event.LABEL, handler.caller, handler.method);
        }
        else {
            if (this._lableHandlerList.length) {
                for (var i = this._lableHandlerList.length - 1; i >= 0; i--) {
                    var _handler = this._lableHandlerList[i];
                    if (_handler.caller == handler.caller && _handler.method == handler.method) {
                        this._lableHandlerList.splice(i, 1);
                    }
                }
            }
        }
    };
    BaseSK.prototype.addStopEvent = function (handler) {
        if (this._skeleton) {
            this._skeleton.on(Laya.Event.STOPPED, handler.caller, handler.method, handler.args);
        }
        else {
            this._stopHandlerList.push(handler);
        }
    };
    BaseSK.prototype.removeStopEvent = function (handler) {
        if (this._skeleton) {
            this._skeleton.off(Laya.Event.STOPPED, handler.caller, handler.method);
        }
        else {
            if (this._stopHandlerList.length) {
                for (var i = this._stopHandlerList.length - 1; i >= 0; i--) {
                    var _handler = this._stopHandlerList[i];
                    if (_handler.caller == handler.caller && _handler.method == handler.method) {
                        this._stopHandlerList.splice(i, 1);
                    }
                }
            }
        }
    };
    BaseSK.prototype.play = function (animation, loop) {
        if (this._skeleton) {
            if (this._skeleton.templet) {
                this._skeleton.play(animation, loop);
            }
        }
        else {
            this._currAnimation = animation;
            this._isLoop = loop;
        }
    };
    BaseSK.prototype.stop = function () {
        if (this._skeleton) {
            this._skeleton.paused();
        }
        else {
            this._isPause = true;
        }
    };
    Object.defineProperty(BaseSK.prototype, "speed", {
        /**
         * 动画的播放速度 [ 0: 停止播放, (0~1): 慢速播放, 1: 正常播放, (1~N): 快速播放 ]
         */
        set: function (v) {
            if (this._skeleton) {
                this._skeleton.playbackRate(v);
            }
            else {
                this._speed = v;
            }
        },
        enumerable: true,
        configurable: true
    });
    BaseSK.prototype.pauseAni = function () {
        if (this._skeleton) {
            this._skeleton.paused();
        }
    };
    BaseSK.prototype.resumeAni = function () {
        if (this._skeleton) {
            this._skeleton.resume();
        }
    };
    return BaseSK;
}(BaseFilter_1.default));
exports.default = BaseSK;
},{"../Tool/TempletManager":17,"../base/BaseFilter":21,"../tool/EventManager":195}],23:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Tool/Dictionary");
var AssociationAttributeInfo = /** @class */ (function () {
    function AssociationAttributeInfo(id) {
        this.curInf = new Dictionary_1.default();
        this.curInf = AssociationAttributeInfo.infDic.getValue(id);
    }
    AssociationAttributeInfo.serverInit = function (infDic) {
        this.infDic.clear();
        this.infDic = infDic;
    };
    Object.defineProperty(AssociationAttributeInfo.prototype, "id", {
        get: function () {
            return Number(this.curInf.getValue("id"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AssociationAttributeInfo.prototype, "name", {
        get: function () {
            return String(this.curInf.getValue("name"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AssociationAttributeInfo.prototype, "des", {
        get: function () {
            return String(this.curInf.getValue("des"));
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 依据id获得配置信息
     * @param id 配置id
     */
    AssociationAttributeInfo.getInfo = function (id) {
        var ids = String(id);
        if (this.infDic.hasKey(ids)) {
            return new AssociationAttributeInfo(ids);
        }
        return null;
    };
    AssociationAttributeInfo.getList = function () {
        if (this.infList == null) {
            var list = this.infDic.getKeys();
            this.infList = [];
            for (var i = 0, len = list.length; i < len; i++) {
                this.infList.push(new AssociationAttributeInfo(list[i]));
            }
        }
        return this.infList;
    };
    AssociationAttributeInfo.init = function () {
        this.infDic = new Dictionary_1.default();
        var dic1 = new Dictionary_1.default();
        dic1.add("id", "1");
        dic1.add("name", "atk");
        dic1.add("des", "普通攻击力增加{0}%");
        this.infDic.add("1", dic1);
        var dic2 = new Dictionary_1.default();
        dic2.add("id", "2");
        dic2.add("name", "atk_cirt");
        dic2.add("des", "普通攻击暴击率增加{0}%");
        this.infDic.add("2", dic2);
        var dic3 = new Dictionary_1.default();
        dic3.add("id", "3");
        dic3.add("name", "atk_speed");
        dic3.add("des", "攻速增加{0}%");
        this.infDic.add("3", dic3);
        var dic4 = new Dictionary_1.default();
        dic4.add("id", "4");
        dic4.add("name", "reduce_defense");
        dic4.add("des", "减防{0}%");
        this.infDic.add("4", dic4);
        var dic5 = new Dictionary_1.default();
        dic5.add("id", "5");
        dic5.add("name", "slow_atk");
        dic5.add("des", "减速攻击{0}%");
        this.infDic.add("5", dic5);
        var dic6 = new Dictionary_1.default();
        dic6.add("id", "6");
        dic6.add("name", "reduce_skill_cd");
        dic6.add("des", "技能冷却时间减少{0}%");
        this.infDic.add("6", dic6);
        var dic7 = new Dictionary_1.default();
        dic7.add("id", "7");
        dic7.add("name", "burning");
        dic7.add("des", "灼烧攻击加{0}");
        this.infDic.add("7", dic7);
        var dic8 = new Dictionary_1.default();
        dic8.add("id", "8");
        dic8.add("name", "atk_burst");
        dic8.add("des", "普通攻击爆伤增加{0}%");
        this.infDic.add("8", dic8);
        var dic9 = new Dictionary_1.default();
        dic9.add("id", "9");
        dic9.add("name", "poisoning");
        dic9.add("des", "中毒攻击增加{0}");
        this.infDic.add("9", dic9);
        var dic10 = new Dictionary_1.default();
        dic10.add("id", "10");
        dic10.add("name", "burning_field");
        dic10.add("des", "灼烧场{0}%");
        this.infDic.add("10", dic10);
        var dic11 = new Dictionary_1.default();
        dic11.add("id", "11");
        dic11.add("name", "ak_range");
        dic11.add("des", "攻击范围增加{0}%");
        this.infDic.add("11", dic11);
        var dic12 = new Dictionary_1.default();
        dic12.add("id", "12");
        dic12.add("name", "skill_atk");
        dic12.add("des", "技能攻击力增加{0}%");
        this.infDic.add("12", dic12);
    };
    AssociationAttributeInfo.infDic = new Dictionary_1.default();
    AssociationAttributeInfo.infList = null;
    return AssociationAttributeInfo;
}());
exports.default = AssociationAttributeInfo;
},{"../Tool/Dictionary":5}],24:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Tool/Dictionary");
var AssociationCareerInfo = /** @class */ (function () {
    function AssociationCareerInfo(id) {
        this.curInf = new Dictionary_1.default();
        this.curInf = AssociationCareerInfo.infDic.getValue(id);
    }
    AssociationCareerInfo.serverInit = function (infDic) {
        this.infDic.clear();
        this.infDic = infDic;
    };
    Object.defineProperty(AssociationCareerInfo.prototype, "id", {
        get: function () {
            return Number(this.curInf.getValue("id"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AssociationCareerInfo.prototype, "career", {
        get: function () {
            return Number(this.curInf.getValue("career"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AssociationCareerInfo.prototype, "num", {
        get: function () {
            return Number(this.curInf.getValue("num"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AssociationCareerInfo.prototype, "attribute", {
        get: function () {
            return Number(this.curInf.getValue("attribute"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AssociationCareerInfo.prototype, "value", {
        get: function () {
            return Number(this.curInf.getValue("value"));
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 依据id获得配置信息
     * @param id 配置id
     */
    AssociationCareerInfo.getInfo = function (id) {
        var ids = String(id);
        if (this.infDic.hasKey(ids)) {
            return new AssociationCareerInfo(ids);
        }
        return null;
    };
    AssociationCareerInfo.getList = function () {
        if (this.infList == null) {
            var list = this.infDic.getKeys();
            this.infList = [];
            for (var i = 0, len = list.length; i < len; i++) {
                this.infList.push(new AssociationCareerInfo(list[i]));
            }
        }
        return this.infList;
    };
    AssociationCareerInfo.init = function () {
        this.infDic = new Dictionary_1.default();
        var dic1 = new Dictionary_1.default();
        dic1.add("id", "1");
        dic1.add("career", "101");
        dic1.add("num", "3");
        dic1.add("attribute", "6");
        dic1.add("value", "5");
        this.infDic.add("1", dic1);
        var dic2 = new Dictionary_1.default();
        dic2.add("id", "2");
        dic2.add("career", "101");
        dic2.add("num", "4");
        dic2.add("attribute", "6");
        dic2.add("value", "10");
        this.infDic.add("2", dic2);
        var dic3 = new Dictionary_1.default();
        dic3.add("id", "3");
        dic3.add("career", "101");
        dic3.add("num", "5");
        dic3.add("attribute", "6");
        dic3.add("value", "15");
        this.infDic.add("3", dic3);
        var dic4 = new Dictionary_1.default();
        dic4.add("id", "4");
        dic4.add("career", "102");
        dic4.add("num", "2");
        dic4.add("attribute", "7");
        dic4.add("value", "6");
        this.infDic.add("4", dic4);
        var dic5 = new Dictionary_1.default();
        dic5.add("id", "5");
        dic5.add("career", "102");
        dic5.add("num", "3");
        dic5.add("attribute", "7");
        dic5.add("value", "7");
        this.infDic.add("5", dic5);
        var dic6 = new Dictionary_1.default();
        dic6.add("id", "6");
        dic6.add("career", "102");
        dic6.add("num", "4");
        dic6.add("attribute", "7");
        dic6.add("value", "8");
        this.infDic.add("6", dic6);
        var dic7 = new Dictionary_1.default();
        dic7.add("id", "7");
        dic7.add("career", "103");
        dic7.add("num", "2");
        dic7.add("attribute", "8");
        dic7.add("value", "20");
        this.infDic.add("7", dic7);
        var dic8 = new Dictionary_1.default();
        dic8.add("id", "8");
        dic8.add("career", "103");
        dic8.add("num", "3");
        dic8.add("attribute", "8");
        dic8.add("value", "40");
        this.infDic.add("8", dic8);
        var dic9 = new Dictionary_1.default();
        dic9.add("id", "9");
        dic9.add("career", "103");
        dic9.add("num", "4");
        dic9.add("attribute", "8");
        dic9.add("value", "60");
        this.infDic.add("9", dic9);
        var dic10 = new Dictionary_1.default();
        dic10.add("id", "10");
        dic10.add("career", "104");
        dic10.add("num", "2");
        dic10.add("attribute", "9");
        dic10.add("value", "6");
        this.infDic.add("10", dic10);
        var dic11 = new Dictionary_1.default();
        dic11.add("id", "11");
        dic11.add("career", "104");
        dic11.add("num", "3");
        dic11.add("attribute", "9");
        dic11.add("value", "7");
        this.infDic.add("11", dic11);
        var dic12 = new Dictionary_1.default();
        dic12.add("id", "12");
        dic12.add("career", "104");
        dic12.add("num", "4");
        dic12.add("attribute", "9");
        dic12.add("value", "8");
        this.infDic.add("12", dic12);
        var dic13 = new Dictionary_1.default();
        dic13.add("id", "13");
        dic13.add("career", "105");
        dic13.add("num", "2");
        dic13.add("attribute", "10");
        dic13.add("value", "30");
        this.infDic.add("13", dic13);
        var dic14 = new Dictionary_1.default();
        dic14.add("id", "14");
        dic14.add("career", "105");
        dic14.add("num", "3");
        dic14.add("attribute", "10");
        dic14.add("value", "40");
        this.infDic.add("14", dic14);
        var dic15 = new Dictionary_1.default();
        dic15.add("id", "15");
        dic15.add("career", "105");
        dic15.add("num", "4");
        dic15.add("attribute", "10");
        dic15.add("value", "50");
        this.infDic.add("15", dic15);
        var dic16 = new Dictionary_1.default();
        dic16.add("id", "16");
        dic16.add("career", "106");
        dic16.add("num", "2");
        dic16.add("attribute", "11");
        dic16.add("value", "5");
        this.infDic.add("16", dic16);
        var dic17 = new Dictionary_1.default();
        dic17.add("id", "17");
        dic17.add("career", "106");
        dic17.add("num", "3");
        dic17.add("attribute", "11");
        dic17.add("value", "10");
        this.infDic.add("17", dic17);
        var dic18 = new Dictionary_1.default();
        dic18.add("id", "18");
        dic18.add("career", "106");
        dic18.add("num", "4");
        dic18.add("attribute", "11");
        dic18.add("value", "15");
        this.infDic.add("18", dic18);
        var dic19 = new Dictionary_1.default();
        dic19.add("id", "19");
        dic19.add("career", "107");
        dic19.add("num", "2");
        dic19.add("attribute", "12");
        dic19.add("value", "5");
        this.infDic.add("19", dic19);
        var dic20 = new Dictionary_1.default();
        dic20.add("id", "20");
        dic20.add("career", "107");
        dic20.add("num", "3");
        dic20.add("attribute", "12");
        dic20.add("value", "10");
        this.infDic.add("20", dic20);
        var dic21 = new Dictionary_1.default();
        dic21.add("id", "21");
        dic21.add("career", "107");
        dic21.add("num", "4");
        dic21.add("attribute", "12");
        dic21.add("value", "15");
        this.infDic.add("21", dic21);
    };
    AssociationCareerInfo.infDic = new Dictionary_1.default();
    AssociationCareerInfo.infList = null;
    return AssociationCareerInfo;
}());
exports.default = AssociationCareerInfo;
},{"../Tool/Dictionary":5}],25:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Tool/Dictionary");
var AssociationRaceInfo = /** @class */ (function () {
    function AssociationRaceInfo(id) {
        this.curInf = new Dictionary_1.default();
        this.curInf = AssociationRaceInfo.infDic.getValue(id);
    }
    AssociationRaceInfo.serverInit = function (infDic) {
        this.infDic.clear();
        this.infDic = infDic;
    };
    Object.defineProperty(AssociationRaceInfo.prototype, "id", {
        get: function () {
            return Number(this.curInf.getValue("id"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AssociationRaceInfo.prototype, "race", {
        get: function () {
            return Number(this.curInf.getValue("race"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AssociationRaceInfo.prototype, "num", {
        get: function () {
            return Number(this.curInf.getValue("num"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AssociationRaceInfo.prototype, "attribute", {
        get: function () {
            return Number(this.curInf.getValue("attribute"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AssociationRaceInfo.prototype, "value", {
        get: function () {
            return Number(this.curInf.getValue("value"));
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 依据id获得配置信息
     * @param id 配置id
     */
    AssociationRaceInfo.getInfo = function (id) {
        var ids = String(id);
        if (this.infDic.hasKey(ids)) {
            return new AssociationRaceInfo(ids);
        }
        return null;
    };
    AssociationRaceInfo.getList = function () {
        if (this.infList == null) {
            var list = this.infDic.getKeys();
            this.infList = [];
            for (var i = 0, len = list.length; i < len; i++) {
                this.infList.push(new AssociationRaceInfo(list[i]));
            }
        }
        return this.infList;
    };
    AssociationRaceInfo.init = function () {
        this.infDic = new Dictionary_1.default();
        var dic1 = new Dictionary_1.default();
        dic1.add("id", "1");
        dic1.add("race", "1");
        dic1.add("num", "3");
        dic1.add("attribute", "1");
        dic1.add("value", "5");
        this.infDic.add("1", dic1);
        var dic2 = new Dictionary_1.default();
        dic2.add("id", "2");
        dic2.add("race", "1");
        dic2.add("num", "4");
        dic2.add("attribute", "1");
        dic2.add("value", "10");
        this.infDic.add("2", dic2);
        var dic3 = new Dictionary_1.default();
        dic3.add("id", "3");
        dic3.add("race", "1");
        dic3.add("num", "5");
        dic3.add("attribute", "1");
        dic3.add("value", "15");
        this.infDic.add("3", dic3);
        var dic4 = new Dictionary_1.default();
        dic4.add("id", "4");
        dic4.add("race", "2");
        dic4.add("num", "3");
        dic4.add("attribute", "2");
        dic4.add("value", "5");
        this.infDic.add("4", dic4);
        var dic5 = new Dictionary_1.default();
        dic5.add("id", "5");
        dic5.add("race", "2");
        dic5.add("num", "4");
        dic5.add("attribute", "2");
        dic5.add("value", "10");
        this.infDic.add("5", dic5);
        var dic6 = new Dictionary_1.default();
        dic6.add("id", "6");
        dic6.add("race", "2");
        dic6.add("num", "6");
        dic6.add("attribute", "2");
        dic6.add("value", "15");
        this.infDic.add("6", dic6);
        var dic7 = new Dictionary_1.default();
        dic7.add("id", "7");
        dic7.add("race", "3");
        dic7.add("num", "4");
        dic7.add("attribute", "3");
        dic7.add("value", "10");
        this.infDic.add("7", dic7);
        var dic8 = new Dictionary_1.default();
        dic8.add("id", "8");
        dic8.add("race", "3");
        dic8.add("num", "5");
        dic8.add("attribute", "3");
        dic8.add("value", "15");
        this.infDic.add("8", dic8);
        var dic9 = new Dictionary_1.default();
        dic9.add("id", "9");
        dic9.add("race", "3");
        dic9.add("num", "6");
        dic9.add("attribute", "3");
        dic9.add("value", "20");
        this.infDic.add("9", dic9);
        var dic10 = new Dictionary_1.default();
        dic10.add("id", "10");
        dic10.add("race", "4");
        dic10.add("num", "3");
        dic10.add("attribute", "4");
        dic10.add("value", "5");
        this.infDic.add("10", dic10);
        var dic11 = new Dictionary_1.default();
        dic11.add("id", "11");
        dic11.add("race", "4");
        dic11.add("num", "4");
        dic11.add("attribute", "4");
        dic11.add("value", "10");
        this.infDic.add("11", dic11);
        var dic12 = new Dictionary_1.default();
        dic12.add("id", "12");
        dic12.add("race", "4");
        dic12.add("num", "6");
        dic12.add("attribute", "4");
        dic12.add("value", "15");
        this.infDic.add("12", dic12);
        var dic13 = new Dictionary_1.default();
        dic13.add("id", "13");
        dic13.add("race", "5");
        dic13.add("num", "3");
        dic13.add("attribute", "5");
        dic13.add("value", "10");
        this.infDic.add("13", dic13);
        var dic14 = new Dictionary_1.default();
        dic14.add("id", "14");
        dic14.add("race", "5");
        dic14.add("num", "4");
        dic14.add("attribute", "5");
        dic14.add("value", "15");
        this.infDic.add("14", dic14);
        var dic15 = new Dictionary_1.default();
        dic15.add("id", "15");
        dic15.add("race", "5");
        dic15.add("num", "5");
        dic15.add("attribute", "5");
        dic15.add("value", "20");
        this.infDic.add("15", dic15);
    };
    AssociationRaceInfo.infDic = new Dictionary_1.default();
    AssociationRaceInfo.infList = null;
    return AssociationRaceInfo;
}());
exports.default = AssociationRaceInfo;
},{"../Tool/Dictionary":5}],26:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Tool/Dictionary");
var AssociationSpecialInfo = /** @class */ (function () {
    function AssociationSpecialInfo(id) {
        this.curInf = new Dictionary_1.default();
        this.curInf = AssociationSpecialInfo.infDic.getValue(id);
    }
    AssociationSpecialInfo.serverInit = function (infDic) {
        this.infDic.clear();
        this.infDic = infDic;
    };
    Object.defineProperty(AssociationSpecialInfo.prototype, "id", {
        get: function () {
            return Number(this.curInf.getValue("id"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AssociationSpecialInfo.prototype, "name", {
        get: function () {
            return String(this.curInf.getValue("name"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AssociationSpecialInfo.prototype, "hero1", {
        get: function () {
            return Number(this.curInf.getValue("hero1"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AssociationSpecialInfo.prototype, "hero2", {
        get: function () {
            return Number(this.curInf.getValue("hero2"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AssociationSpecialInfo.prototype, "hero3", {
        get: function () {
            return Number(this.curInf.getValue("hero3"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AssociationSpecialInfo.prototype, "hero4", {
        get: function () {
            return Number(this.curInf.getValue("hero4"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AssociationSpecialInfo.prototype, "hero5", {
        get: function () {
            return Number(this.curInf.getValue("hero5"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AssociationSpecialInfo.prototype, "attribute", {
        get: function () {
            return Number(this.curInf.getValue("attribute"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AssociationSpecialInfo.prototype, "value", {
        get: function () {
            return Number(this.curInf.getValue("value"));
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 依据id获得配置信息
     * @param id 配置id
     */
    AssociationSpecialInfo.getInfo = function (id) {
        var ids = String(id);
        if (this.infDic.hasKey(ids)) {
            return new AssociationSpecialInfo(ids);
        }
        return null;
    };
    AssociationSpecialInfo.getList = function () {
        if (this.infList == null) {
            var list = this.infDic.getKeys();
            this.infList = [];
            for (var i = 0, len = list.length; i < len; i++) {
                this.infList.push(new AssociationSpecialInfo(list[i]));
            }
        }
        return this.infList;
    };
    AssociationSpecialInfo.init = function () {
        this.infDic = new Dictionary_1.default();
        var dic1 = new Dictionary_1.default();
        dic1.add("id", "1");
        dic1.add("name", "龙之怒吼");
        dic1.add("hero1", "1");
        dic1.add("hero2", "2");
        dic1.add("hero3", "0");
        dic1.add("hero4", "0");
        dic1.add("hero5", "0");
        dic1.add("attribute", "1");
        dic1.add("value", "1");
        this.infDic.add("1", dic1);
    };
    AssociationSpecialInfo.infDic = new Dictionary_1.default();
    AssociationSpecialInfo.infList = null;
    return AssociationSpecialInfo;
}());
exports.default = AssociationSpecialInfo;
},{"../Tool/Dictionary":5}],27:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AssociationAttributeInfo_1 = require("./AssociationAttributeInfo");
var AssociationCareerInfo_1 = require("./AssociationCareerInfo");
var AssociationRaceInfo_1 = require("./AssociationRaceInfo");
var AssociationSpecialInfo_1 = require("./AssociationSpecialInfo");
var DifficultyEfficiencyInfo_1 = require("./DifficultyEfficiencyInfo");
var FiveElementsInfo_1 = require("./FiveElementsInfo");
var HeroInfo_1 = require("./HeroInfo");
var HeroTypeInfo_1 = require("./HeroTypeInfo");
var MonsterInfo_1 = require("./MonsterInfo");
var NormalSkillInfo_1 = require("./NormalSkillInfo");
var PlaySkillInfo_1 = require("./PlaySkillInfo");
var SkillInfo_1 = require("./SkillInfo");
var SkillHitTypeInfo_1 = require("./SkillHitTypeInfo");
var TimeHouseInfo_1 = require("./TimeHouseInfo");
var TrialInfo_1 = require("./TrialInfo");
var WaveInfo_1 = require("./WaveInfo");
var WaveformInfo_1 = require("./WaveformInfo");
// 会自动覆盖
var CSVConfig = /** @class */ (function () {
    function CSVConfig() {
    }
    CSVConfig.InitAll = function () {
        AssociationAttributeInfo_1.default.init();
        AssociationCareerInfo_1.default.init();
        AssociationRaceInfo_1.default.init();
        AssociationSpecialInfo_1.default.init();
        DifficultyEfficiencyInfo_1.default.init();
        FiveElementsInfo_1.default.init();
        HeroInfo_1.default.init();
        HeroTypeInfo_1.default.init();
        MonsterInfo_1.default.init();
        NormalSkillInfo_1.default.init();
        PlaySkillInfo_1.default.init();
        SkillInfo_1.default.init();
        SkillHitTypeInfo_1.default.init();
        TimeHouseInfo_1.default.init();
        TrialInfo_1.default.init();
        WaveInfo_1.default.init();
        WaveformInfo_1.default.init();
    };
    return CSVConfig;
}());
exports.default = CSVConfig;
},{"./AssociationAttributeInfo":23,"./AssociationCareerInfo":24,"./AssociationRaceInfo":25,"./AssociationSpecialInfo":26,"./DifficultyEfficiencyInfo":28,"./FiveElementsInfo":29,"./HeroInfo":30,"./HeroTypeInfo":31,"./MonsterInfo":32,"./NormalSkillInfo":33,"./PlaySkillInfo":34,"./SkillHitTypeInfo":36,"./SkillInfo":37,"./TimeHouseInfo":38,"./TrialInfo":39,"./WaveInfo":40,"./WaveformInfo":41}],28:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Tool/Dictionary");
var DifficultyEfficiencyInfo = /** @class */ (function () {
    function DifficultyEfficiencyInfo(id) {
        this.curInf = new Dictionary_1.default();
        this.curInf = DifficultyEfficiencyInfo.infDic.getValue(id);
    }
    DifficultyEfficiencyInfo.serverInit = function (infDic) {
        this.infDic.clear();
        this.infDic = infDic;
    };
    Object.defineProperty(DifficultyEfficiencyInfo.prototype, "id", {
        get: function () {
            return Number(this.curInf.getValue("id"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DifficultyEfficiencyInfo.prototype, "difficulty", {
        get: function () {
            return Number(this.curInf.getValue("difficulty"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DifficultyEfficiencyInfo.prototype, "val", {
        get: function () {
            return Number(this.curInf.getValue("val"));
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 依据id获得配置信息
     * @param id 配置id
     */
    DifficultyEfficiencyInfo.getInfo = function (id) {
        var ids = String(id);
        if (this.infDic.hasKey(ids)) {
            return new DifficultyEfficiencyInfo(ids);
        }
        return null;
    };
    DifficultyEfficiencyInfo.getList = function () {
        if (this.infList == null) {
            var list = this.infDic.getKeys();
            this.infList = [];
            for (var i = 0, len = list.length; i < len; i++) {
                this.infList.push(new DifficultyEfficiencyInfo(list[i]));
            }
        }
        return this.infList;
    };
    DifficultyEfficiencyInfo.init = function () {
        this.infDic = new Dictionary_1.default();
        var dic1 = new Dictionary_1.default();
        dic1.add("id", "1");
        dic1.add("difficulty", "1");
        dic1.add("val", "0.2");
        this.infDic.add("1", dic1);
        var dic2 = new Dictionary_1.default();
        dic2.add("id", "2");
        dic2.add("difficulty", "2");
        dic2.add("val", "0.22");
        this.infDic.add("2", dic2);
        var dic3 = new Dictionary_1.default();
        dic3.add("id", "3");
        dic3.add("difficulty", "3");
        dic3.add("val", "0.24");
        this.infDic.add("3", dic3);
        var dic4 = new Dictionary_1.default();
        dic4.add("id", "4");
        dic4.add("difficulty", "4");
        dic4.add("val", "0.26");
        this.infDic.add("4", dic4);
        var dic5 = new Dictionary_1.default();
        dic5.add("id", "5");
        dic5.add("difficulty", "5");
        dic5.add("val", "0.28");
        this.infDic.add("5", dic5);
        var dic6 = new Dictionary_1.default();
        dic6.add("id", "6");
        dic6.add("difficulty", "6");
        dic6.add("val", "0.3");
        this.infDic.add("6", dic6);
        var dic7 = new Dictionary_1.default();
        dic7.add("id", "7");
        dic7.add("difficulty", "7");
        dic7.add("val", "0.32");
        this.infDic.add("7", dic7);
        var dic8 = new Dictionary_1.default();
        dic8.add("id", "8");
        dic8.add("difficulty", "8");
        dic8.add("val", "0.34");
        this.infDic.add("8", dic8);
        var dic9 = new Dictionary_1.default();
        dic9.add("id", "9");
        dic9.add("difficulty", "9");
        dic9.add("val", "0.36");
        this.infDic.add("9", dic9);
        var dic10 = new Dictionary_1.default();
        dic10.add("id", "10");
        dic10.add("difficulty", "10");
        dic10.add("val", "0.38");
        this.infDic.add("10", dic10);
    };
    DifficultyEfficiencyInfo.infDic = new Dictionary_1.default();
    DifficultyEfficiencyInfo.infList = null;
    return DifficultyEfficiencyInfo;
}());
exports.default = DifficultyEfficiencyInfo;
},{"../Tool/Dictionary":5}],29:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Tool/Dictionary");
var FiveElementsInfo = /** @class */ (function () {
    function FiveElementsInfo(id) {
        this.curInf = new Dictionary_1.default();
        this.curInf = FiveElementsInfo.infDic.getValue(id);
    }
    FiveElementsInfo.serverInit = function (infDic) {
        this.infDic.clear();
        this.infDic = infDic;
    };
    Object.defineProperty(FiveElementsInfo.prototype, "id", {
        get: function () {
            return Number(this.curInf.getValue("id"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FiveElementsInfo.prototype, "type", {
        get: function () {
            return Number(this.curInf.getValue("type"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FiveElementsInfo.prototype, "name", {
        get: function () {
            return String(this.curInf.getValue("name"));
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 依据id获得配置信息
     * @param id 配置id
     */
    FiveElementsInfo.getInfo = function (id) {
        var ids = String(id);
        if (this.infDic.hasKey(ids)) {
            return new FiveElementsInfo(ids);
        }
        return null;
    };
    FiveElementsInfo.getInfoWithType = function (type) {
        var list = FiveElementsInfo.getList();
        for (var i = list.length - 1; i >= 0; i--) {
            if (list[i].type == type) {
                return list[i];
            }
        }
        return null;
    };
    FiveElementsInfo.getList = function () {
        if (this.infList == null) {
            var list = this.infDic.getKeys();
            this.infList = [];
            for (var i = 0, len = list.length; i < len; i++) {
                this.infList.push(new FiveElementsInfo(list[i]));
            }
        }
        return this.infList;
    };
    FiveElementsInfo.init = function () {
        this.infDic = new Dictionary_1.default();
        var dic1 = new Dictionary_1.default();
        dic1.add("id", "1");
        dic1.add("type", "1");
        dic1.add("name", "火");
        this.infDic.add("1", dic1);
        var dic2 = new Dictionary_1.default();
        dic2.add("id", "2");
        dic2.add("type", "2");
        dic2.add("name", "金");
        this.infDic.add("2", dic2);
        var dic3 = new Dictionary_1.default();
        dic3.add("id", "3");
        dic3.add("type", "3");
        dic3.add("name", "木");
        this.infDic.add("3", dic3);
        var dic4 = new Dictionary_1.default();
        dic4.add("id", "4");
        dic4.add("type", "4");
        dic4.add("name", "水");
        this.infDic.add("4", dic4);
        var dic5 = new Dictionary_1.default();
        dic5.add("id", "5");
        dic5.add("type", "5");
        dic5.add("name", "土");
        this.infDic.add("5", dic5);
        var dic6 = new Dictionary_1.default();
        dic6.add("id", "6");
        dic6.add("type", "101");
        dic6.add("name", "兜率宫");
        this.infDic.add("6", dic6);
        var dic7 = new Dictionary_1.default();
        dic7.add("id", "7");
        dic7.add("type", "102");
        dic7.add("name", "凌霄殿");
        this.infDic.add("7", dic7);
        var dic8 = new Dictionary_1.default();
        dic8.add("id", "8");
        dic8.add("type", "103");
        dic8.add("name", "碧波潭");
        this.infDic.add("8", dic8);
        var dic9 = new Dictionary_1.default();
        dic9.add("id", "9");
        dic9.add("type", "104");
        dic9.add("name", "盘丝洞");
        this.infDic.add("9", dic9);
        var dic10 = new Dictionary_1.default();
        dic10.add("id", "10");
        dic10.add("type", "105");
        dic10.add("name", "魔王寨");
        this.infDic.add("10", dic10);
        var dic11 = new Dictionary_1.default();
        dic11.add("id", "11");
        dic11.add("type", "106");
        dic11.add("name", "紫竹林");
        this.infDic.add("11", dic11);
        var dic12 = new Dictionary_1.default();
        dic12.add("id", "12");
        dic12.add("type", "107");
        dic12.add("name", "狮驼铃");
        this.infDic.add("12", dic12);
    };
    FiveElementsInfo.infDic = new Dictionary_1.default();
    FiveElementsInfo.infList = null;
    return FiveElementsInfo;
}());
exports.default = FiveElementsInfo;
},{"../Tool/Dictionary":5}],30:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Tool/Dictionary");
var HeroInfo = /** @class */ (function () {
    function HeroInfo(id) {
        this.curInf = new Dictionary_1.default();
        this.curInf = HeroInfo.infDic.getValue(id);
    }
    HeroInfo.serverInit = function (infDic) {
        this.infDic.clear();
        this.infDic = infDic;
    };
    Object.defineProperty(HeroInfo.prototype, "id", {
        get: function () {
            return Number(this.curInf.getValue("id"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeroInfo.prototype, "name", {
        get: function () {
            return String(this.curInf.getValue("name"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeroInfo.prototype, "story", {
        get: function () {
            return String(this.curInf.getValue("story"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeroInfo.prototype, "quality", {
        get: function () {
            return Number(this.curInf.getValue("quality"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeroInfo.prototype, "type", {
        get: function () {
            return Number(this.curInf.getValue("type"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeroInfo.prototype, "race", {
        get: function () {
            return Number(this.curInf.getValue("race"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeroInfo.prototype, "career", {
        get: function () {
            return Number(this.curInf.getValue("career"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeroInfo.prototype, "point_fetters", {
        get: function () {
            return Number(this.curInf.getValue("point_fetters"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeroInfo.prototype, "range", {
        get: function () {
            return Number(this.curInf.getValue("range"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeroInfo.prototype, "normal_id", {
        get: function () {
            return Number(this.curInf.getValue("normal_id"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeroInfo.prototype, "normal_cd", {
        get: function () {
            return Number(this.curInf.getValue("normal_cd"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeroInfo.prototype, "normal_attack", {
        get: function () {
            return Number(this.curInf.getValue("normal_attack"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeroInfo.prototype, "normal_crit", {
        get: function () {
            return Number(this.curInf.getValue("normal_crit"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeroInfo.prototype, "normal_burst", {
        get: function () {
            return Number(this.curInf.getValue("normal_burst"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeroInfo.prototype, "skill_id", {
        get: function () {
            return Number(this.curInf.getValue("skill_id"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeroInfo.prototype, "skill_cd", {
        get: function () {
            return Number(this.curInf.getValue("skill_cd"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeroInfo.prototype, "skill_atk", {
        get: function () {
            return Number(this.curInf.getValue("skill_atk"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeroInfo.prototype, "skill_crit", {
        get: function () {
            return Number(this.curInf.getValue("skill_crit"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeroInfo.prototype, "skill_burst", {
        get: function () {
            return Number(this.curInf.getValue("skill_burst"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeroInfo.prototype, "gain_method", {
        get: function () {
            return Number(this.curInf.getValue("gain_method"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeroInfo.prototype, "combination_num", {
        get: function () {
            return Number(this.curInf.getValue("combination_num"));
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 依据id获得配置信息
     * @param id 配置id
     */
    HeroInfo.getInfo = function (id) {
        var ids = String(id);
        if (this.infDic.hasKey(ids)) {
            return new HeroInfo(ids);
        }
        return null;
    };
    HeroInfo.getList = function () {
        if (this.infList == null) {
            var list = this.infDic.getKeys();
            this.infList = [];
            for (var i = 0, len = list.length; i < len; i++) {
                this.infList.push(new HeroInfo(list[i]));
            }
        }
        return this.infList;
    };
    HeroInfo.init = function () {
        this.infDic = new Dictionary_1.default();
        var dic1 = new Dictionary_1.default();
        dic1.add("id", "1");
        dic1.add("name", "虾兵");
        dic1.add("story", "虾兵");
        dic1.add("quality", "1");
        dic1.add("type", "5");
        dic1.add("race", "1");
        dic1.add("career", "101");
        dic1.add("point_fetters", "0");
        dic1.add("range", "1");
        dic1.add("normal_id", "1");
        dic1.add("normal_cd", "4");
        dic1.add("normal_attack", "139.2");
        dic1.add("normal_crit", "0.0232");
        dic1.add("normal_burst", "1");
        dic1.add("skill_id", "1");
        dic1.add("skill_cd", "4");
        dic1.add("skill_atk", "139.2");
        dic1.add("skill_crit", "0.0232");
        dic1.add("skill_burst", "1");
        dic1.add("gain_method", "0");
        dic1.add("combination_num", "10");
        this.infDic.add("1", dic1);
        var dic2 = new Dictionary_1.default();
        dic2.add("id", "2");
        dic2.add("name", "天牛精");
        dic2.add("story", "天牛精");
        dic2.add("quality", "1");
        dic2.add("type", "2");
        dic2.add("race", "2");
        dic2.add("career", "102");
        dic2.add("point_fetters", "0");
        dic2.add("range", "1");
        dic2.add("normal_id", "2");
        dic2.add("normal_cd", "4");
        dic2.add("normal_attack", "139.8");
        dic2.add("normal_crit", "0.0231");
        dic2.add("normal_burst", "2");
        dic2.add("skill_id", "2");
        dic2.add("skill_cd", "4");
        dic2.add("skill_atk", "139.8");
        dic2.add("skill_crit", "0.0231");
        dic2.add("skill_burst", "2");
        dic2.add("gain_method", "0");
        dic2.add("combination_num", "10");
        this.infDic.add("2", dic2);
        var dic3 = new Dictionary_1.default();
        dic3.add("id", "3");
        dic3.add("name", "蝴蝶精");
        dic3.add("story", "蝴蝶精");
        dic3.add("quality", "1");
        dic3.add("type", "2");
        dic3.add("race", "3");
        dic3.add("career", "103");
        dic3.add("point_fetters", "0");
        dic3.add("range", "1");
        dic3.add("normal_id", "3");
        dic3.add("normal_cd", "4");
        dic3.add("normal_attack", "139.6");
        dic3.add("normal_crit", "0.0233");
        dic3.add("normal_burst", "1");
        dic3.add("skill_id", "3");
        dic3.add("skill_cd", "4");
        dic3.add("skill_atk", "139.6");
        dic3.add("skill_crit", "0.0233");
        dic3.add("skill_burst", "1");
        dic3.add("gain_method", "0");
        dic3.add("combination_num", "10");
        this.infDic.add("3", dic3);
        var dic4 = new Dictionary_1.default();
        dic4.add("id", "4");
        dic4.add("name", "蜈蚣精");
        dic4.add("story", "蜈蚣精");
        dic4.add("quality", "1");
        dic4.add("type", "4");
        dic4.add("race", "4");
        dic4.add("career", "104");
        dic4.add("point_fetters", "0");
        dic4.add("range", "1");
        dic4.add("normal_id", "4");
        dic4.add("normal_cd", "4");
        dic4.add("normal_attack", "140");
        dic4.add("normal_crit", "0.0235");
        dic4.add("normal_burst", "2");
        dic4.add("skill_id", "4");
        dic4.add("skill_cd", "4");
        dic4.add("skill_atk", "140");
        dic4.add("skill_crit", "0.0235");
        dic4.add("skill_burst", "2");
        dic4.add("gain_method", "0");
        dic4.add("combination_num", "10");
        this.infDic.add("4", dic4);
        var dic5 = new Dictionary_1.default();
        dic5.add("id", "5");
        dic5.add("name", "蟹将");
        dic5.add("story", "蟹将");
        dic5.add("quality", "1");
        dic5.add("type", "4");
        dic5.add("race", "5");
        dic5.add("career", "105");
        dic5.add("point_fetters", "0");
        dic5.add("range", "1");
        dic5.add("normal_id", "5");
        dic5.add("normal_cd", "2");
        dic5.add("normal_attack", "140.4");
        dic5.add("normal_crit", "0.0229");
        dic5.add("normal_burst", "1");
        dic5.add("skill_id", "5");
        dic5.add("skill_cd", "2");
        dic5.add("skill_atk", "140.4");
        dic5.add("skill_crit", "0.0229");
        dic5.add("skill_burst", "1");
        dic5.add("gain_method", "0");
        dic5.add("combination_num", "10");
        this.infDic.add("5", dic5);
        var dic6 = new Dictionary_1.default();
        dic6.add("id", "6");
        dic6.add("name", "羊力大仙");
        dic6.add("story", "羊力大仙");
        dic6.add("quality", "1");
        dic6.add("type", "5");
        dic6.add("race", "1");
        dic6.add("career", "106");
        dic6.add("point_fetters", "0");
        dic6.add("range", "1");
        dic6.add("normal_id", "6");
        dic6.add("normal_cd", "2");
        dic6.add("normal_attack", "141.2");
        dic6.add("normal_crit", "0.0242");
        dic6.add("normal_burst", "1");
        dic6.add("skill_id", "6");
        dic6.add("skill_cd", "2");
        dic6.add("skill_atk", "141.2");
        dic6.add("skill_crit", "0.0242");
        dic6.add("skill_burst", "1");
        dic6.add("gain_method", "0");
        dic6.add("combination_num", "10");
        this.infDic.add("6", dic6);
        var dic7 = new Dictionary_1.default();
        dic7.add("id", "7");
        dic7.add("name", "青鱼精");
        dic7.add("story", "青鱼精");
        dic7.add("quality", "1");
        dic7.add("type", "1");
        dic7.add("race", "2");
        dic7.add("career", "107");
        dic7.add("point_fetters", "0");
        dic7.add("range", "1");
        dic7.add("normal_id", "7");
        dic7.add("normal_cd", "2");
        dic7.add("normal_attack", "141.8");
        dic7.add("normal_crit", "0.0239");
        dic7.add("normal_burst", "2");
        dic7.add("skill_id", "7");
        dic7.add("skill_cd", "2");
        dic7.add("skill_atk", "141.8");
        dic7.add("skill_crit", "0.0239");
        dic7.add("skill_burst", "2");
        dic7.add("gain_method", "0");
        dic7.add("combination_num", "10");
        this.infDic.add("7", dic7);
        var dic8 = new Dictionary_1.default();
        dic8.add("id", "8");
        dic8.add("name", "鹿力大仙");
        dic8.add("story", "鹿力大仙");
        dic8.add("quality", "1");
        dic8.add("type", "5");
        dic8.add("race", "3");
        dic8.add("career", "101");
        dic8.add("point_fetters", "0");
        dic8.add("range", "1");
        dic8.add("normal_id", "8");
        dic8.add("normal_cd", "1");
        dic8.add("normal_attack", "141.6");
        dic8.add("normal_crit", "0.0239");
        dic8.add("normal_burst", "1");
        dic8.add("skill_id", "8");
        dic8.add("skill_cd", "1");
        dic8.add("skill_atk", "141.6");
        dic8.add("skill_crit", "0.0239");
        dic8.add("skill_burst", "1");
        dic8.add("gain_method", "0");
        dic8.add("combination_num", "10");
        this.infDic.add("8", dic8);
        var dic9 = new Dictionary_1.default();
        dic9.add("id", "9");
        dic9.add("name", "小钻风");
        dic9.add("story", "小钻风");
        dic9.add("quality", "1");
        dic9.add("type", "5");
        dic9.add("race", "4");
        dic9.add("career", "102");
        dic9.add("point_fetters", "7");
        dic9.add("range", "1");
        dic9.add("normal_id", "9");
        dic9.add("normal_cd", "4");
        dic9.add("normal_attack", "141.4");
        dic9.add("normal_crit", "0.0242");
        dic9.add("normal_burst", "2");
        dic9.add("skill_id", "9");
        dic9.add("skill_cd", "4");
        dic9.add("skill_atk", "141.4");
        dic9.add("skill_crit", "0.0242");
        dic9.add("skill_burst", "2");
        dic9.add("gain_method", "0");
        dic9.add("combination_num", "10");
        this.infDic.add("9", dic9);
        var dic10 = new Dictionary_1.default();
        dic10.add("id", "10");
        dic10.add("name", "虎力大仙");
        dic10.add("story", "虎力大仙");
        dic10.add("quality", "2");
        dic10.add("type", "6");
        dic10.add("race", "5");
        dic10.add("career", "103");
        dic10.add("point_fetters", "2");
        dic10.add("range", "1");
        dic10.add("normal_id", "10");
        dic10.add("normal_cd", "4");
        dic10.add("normal_attack", "145.8");
        dic10.add("normal_crit", "0.0261");
        dic10.add("normal_burst", "1");
        dic10.add("skill_id", "10");
        dic10.add("skill_cd", "4");
        dic10.add("skill_atk", "145.8");
        dic10.add("skill_crit", "0.0261");
        dic10.add("skill_burst", "1");
        dic10.add("gain_method", "0");
        dic10.add("combination_num", "10");
        this.infDic.add("10", dic10);
        var dic11 = new Dictionary_1.default();
        dic11.add("id", "11");
        dic11.add("name", "蜘蛛精");
        dic11.add("story", "蜘蛛精");
        dic11.add("quality", "2");
        dic11.add("type", "2");
        dic11.add("race", "1");
        dic11.add("career", "104");
        dic11.add("point_fetters", "0");
        dic11.add("range", "1");
        dic11.add("normal_id", "11");
        dic11.add("normal_cd", "3");
        dic11.add("normal_attack", "142.8");
        dic11.add("normal_crit", "0.0243");
        dic11.add("normal_burst", "2");
        dic11.add("skill_id", "11");
        dic11.add("skill_cd", "3");
        dic11.add("skill_atk", "142.8");
        dic11.add("skill_crit", "0.0243");
        dic11.add("skill_burst", "2");
        dic11.add("gain_method", "0");
        dic11.add("combination_num", "10");
        this.infDic.add("11", dic11);
        var dic12 = new Dictionary_1.default();
        dic12.add("id", "12");
        dic12.add("name", "孔雀公主");
        dic12.add("story", "孔雀公主");
        dic12.add("quality", "2");
        dic12.add("type", "6");
        dic12.add("race", "2");
        dic12.add("career", "105");
        dic12.add("point_fetters", "7");
        dic12.add("range", "1");
        dic12.add("normal_id", "12");
        dic12.add("normal_cd", "2");
        dic12.add("normal_attack", "142");
        dic12.add("normal_crit", "0.0245");
        dic12.add("normal_burst", "1");
        dic12.add("skill_id", "12");
        dic12.add("skill_cd", "2");
        dic12.add("skill_atk", "142");
        dic12.add("skill_crit", "0.0245");
        dic12.add("skill_burst", "1");
        dic12.add("gain_method", "0");
        dic12.add("combination_num", "10");
        this.infDic.add("12", dic12);
        var dic13 = new Dictionary_1.default();
        dic13.add("id", "13");
        dic13.add("name", "黑熊精");
        dic13.add("story", "黑熊精");
        dic13.add("quality", "2");
        dic13.add("type", "3");
        dic13.add("race", "3");
        dic13.add("career", "106");
        dic13.add("point_fetters", "6");
        dic13.add("range", "1");
        dic13.add("normal_id", "13");
        dic13.add("normal_cd", "3");
        dic13.add("normal_attack", "142.6");
        dic13.add("normal_crit", "0.0241");
        dic13.add("normal_burst", "1");
        dic13.add("skill_id", "13");
        dic13.add("skill_cd", "3");
        dic13.add("skill_atk", "142.6");
        dic13.add("skill_crit", "0.0241");
        dic13.add("skill_burst", "1");
        dic13.add("gain_method", "0");
        dic13.add("combination_num", "10");
        this.infDic.add("13", dic13);
        var dic14 = new Dictionary_1.default();
        dic14.add("id", "14");
        dic14.add("name", "玉兔精");
        dic14.add("story", "玉兔精");
        dic14.add("quality", "2");
        dic14.add("type", "2");
        dic14.add("race", "4");
        dic14.add("career", "107");
        dic14.add("point_fetters", "0");
        dic14.add("range", "1");
        dic14.add("normal_id", "14");
        dic14.add("normal_cd", "3");
        dic14.add("normal_attack", "143.2");
        dic14.add("normal_crit", "0.0252");
        dic14.add("normal_burst", "2");
        dic14.add("skill_id", "14");
        dic14.add("skill_cd", "3");
        dic14.add("skill_atk", "143.2");
        dic14.add("skill_crit", "0.0252");
        dic14.add("skill_burst", "2");
        dic14.add("gain_method", "0");
        dic14.add("combination_num", "10");
        this.infDic.add("14", dic14);
        var dic15 = new Dictionary_1.default();
        dic15.add("id", "15");
        dic15.add("name", "白骨精");
        dic15.add("story", "白骨精");
        dic15.add("quality", "2");
        dic15.add("type", "3");
        dic15.add("race", "5");
        dic15.add("career", "101");
        dic15.add("point_fetters", "0");
        dic15.add("range", "1");
        dic15.add("normal_id", "15");
        dic15.add("normal_cd", "3");
        dic15.add("normal_attack", "144");
        dic15.add("normal_crit", "0.0251");
        dic15.add("normal_burst", "1");
        dic15.add("skill_id", "15");
        dic15.add("skill_cd", "3");
        dic15.add("skill_atk", "144");
        dic15.add("skill_crit", "0.0251");
        dic15.add("skill_burst", "1");
        dic15.add("gain_method", "0");
        dic15.add("combination_num", "10");
        this.infDic.add("15", dic15);
        var dic16 = new Dictionary_1.default();
        dic16.add("id", "16");
        dic16.add("name", "万圣公主");
        dic16.add("story", "万圣公主");
        dic16.add("quality", "2");
        dic16.add("type", "1");
        dic16.add("race", "1");
        dic16.add("career", "102");
        dic16.add("point_fetters", "0");
        dic16.add("range", "1");
        dic16.add("normal_id", "16");
        dic16.add("normal_cd", "3");
        dic16.add("normal_attack", "144.6");
        dic16.add("normal_crit", "0.0249");
        dic16.add("normal_burst", "2");
        dic16.add("skill_id", "16");
        dic16.add("skill_cd", "3");
        dic16.add("skill_atk", "144.6");
        dic16.add("skill_crit", "0.0249");
        dic16.add("skill_burst", "2");
        dic16.add("gain_method", "0");
        dic16.add("combination_num", "10");
        this.infDic.add("16", dic16);
        var dic17 = new Dictionary_1.default();
        dic17.add("id", "17");
        dic17.add("name", "白蛇精");
        dic17.add("story", "白蛇精");
        dic17.add("quality", "2");
        dic17.add("type", "3");
        dic17.add("race", "2");
        dic17.add("career", "103");
        dic17.add("point_fetters", "0");
        dic17.add("range", "1");
        dic17.add("normal_id", "17");
        dic17.add("normal_cd", "3");
        dic17.add("normal_attack", "145.2");
        dic17.add("normal_crit", "0.0262");
        dic17.add("normal_burst", "1");
        dic17.add("skill_id", "17");
        dic17.add("skill_cd", "3");
        dic17.add("skill_atk", "145.2");
        dic17.add("skill_crit", "0.0262");
        dic17.add("skill_burst", "1");
        dic17.add("gain_method", "0");
        dic17.add("combination_num", "10");
        this.infDic.add("17", dic17);
        var dic18 = new Dictionary_1.default();
        dic18.add("id", "18");
        dic18.add("name", "白象王");
        dic18.add("story", "白象王");
        dic18.add("quality", "3");
        dic18.add("type", "3");
        dic18.add("race", "3");
        dic18.add("career", "104");
        dic18.add("point_fetters", "5");
        dic18.add("range", "1");
        dic18.add("normal_id", "18");
        dic18.add("normal_cd", "2");
        dic18.add("normal_attack", "145.8");
        dic18.add("normal_crit", "0.0261");
        dic18.add("normal_burst", "2");
        dic18.add("skill_id", "18");
        dic18.add("skill_cd", "2");
        dic18.add("skill_atk", "145.8");
        dic18.add("skill_crit", "0.0261");
        dic18.add("skill_burst", "2");
        dic18.add("gain_method", "0");
        dic18.add("combination_num", "10");
        this.infDic.add("18", dic18);
        var dic19 = new Dictionary_1.default();
        dic19.add("id", "19");
        dic19.add("name", "九尾狐");
        dic19.add("story", "九尾狐");
        dic19.add("quality", "3");
        dic19.add("type", "3");
        dic19.add("race", "4");
        dic19.add("career", "105");
        dic19.add("point_fetters", "5");
        dic19.add("range", "1");
        dic19.add("normal_id", "19");
        dic19.add("normal_cd", "4");
        dic19.add("normal_attack", "147.6");
        dic19.add("normal_crit", "0.0269");
        dic19.add("normal_burst", "1");
        dic19.add("skill_id", "19");
        dic19.add("skill_cd", "4");
        dic19.add("skill_atk", "147.6");
        dic19.add("skill_crit", "0.0269");
        dic19.add("skill_burst", "1");
        dic19.add("gain_method", "0");
        dic19.add("combination_num", "10");
        this.infDic.add("19", dic19);
        var dic20 = new Dictionary_1.default();
        dic20.add("id", "20");
        dic20.add("name", "鹤大仙");
        dic20.add("story", "鹤大仙");
        dic20.add("quality", "3");
        dic20.add("type", "2");
        dic20.add("race", "5");
        dic20.add("career", "106");
        dic20.add("point_fetters", "4");
        dic20.add("range", "1");
        dic20.add("normal_id", "20");
        dic20.add("normal_cd", "3");
        dic20.add("normal_attack", "148");
        dic20.add("normal_crit", "0.0272");
        dic20.add("normal_burst", "1");
        dic20.add("skill_id", "20");
        dic20.add("skill_cd", "3");
        dic20.add("skill_atk", "148");
        dic20.add("skill_crit", "0.0272");
        dic20.add("skill_burst", "1");
        dic20.add("gain_method", "0");
        dic20.add("combination_num", "10");
        this.infDic.add("20", dic20);
        var dic21 = new Dictionary_1.default();
        dic21.add("id", "21");
        dic21.add("name", "银角");
        dic21.add("story", "银角");
        dic21.add("quality", "3");
        dic21.add("type", "5");
        dic21.add("race", "1");
        dic21.add("career", "107");
        dic21.add("point_fetters", "2");
        dic21.add("range", "1");
        dic21.add("normal_id", "21");
        dic21.add("normal_cd", "1");
        dic21.add("normal_attack", "145.8");
        dic21.add("normal_crit", "0.0261");
        dic21.add("normal_burst", "2");
        dic21.add("skill_id", "21");
        dic21.add("skill_cd", "1");
        dic21.add("skill_atk", "145.8");
        dic21.add("skill_crit", "0.0261");
        dic21.add("skill_burst", "2");
        dic21.add("gain_method", "0");
        dic21.add("combination_num", "10");
        this.infDic.add("21", dic21);
        var dic22 = new Dictionary_1.default();
        dic22.add("id", "22");
        dic22.add("name", "蝎子精");
        dic22.add("story", "蝎子精");
        dic22.add("quality", "3");
        dic22.add("type", "2");
        dic22.add("race", "2");
        dic22.add("career", "101");
        dic22.add("point_fetters", "6");
        dic22.add("range", "1");
        dic22.add("normal_id", "22");
        dic22.add("normal_cd", "2");
        dic22.add("normal_attack", "145.6");
        dic22.add("normal_crit", "0.0263");
        dic22.add("normal_burst", "1");
        dic22.add("skill_id", "22");
        dic22.add("skill_cd", "2");
        dic22.add("skill_atk", "145.6");
        dic22.add("skill_crit", "0.0263");
        dic22.add("skill_burst", "1");
        dic22.add("gain_method", "0");
        dic22.add("combination_num", "10");
        this.infDic.add("22", dic22);
        var dic23 = new Dictionary_1.default();
        dic23.add("id", "23");
        dic23.add("name", "老鼠精");
        dic23.add("story", "老鼠精");
        dic23.add("quality", "3");
        dic23.add("type", "4");
        dic23.add("race", "3");
        dic23.add("career", "102");
        dic23.add("point_fetters", "4");
        dic23.add("range", "1");
        dic23.add("normal_id", "23");
        dic23.add("normal_cd", "1");
        dic23.add("normal_attack", "146.8");
        dic23.add("normal_crit", "0.0267");
        dic23.add("normal_burst", "2");
        dic23.add("skill_id", "23");
        dic23.add("skill_cd", "1");
        dic23.add("skill_atk", "146.8");
        dic23.add("skill_crit", "0.0267");
        dic23.add("skill_burst", "2");
        dic23.add("gain_method", "0");
        dic23.add("combination_num", "10");
        this.infDic.add("23", dic23);
        var dic24 = new Dictionary_1.default();
        dic24.add("id", "24");
        dic24.add("name", "啸天犬");
        dic24.add("story", "啸天犬");
        dic24.add("quality", "3");
        dic24.add("type", "4");
        dic24.add("race", "4");
        dic24.add("career", "103");
        dic24.add("point_fetters", "6");
        dic24.add("range", "1");
        dic24.add("normal_id", "24");
        dic24.add("normal_cd", "3");
        dic24.add("normal_attack", "141.6");
        dic24.add("normal_crit", "0.0242");
        dic24.add("normal_burst", "1");
        dic24.add("skill_id", "24");
        dic24.add("skill_cd", "3");
        dic24.add("skill_atk", "141.6");
        dic24.add("skill_crit", "0.0242");
        dic24.add("skill_burst", "1");
        dic24.add("gain_method", "0");
        dic24.add("combination_num", "10");
        this.infDic.add("24", dic24);
        var dic25 = new Dictionary_1.default();
        dic25.add("id", "25");
        dic25.add("name", "狮驼王");
        dic25.add("story", "狮驼王");
        dic25.add("quality", "4");
        dic25.add("type", "6");
        dic25.add("race", "5");
        dic25.add("career", "104");
        dic25.add("point_fetters", "2");
        dic25.add("range", "1");
        dic25.add("normal_id", "25");
        dic25.add("normal_cd", "2");
        dic25.add("normal_attack", "143.8");
        dic25.add("normal_crit", "0.0251");
        dic25.add("normal_burst", "2");
        dic25.add("skill_id", "25");
        dic25.add("skill_cd", "2");
        dic25.add("skill_atk", "143.8");
        dic25.add("skill_crit", "0.0251");
        dic25.add("skill_burst", "2");
        dic25.add("gain_method", "0");
        dic25.add("combination_num", "10");
        this.infDic.add("25", dic25);
        var dic26 = new Dictionary_1.default();
        dic26.add("id", "26");
        dic26.add("name", "红孩儿");
        dic26.add("story", "红孩儿");
        dic26.add("quality", "4");
        dic26.add("type", "4");
        dic26.add("race", "1");
        dic26.add("career", "105");
        dic26.add("point_fetters", "5");
        dic26.add("range", "1");
        dic26.add("normal_id", "26");
        dic26.add("normal_cd", "3");
        dic26.add("normal_attack", "142.4");
        dic26.add("normal_crit", "0.0243");
        dic26.add("normal_burst", "1");
        dic26.add("skill_id", "26");
        dic26.add("skill_cd", "3");
        dic26.add("skill_atk", "142.4");
        dic26.add("skill_crit", "0.0243");
        dic26.add("skill_burst", "1");
        dic26.add("gain_method", "0");
        dic26.add("combination_num", "10");
        this.infDic.add("26", dic26);
        var dic27 = new Dictionary_1.default();
        dic27.add("id", "27");
        dic27.add("name", "九头虫");
        dic27.add("story", "九头虫");
        dic27.add("quality", "4");
        dic27.add("type", "6");
        dic27.add("race", "2");
        dic27.add("career", "106");
        dic27.add("point_fetters", "3");
        dic27.add("range", "1");
        dic27.add("normal_id", "27");
        dic27.add("normal_cd", "3");
        dic27.add("normal_attack", "144.2");
        dic27.add("normal_crit", "0.025");
        dic27.add("normal_burst", "1");
        dic27.add("skill_id", "27");
        dic27.add("skill_cd", "3");
        dic27.add("skill_atk", "144.2");
        dic27.add("skill_crit", "0.025");
        dic27.add("skill_burst", "1");
        dic27.add("gain_method", "0");
        dic27.add("combination_num", "10");
        this.infDic.add("27", dic27);
        var dic28 = new Dictionary_1.default();
        dic28.add("id", "28");
        dic28.add("name", "黄袍怪");
        dic28.add("story", "黄袍怪");
        dic28.add("quality", "4");
        dic28.add("type", "4");
        dic28.add("race", "3");
        dic28.add("career", "107");
        dic28.add("point_fetters", "7");
        dic28.add("range", "1");
        dic28.add("normal_id", "28");
        dic28.add("normal_cd", "4");
        dic28.add("normal_attack", "147.2");
        dic28.add("normal_crit", "0.0272");
        dic28.add("normal_burst", "2");
        dic28.add("skill_id", "28");
        dic28.add("skill_cd", "4");
        dic28.add("skill_atk", "147.2");
        dic28.add("skill_crit", "0.0272");
        dic28.add("skill_burst", "2");
        dic28.add("gain_method", "0");
        dic28.add("combination_num", "10");
        this.infDic.add("28", dic28);
        var dic29 = new Dictionary_1.default();
        dic29.add("id", "29");
        dic29.add("name", "金角");
        dic29.add("story", "金角");
        dic29.add("quality", "4");
        dic29.add("type", "3");
        dic29.add("race", "4");
        dic29.add("career", "101");
        dic29.add("point_fetters", "7");
        dic29.add("range", "1");
        dic29.add("normal_id", "29");
        dic29.add("normal_cd", "3");
        dic29.add("normal_attack", "147.8");
        dic29.add("normal_crit", "0.0271");
        dic29.add("normal_burst", "1");
        dic29.add("skill_id", "29");
        dic29.add("skill_cd", "3");
        dic29.add("skill_atk", "147.8");
        dic29.add("skill_crit", "0.0271");
        dic29.add("skill_burst", "1");
        dic29.add("gain_method", "0");
        dic29.add("combination_num", "10");
        this.infDic.add("29", dic29);
        var dic30 = new Dictionary_1.default();
        dic30.add("id", "30");
        dic30.add("name", "六耳猕猴");
        dic30.add("story", "六耳猕猴");
        dic30.add("quality", "4");
        dic30.add("type", "1");
        dic30.add("race", "5");
        dic30.add("career", "102");
        dic30.add("point_fetters", "1");
        dic30.add("range", "1");
        dic30.add("normal_id", "30");
        dic30.add("normal_cd", "0");
        dic30.add("normal_attack", "0");
        dic30.add("normal_crit", "0");
        dic30.add("normal_burst", "2");
        dic30.add("skill_id", "30");
        dic30.add("skill_cd", "0");
        dic30.add("skill_atk", "0");
        dic30.add("skill_crit", "0");
        dic30.add("skill_burst", "2");
        dic30.add("gain_method", "0");
        dic30.add("combination_num", "10");
        this.infDic.add("30", dic30);
        var dic31 = new Dictionary_1.default();
        dic31.add("id", "31");
        dic31.add("name", "青牛精");
        dic31.add("story", "青牛精");
        dic31.add("quality", "5");
        dic31.add("type", "1");
        dic31.add("race", "1");
        dic31.add("career", "103");
        dic31.add("point_fetters", "1");
        dic31.add("range", "1");
        dic31.add("normal_id", "31");
        dic31.add("normal_cd", "0");
        dic31.add("normal_attack", "0");
        dic31.add("normal_crit", "0");
        dic31.add("normal_burst", "1");
        dic31.add("skill_id", "31");
        dic31.add("skill_cd", "0");
        dic31.add("skill_atk", "0");
        dic31.add("skill_crit", "0");
        dic31.add("skill_burst", "1");
        dic31.add("gain_method", "0");
        dic31.add("combination_num", "10");
        this.infDic.add("31", dic31);
        var dic32 = new Dictionary_1.default();
        dic32.add("id", "32");
        dic32.add("name", "牛魔王");
        dic32.add("story", "牛魔王");
        dic32.add("quality", "5");
        dic32.add("type", "5");
        dic32.add("race", "2");
        dic32.add("career", "104");
        dic32.add("point_fetters", "2");
        dic32.add("range", "1");
        dic32.add("normal_id", "32");
        dic32.add("normal_cd", "0");
        dic32.add("normal_attack", "0");
        dic32.add("normal_crit", "0");
        dic32.add("normal_burst", "2");
        dic32.add("skill_id", "32");
        dic32.add("skill_cd", "0");
        dic32.add("skill_atk", "0");
        dic32.add("skill_crit", "0");
        dic32.add("skill_burst", "2");
        dic32.add("gain_method", "0");
        dic32.add("combination_num", "10");
        this.infDic.add("32", dic32);
        var dic33 = new Dictionary_1.default();
        dic33.add("id", "33");
        dic33.add("name", "大鹏");
        dic33.add("story", "大鹏");
        dic33.add("quality", "5");
        dic33.add("type", "3");
        dic33.add("race", "3");
        dic33.add("career", "105");
        dic33.add("point_fetters", "1");
        dic33.add("range", "1");
        dic33.add("normal_id", "33");
        dic33.add("normal_cd", "3");
        dic33.add("normal_attack", "146.6");
        dic33.add("normal_crit", "0.0261");
        dic33.add("normal_burst", "1");
        dic33.add("skill_id", "33");
        dic33.add("skill_cd", "3");
        dic33.add("skill_atk", "146.6");
        dic33.add("skill_crit", "0.0261");
        dic33.add("skill_burst", "1");
        dic33.add("gain_method", "0");
        dic33.add("combination_num", "10");
        this.infDic.add("33", dic33);
        var dic34 = new Dictionary_1.default();
        dic34.add("id", "34");
        dic34.add("name", "金毛吼");
        dic34.add("story", "金毛吼");
        dic34.add("quality", "5");
        dic34.add("type", "3");
        dic34.add("race", "4");
        dic34.add("career", "106");
        dic34.add("point_fetters", "3");
        dic34.add("range", "1");
        dic34.add("normal_id", "34");
        dic34.add("normal_cd", "1");
        dic34.add("normal_attack", "0");
        dic34.add("normal_crit", "0");
        dic34.add("normal_burst", "1");
        dic34.add("skill_id", "34");
        dic34.add("skill_cd", "1");
        dic34.add("skill_atk", "0");
        dic34.add("skill_crit", "0");
        dic34.add("skill_burst", "1");
        dic34.add("gain_method", "0");
        dic34.add("combination_num", "10");
        this.infDic.add("34", dic34);
        var dic35 = new Dictionary_1.default();
        dic35.add("id", "35");
        dic35.add("name", "万圣龙王");
        dic35.add("story", "万圣龙王");
        dic35.add("quality", "5");
        dic35.add("type", "4");
        dic35.add("race", "5");
        dic35.add("career", "107");
        dic35.add("point_fetters", "3");
        dic35.add("range", "1");
        dic35.add("normal_id", "35");
        dic35.add("normal_cd", "3");
        dic35.add("normal_attack", "147.6");
        dic35.add("normal_crit", "0.0273");
        dic35.add("normal_burst", "2");
        dic35.add("skill_id", "35");
        dic35.add("skill_cd", "3");
        dic35.add("skill_atk", "147.6");
        dic35.add("skill_crit", "0.0273");
        dic35.add("skill_burst", "2");
        dic35.add("gain_method", "0");
        dic35.add("combination_num", "10");
        this.infDic.add("35", dic35);
    };
    HeroInfo.infDic = new Dictionary_1.default();
    HeroInfo.infList = null;
    return HeroInfo;
}());
exports.default = HeroInfo;
},{"../Tool/Dictionary":5}],31:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Tool/Dictionary");
var HeroTypeInfo = /** @class */ (function () {
    function HeroTypeInfo(id) {
        this.curInf = new Dictionary_1.default();
        this.curInf = HeroTypeInfo.infDic.getValue(id);
    }
    HeroTypeInfo.serverInit = function (infDic) {
        this.infDic.clear();
        this.infDic = infDic;
    };
    Object.defineProperty(HeroTypeInfo.prototype, "id", {
        get: function () {
            return Number(this.curInf.getValue("id"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeroTypeInfo.prototype, "name", {
        get: function () {
            return String(this.curInf.getValue("name"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeroTypeInfo.prototype, "type", {
        get: function () {
            return Number(this.curInf.getValue("type"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeroTypeInfo.prototype, "bench_atk_speed", {
        get: function () {
            return Number(this.curInf.getValue("bench_atk_speed"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeroTypeInfo.prototype, "benchmark_atk", {
        get: function () {
            return Number(this.curInf.getValue("benchmark_atk"));
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 依据id获得配置信息
     * @param id 配置id
     */
    HeroTypeInfo.getInfo = function (id) {
        var ids = String(id);
        if (this.infDic.hasKey(ids)) {
            return new HeroTypeInfo(ids);
        }
        return null;
    };
    HeroTypeInfo.getList = function () {
        if (this.infList == null) {
            var list = this.infDic.getKeys();
            this.infList = [];
            for (var i = 0, len = list.length; i < len; i++) {
                this.infList.push(new HeroTypeInfo(list[i]));
            }
        }
        return this.infList;
    };
    HeroTypeInfo.init = function () {
        this.infDic = new Dictionary_1.default();
        var dic1 = new Dictionary_1.default();
        dic1.add("id", "1");
        dic1.add("name", "高频");
        dic1.add("type", "1");
        dic1.add("bench_atk_speed", "2.5");
        dic1.add("benchmark_atk", "35.9");
        this.infDic.add("1", dic1);
        var dic2 = new Dictionary_1.default();
        dic2.add("id", "2");
        dic2.add("name", "高频偏高攻");
        dic2.add("type", "2");
        dic2.add("bench_atk_speed", "1.65");
        dic2.add("benchmark_atk", "62");
        this.infDic.add("2", dic2);
        var dic3 = new Dictionary_1.default();
        dic3.add("id", "3");
        dic3.add("name", "均衡高频");
        dic3.add("type", "3");
        dic3.add("bench_atk_speed", "1.1");
        dic3.add("benchmark_atk", "102.7");
        this.infDic.add("3", dic3);
        var dic4 = new Dictionary_1.default();
        dic4.add("id", "4");
        dic4.add("name", "均衡高攻");
        dic4.add("type", "4");
        dic4.add("bench_atk_speed", "0.8");
        dic4.add("benchmark_atk", "199.6");
        this.infDic.add("4", dic4);
        var dic5 = new Dictionary_1.default();
        dic5.add("id", "5");
        dic5.add("name", "高爆偏高频");
        dic5.add("type", "5");
        dic5.add("bench_atk_speed", "0.6");
        dic5.add("benchmark_atk", "395.7");
        this.infDic.add("5", dic5);
        var dic6 = new Dictionary_1.default();
        dic6.add("id", "6");
        dic6.add("name", "高爆");
        dic6.add("type", "6");
        dic6.add("bench_atk_speed", "0.45");
        dic6.add("benchmark_atk", "697.5");
        this.infDic.add("6", dic6);
    };
    HeroTypeInfo.infDic = new Dictionary_1.default();
    HeroTypeInfo.infList = null;
    return HeroTypeInfo;
}());
exports.default = HeroTypeInfo;
},{"../Tool/Dictionary":5}],32:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Tool/Dictionary");
var MonsterInfo = /** @class */ (function () {
    function MonsterInfo(id) {
        this.curInf = new Dictionary_1.default();
        this.curInf = MonsterInfo.infDic.getValue(id);
    }
    MonsterInfo.serverInit = function (infDic) {
        this.infDic.clear();
        this.infDic = infDic;
    };
    Object.defineProperty(MonsterInfo.prototype, "id", {
        get: function () {
            return Number(this.curInf.getValue("id"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MonsterInfo.prototype, "type", {
        get: function () {
            return Number(this.curInf.getValue("type"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MonsterInfo.prototype, "boss", {
        get: function () {
            return Number(this.curInf.getValue("boss"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MonsterInfo.prototype, "move_speed", {
        get: function () {
            return Number(this.curInf.getValue("move_speed"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MonsterInfo.prototype, "atk", {
        get: function () {
            return Number(this.curInf.getValue("atk"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MonsterInfo.prototype, "atk_speed", {
        get: function () {
            return Number(this.curInf.getValue("atk_speed"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MonsterInfo.prototype, "skill_id", {
        get: function () {
            return Number(this.curInf.getValue("skill_id"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MonsterInfo.prototype, "sk", {
        get: function () {
            return Number(this.curInf.getValue("sk"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MonsterInfo.prototype, "big_wave", {
        get: function () {
            return Number(this.curInf.getValue("big_wave"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MonsterInfo.prototype, "hp", {
        get: function () {
            return Number(this.curInf.getValue("hp"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MonsterInfo.prototype, "base_hp", {
        get: function () {
            return Number(this.curInf.getValue("base_hp"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MonsterInfo.prototype, "base_num", {
        get: function () {
            return Number(this.curInf.getValue("base_num"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MonsterInfo.prototype, "split", {
        get: function () {
            return Number(this.curInf.getValue("split"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MonsterInfo.prototype, "resurrection", {
        get: function () {
            return Number(this.curInf.getValue("resurrection"));
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 依据id获得配置信息
     * @param id 配置id
     */
    MonsterInfo.getInfo = function (id) {
        var ids = String(id);
        if (this.infDic.hasKey(ids)) {
            return new MonsterInfo(ids);
        }
        return null;
    };
    MonsterInfo.getList = function () {
        if (this.infList == null) {
            var list = this.infDic.getKeys();
            this.infList = [];
            for (var i = 0, len = list.length; i < len; i++) {
                this.infList.push(new MonsterInfo(list[i]));
            }
        }
        return this.infList;
    };
    MonsterInfo.init = function () {
        this.infDic = new Dictionary_1.default();
        var dic1 = new Dictionary_1.default();
        dic1.add("id", "1");
        dic1.add("type", "5");
        dic1.add("boss", "0");
        dic1.add("move_speed", "6");
        dic1.add("atk", "0");
        dic1.add("atk_speed", "0");
        dic1.add("skill_id", "1");
        dic1.add("sk", "1");
        dic1.add("big_wave", "12");
        dic1.add("hp", "20");
        dic1.add("base_hp", "20");
        dic1.add("base_num", "1");
        dic1.add("split", "0");
        dic1.add("resurrection", "0");
        this.infDic.add("1", dic1);
        var dic2 = new Dictionary_1.default();
        dic2.add("id", "2");
        dic2.add("type", "6");
        dic2.add("boss", "0");
        dic2.add("move_speed", "12");
        dic2.add("atk", "0");
        dic2.add("atk_speed", "0");
        dic2.add("skill_id", "0");
        dic2.add("sk", "2");
        dic2.add("big_wave", "23");
        dic2.add("hp", "40");
        dic2.add("base_hp", "40");
        dic2.add("base_num", "1");
        dic2.add("split", "0");
        dic2.add("resurrection", "0");
        this.infDic.add("2", dic2);
        var dic3 = new Dictionary_1.default();
        dic3.add("id", "3");
        dic3.add("type", "6");
        dic3.add("boss", "0");
        dic3.add("move_speed", "6");
        dic3.add("atk", "2");
        dic3.add("atk_speed", "1");
        dic3.add("skill_id", "0");
        dic3.add("sk", "3");
        dic3.add("big_wave", "34");
        dic3.add("hp", "20");
        dic3.add("base_hp", "20");
        dic3.add("base_num", "1");
        dic3.add("split", "0");
        dic3.add("resurrection", "0");
        this.infDic.add("3", dic3);
        var dic4 = new Dictionary_1.default();
        dic4.add("id", "4");
        dic4.add("type", "5");
        dic4.add("boss", "0");
        dic4.add("move_speed", "6");
        dic4.add("atk", "0");
        dic4.add("atk_speed", "0");
        dic4.add("skill_id", "1");
        dic4.add("sk", "4");
        dic4.add("big_wave", "12");
        dic4.add("hp", "30");
        dic4.add("base_hp", "30");
        dic4.add("base_num", "1");
        dic4.add("split", "0");
        dic4.add("resurrection", "0");
        this.infDic.add("4", dic4);
        var dic5 = new Dictionary_1.default();
        dic5.add("id", "5");
        dic5.add("type", "6");
        dic5.add("boss", "0");
        dic5.add("move_speed", "12");
        dic5.add("atk", "0");
        dic5.add("atk_speed", "0");
        dic5.add("skill_id", "0");
        dic5.add("sk", "5");
        dic5.add("big_wave", "23");
        dic5.add("hp", "50");
        dic5.add("base_hp", "50");
        dic5.add("base_num", "1");
        dic5.add("split", "0");
        dic5.add("resurrection", "0");
        this.infDic.add("5", dic5);
        var dic6 = new Dictionary_1.default();
        dic6.add("id", "6");
        dic6.add("type", "5");
        dic6.add("boss", "0");
        dic6.add("move_speed", "6");
        dic6.add("atk", "0");
        dic6.add("atk_speed", "0");
        dic6.add("skill_id", "0");
        dic6.add("sk", "6");
        dic6.add("big_wave", "34");
        dic6.add("hp", "50");
        dic6.add("base_hp", "50");
        dic6.add("base_num", "1");
        dic6.add("split", "0");
        dic6.add("resurrection", "0");
        this.infDic.add("6", dic6);
        var dic7 = new Dictionary_1.default();
        dic7.add("id", "7");
        dic7.add("type", "6");
        dic7.add("boss", "0");
        dic7.add("move_speed", "6");
        dic7.add("atk", "2");
        dic7.add("atk_speed", "1");
        dic7.add("skill_id", "1");
        dic7.add("sk", "7");
        dic7.add("big_wave", "34");
        dic7.add("hp", "18");
        dic7.add("base_hp", "18");
        dic7.add("base_num", "1");
        dic7.add("split", "0");
        dic7.add("resurrection", "0");
        this.infDic.add("7", dic7);
        var dic8 = new Dictionary_1.default();
        dic8.add("id", "8");
        dic8.add("type", "6");
        dic8.add("boss", "0");
        dic8.add("move_speed", "6");
        dic8.add("atk", "2");
        dic8.add("atk_speed", "1");
        dic8.add("skill_id", "0");
        dic8.add("sk", "8");
        dic8.add("big_wave", "34");
        dic8.add("hp", "15");
        dic8.add("base_hp", "15");
        dic8.add("base_num", "1");
        dic8.add("split", "0");
        dic8.add("resurrection", "0");
        this.infDic.add("8", dic8);
        var dic9 = new Dictionary_1.default();
        dic9.add("id", "9");
        dic9.add("type", "1");
        dic9.add("boss", "0");
        dic9.add("move_speed", "8");
        dic9.add("atk", "0");
        dic9.add("atk_speed", "0");
        dic9.add("skill_id", "0");
        dic9.add("sk", "9");
        dic9.add("big_wave", "12");
        dic9.add("hp", "10");
        dic9.add("base_hp", "10");
        dic9.add("base_num", "1");
        dic9.add("split", "0");
        dic9.add("resurrection", "0");
        this.infDic.add("9", dic9);
        var dic10 = new Dictionary_1.default();
        dic10.add("id", "10");
        dic10.add("type", "1");
        dic10.add("boss", "0");
        dic10.add("move_speed", "8");
        dic10.add("atk", "0");
        dic10.add("atk_speed", "0");
        dic10.add("skill_id", "1");
        dic10.add("sk", "10");
        dic10.add("big_wave", "23");
        dic10.add("hp", "9");
        dic10.add("base_hp", "9");
        dic10.add("base_num", "1");
        dic10.add("split", "0");
        dic10.add("resurrection", "0");
        this.infDic.add("10", dic10);
        var dic11 = new Dictionary_1.default();
        dic11.add("id", "11");
        dic11.add("type", "1");
        dic11.add("boss", "0");
        dic11.add("move_speed", "9");
        dic11.add("atk", "0");
        dic11.add("atk_speed", "0");
        dic11.add("skill_id", "0");
        dic11.add("sk", "11");
        dic11.add("big_wave", "34");
        dic11.add("hp", "8");
        dic11.add("base_hp", "8");
        dic11.add("base_num", "1");
        dic11.add("split", "0");
        dic11.add("resurrection", "0");
        this.infDic.add("11", dic11);
        var dic12 = new Dictionary_1.default();
        dic12.add("id", "12");
        dic12.add("type", "1");
        dic12.add("boss", "0");
        dic12.add("move_speed", "9");
        dic12.add("atk", "0");
        dic12.add("atk_speed", "0");
        dic12.add("skill_id", "0");
        dic12.add("sk", "12");
        dic12.add("big_wave", "12");
        dic12.add("hp", "7");
        dic12.add("base_hp", "7");
        dic12.add("base_num", "1");
        dic12.add("split", "0");
        dic12.add("resurrection", "0");
        this.infDic.add("12", dic12);
        var dic13 = new Dictionary_1.default();
        dic13.add("id", "13");
        dic13.add("type", "1");
        dic13.add("boss", "0");
        dic13.add("move_speed", "10");
        dic13.add("atk", "0");
        dic13.add("atk_speed", "0");
        dic13.add("skill_id", "1");
        dic13.add("sk", "13");
        dic13.add("big_wave", "23");
        dic13.add("hp", "6");
        dic13.add("base_hp", "6");
        dic13.add("base_num", "1");
        dic13.add("split", "0");
        dic13.add("resurrection", "0");
        this.infDic.add("13", dic13);
        var dic14 = new Dictionary_1.default();
        dic14.add("id", "14");
        dic14.add("type", "1");
        dic14.add("boss", "0");
        dic14.add("move_speed", "10");
        dic14.add("atk", "0");
        dic14.add("atk_speed", "0");
        dic14.add("skill_id", "0");
        dic14.add("sk", "14");
        dic14.add("big_wave", "34");
        dic14.add("hp", "5");
        dic14.add("base_hp", "5");
        dic14.add("base_num", "1");
        dic14.add("split", "0");
        dic14.add("resurrection", "0");
        this.infDic.add("14", dic14);
        var dic15 = new Dictionary_1.default();
        dic15.add("id", "15");
        dic15.add("type", "1");
        dic15.add("boss", "0");
        dic15.add("move_speed", "11");
        dic15.add("atk", "0");
        dic15.add("atk_speed", "0");
        dic15.add("skill_id", "0");
        dic15.add("sk", "15");
        dic15.add("big_wave", "34");
        dic15.add("hp", "4");
        dic15.add("base_hp", "4");
        dic15.add("base_num", "1");
        dic15.add("split", "0");
        dic15.add("resurrection", "0");
        this.infDic.add("15", dic15);
        var dic16 = new Dictionary_1.default();
        dic16.add("id", "16");
        dic16.add("type", "1");
        dic16.add("boss", "0");
        dic16.add("move_speed", "11");
        dic16.add("atk", "0");
        dic16.add("atk_speed", "0");
        dic16.add("skill_id", "1");
        dic16.add("sk", "16");
        dic16.add("big_wave", "34");
        dic16.add("hp", "3");
        dic16.add("base_hp", "3");
        dic16.add("base_num", "1");
        dic16.add("split", "0");
        dic16.add("resurrection", "0");
        this.infDic.add("16", dic16);
        var dic17 = new Dictionary_1.default();
        dic17.add("id", "17");
        dic17.add("type", "3");
        dic17.add("boss", "0");
        dic17.add("move_speed", "11");
        dic17.add("atk", "0");
        dic17.add("atk_speed", "0");
        dic17.add("skill_id", "0");
        dic17.add("sk", "17");
        dic17.add("big_wave", "12");
        dic17.add("hp", "3");
        dic17.add("base_hp", "3");
        dic17.add("base_num", "1");
        dic17.add("split", "0");
        dic17.add("resurrection", "0");
        this.infDic.add("17", dic17);
        var dic18 = new Dictionary_1.default();
        dic18.add("id", "18");
        dic18.add("type", "4");
        dic18.add("boss", "0");
        dic18.add("move_speed", "11");
        dic18.add("atk", "1");
        dic18.add("atk_speed", "1");
        dic18.add("skill_id", "0");
        dic18.add("sk", "18");
        dic18.add("big_wave", "23");
        dic18.add("hp", "3");
        dic18.add("base_hp", "3");
        dic18.add("base_num", "1");
        dic18.add("split", "0");
        dic18.add("resurrection", "0");
        this.infDic.add("18", dic18);
        var dic19 = new Dictionary_1.default();
        dic19.add("id", "19");
        dic19.add("type", "3");
        dic19.add("boss", "0");
        dic19.add("move_speed", "12");
        dic19.add("atk", "0");
        dic19.add("atk_speed", "0");
        dic19.add("skill_id", "1");
        dic19.add("sk", "19");
        dic19.add("big_wave", "34");
        dic19.add("hp", "3");
        dic19.add("base_hp", "3");
        dic19.add("base_num", "1");
        dic19.add("split", "0");
        dic19.add("resurrection", "0");
        this.infDic.add("19", dic19);
        var dic20 = new Dictionary_1.default();
        dic20.add("id", "20");
        dic20.add("type", "4");
        dic20.add("boss", "0");
        dic20.add("move_speed", "12");
        dic20.add("atk", "1");
        dic20.add("atk_speed", "1");
        dic20.add("skill_id", "0");
        dic20.add("sk", "20");
        dic20.add("big_wave", "12");
        dic20.add("hp", "3");
        dic20.add("base_hp", "3");
        dic20.add("base_num", "1");
        dic20.add("split", "0");
        dic20.add("resurrection", "0");
        this.infDic.add("20", dic20);
        var dic21 = new Dictionary_1.default();
        dic21.add("id", "21");
        dic21.add("type", "3");
        dic21.add("boss", "0");
        dic21.add("move_speed", "13");
        dic21.add("atk", "0");
        dic21.add("atk_speed", "0");
        dic21.add("skill_id", "0");
        dic21.add("sk", "21");
        dic21.add("big_wave", "23");
        dic21.add("hp", "3");
        dic21.add("base_hp", "3");
        dic21.add("base_num", "1");
        dic21.add("split", "0");
        dic21.add("resurrection", "0");
        this.infDic.add("21", dic21);
        var dic22 = new Dictionary_1.default();
        dic22.add("id", "22");
        dic22.add("type", "3");
        dic22.add("boss", "0");
        dic22.add("move_speed", "13");
        dic22.add("atk", "0");
        dic22.add("atk_speed", "0");
        dic22.add("skill_id", "1");
        dic22.add("sk", "22");
        dic22.add("big_wave", "34");
        dic22.add("hp", "3");
        dic22.add("base_hp", "3");
        dic22.add("base_num", "1");
        dic22.add("split", "0");
        dic22.add("resurrection", "0");
        this.infDic.add("22", dic22);
        var dic23 = new Dictionary_1.default();
        dic23.add("id", "23");
        dic23.add("type", "4");
        dic23.add("boss", "0");
        dic23.add("move_speed", "14");
        dic23.add("atk", "1");
        dic23.add("atk_speed", "1");
        dic23.add("skill_id", "0");
        dic23.add("sk", "23");
        dic23.add("big_wave", "34");
        dic23.add("hp", "3");
        dic23.add("base_hp", "3");
        dic23.add("base_num", "1");
        dic23.add("split", "0");
        dic23.add("resurrection", "0");
        this.infDic.add("23", dic23);
        var dic24 = new Dictionary_1.default();
        dic24.add("id", "24");
        dic24.add("type", "3");
        dic24.add("boss", "0");
        dic24.add("move_speed", "14");
        dic24.add("atk", "0");
        dic24.add("atk_speed", "0");
        dic24.add("skill_id", "0");
        dic24.add("sk", "24");
        dic24.add("big_wave", "34");
        dic24.add("hp", "3");
        dic24.add("base_hp", "3");
        dic24.add("base_num", "1");
        dic24.add("split", "0");
        dic24.add("resurrection", "0");
        this.infDic.add("24", dic24);
        var dic25 = new Dictionary_1.default();
        dic25.add("id", "25");
        dic25.add("type", "4");
        dic25.add("boss", "0");
        dic25.add("move_speed", "15");
        dic25.add("atk", "1");
        dic25.add("atk_speed", "1");
        dic25.add("skill_id", "1");
        dic25.add("sk", "25");
        dic25.add("big_wave", "12");
        dic25.add("hp", "3");
        dic25.add("base_hp", "3");
        dic25.add("base_num", "1");
        dic25.add("split", "0");
        dic25.add("resurrection", "0");
        this.infDic.add("25", dic25);
        var dic26 = new Dictionary_1.default();
        dic26.add("id", "26");
        dic26.add("type", "3");
        dic26.add("boss", "0");
        dic26.add("move_speed", "15");
        dic26.add("atk", "0");
        dic26.add("atk_speed", "0");
        dic26.add("skill_id", "0");
        dic26.add("sk", "26");
        dic26.add("big_wave", "23");
        dic26.add("hp", "3");
        dic26.add("base_hp", "3");
        dic26.add("base_num", "1");
        dic26.add("split", "0");
        dic26.add("resurrection", "0");
        this.infDic.add("26", dic26);
        var dic27 = new Dictionary_1.default();
        dic27.add("id", "27");
        dic27.add("type", "3");
        dic27.add("boss", "0");
        dic27.add("move_speed", "16");
        dic27.add("atk", "0");
        dic27.add("atk_speed", "0");
        dic27.add("skill_id", "0");
        dic27.add("sk", "27");
        dic27.add("big_wave", "34");
        dic27.add("hp", "3");
        dic27.add("base_hp", "3");
        dic27.add("base_num", "1");
        dic27.add("split", "0");
        dic27.add("resurrection", "0");
        this.infDic.add("27", dic27);
        var dic28 = new Dictionary_1.default();
        dic28.add("id", "28");
        dic28.add("type", "3");
        dic28.add("boss", "0");
        dic28.add("move_speed", "16");
        dic28.add("atk", "0");
        dic28.add("atk_speed", "0");
        dic28.add("skill_id", "1");
        dic28.add("sk", "28");
        dic28.add("big_wave", "12");
        dic28.add("hp", "3");
        dic28.add("base_hp", "3");
        dic28.add("base_num", "1");
        dic28.add("split", "0");
        dic28.add("resurrection", "0");
        this.infDic.add("28", dic28);
        var dic29 = new Dictionary_1.default();
        dic29.add("id", "29");
        dic29.add("type", "4");
        dic29.add("boss", "0");
        dic29.add("move_speed", "17");
        dic29.add("atk", "1");
        dic29.add("atk_speed", "1");
        dic29.add("skill_id", "0");
        dic29.add("sk", "29");
        dic29.add("big_wave", "23");
        dic29.add("hp", "3");
        dic29.add("base_hp", "3");
        dic29.add("base_num", "1");
        dic29.add("split", "0");
        dic29.add("resurrection", "0");
        this.infDic.add("29", dic29);
        var dic30 = new Dictionary_1.default();
        dic30.add("id", "30");
        dic30.add("type", "3");
        dic30.add("boss", "0");
        dic30.add("move_speed", "17");
        dic30.add("atk", "0");
        dic30.add("atk_speed", "0");
        dic30.add("skill_id", "0");
        dic30.add("sk", "30");
        dic30.add("big_wave", "34");
        dic30.add("hp", "3");
        dic30.add("base_hp", "3");
        dic30.add("base_num", "1");
        dic30.add("split", "0");
        dic30.add("resurrection", "0");
        this.infDic.add("30", dic30);
        var dic31 = new Dictionary_1.default();
        dic31.add("id", "31");
        dic31.add("type", "3");
        dic31.add("boss", "0");
        dic31.add("move_speed", "18");
        dic31.add("atk", "0");
        dic31.add("atk_speed", "0");
        dic31.add("skill_id", "1");
        dic31.add("sk", "31");
        dic31.add("big_wave", "34");
        dic31.add("hp", "3");
        dic31.add("base_hp", "3");
        dic31.add("base_num", "1");
        dic31.add("split", "0");
        dic31.add("resurrection", "0");
        this.infDic.add("31", dic31);
        var dic32 = new Dictionary_1.default();
        dic32.add("id", "32");
        dic32.add("type", "3");
        dic32.add("boss", "0");
        dic32.add("move_speed", "18");
        dic32.add("atk", "0");
        dic32.add("atk_speed", "0");
        dic32.add("skill_id", "0");
        dic32.add("sk", "32");
        dic32.add("big_wave", "34");
        dic32.add("hp", "3");
        dic32.add("base_hp", "3");
        dic32.add("base_num", "1");
        dic32.add("split", "0");
        dic32.add("resurrection", "0");
        this.infDic.add("32", dic32);
        var dic33 = new Dictionary_1.default();
        dic33.add("id", "33");
        dic33.add("type", "3");
        dic33.add("boss", "0");
        dic33.add("move_speed", "19");
        dic33.add("atk", "0");
        dic33.add("atk_speed", "0");
        dic33.add("skill_id", "0");
        dic33.add("sk", "33");
        dic33.add("big_wave", "34");
        dic33.add("hp", "3");
        dic33.add("base_hp", "3");
        dic33.add("base_num", "1");
        dic33.add("split", "0");
        dic33.add("resurrection", "0");
        this.infDic.add("33", dic33);
        var dic34 = new Dictionary_1.default();
        dic34.add("id", "34");
        dic34.add("type", "2");
        dic34.add("boss", "0");
        dic34.add("move_speed", "19");
        dic34.add("atk", "0");
        dic34.add("atk_speed", "0");
        dic34.add("skill_id", "1");
        dic34.add("sk", "34");
        dic34.add("big_wave", "12");
        dic34.add("hp", "0.5");
        dic34.add("base_hp", "0.5");
        dic34.add("base_num", "7");
        dic34.add("split", "0");
        dic34.add("resurrection", "0");
        this.infDic.add("34", dic34);
        var dic35 = new Dictionary_1.default();
        dic35.add("id", "35");
        dic35.add("type", "2");
        dic35.add("boss", "0");
        dic35.add("move_speed", "15");
        dic35.add("atk", "0");
        dic35.add("atk_speed", "0");
        dic35.add("skill_id", "0");
        dic35.add("sk", "35");
        dic35.add("big_wave", "23");
        dic35.add("hp", "2");
        dic35.add("base_hp", "2");
        dic35.add("base_num", "7");
        dic35.add("split", "0");
        dic35.add("resurrection", "0");
        this.infDic.add("35", dic35);
        var dic36 = new Dictionary_1.default();
        dic36.add("id", "36");
        dic36.add("type", "2");
        dic36.add("boss", "0");
        dic36.add("move_speed", "19");
        dic36.add("atk", "0");
        dic36.add("atk_speed", "0");
        dic36.add("skill_id", "0");
        dic36.add("sk", "36");
        dic36.add("big_wave", "34");
        dic36.add("hp", "0.5");
        dic36.add("base_hp", "0.5");
        dic36.add("base_num", "6");
        dic36.add("split", "0");
        dic36.add("resurrection", "0");
        this.infDic.add("36", dic36);
        var dic37 = new Dictionary_1.default();
        dic37.add("id", "37");
        dic37.add("type", "2");
        dic37.add("boss", "0");
        dic37.add("move_speed", "15");
        dic37.add("atk", "0");
        dic37.add("atk_speed", "0");
        dic37.add("skill_id", "1");
        dic37.add("sk", "37");
        dic37.add("big_wave", "12");
        dic37.add("hp", "3");
        dic37.add("base_hp", "3");
        dic37.add("base_num", "6");
        dic37.add("split", "0");
        dic37.add("resurrection", "0");
        this.infDic.add("37", dic37);
        var dic38 = new Dictionary_1.default();
        dic38.add("id", "38");
        dic38.add("type", "2");
        dic38.add("boss", "0");
        dic38.add("move_speed", "19");
        dic38.add("atk", "0");
        dic38.add("atk_speed", "0");
        dic38.add("skill_id", "0");
        dic38.add("sk", "38");
        dic38.add("big_wave", "23");
        dic38.add("hp", "1");
        dic38.add("base_hp", "1");
        dic38.add("base_num", "7");
        dic38.add("split", "0");
        dic38.add("resurrection", "0");
        this.infDic.add("38", dic38);
        var dic39 = new Dictionary_1.default();
        dic39.add("id", "39");
        dic39.add("type", "2");
        dic39.add("boss", "0");
        dic39.add("move_speed", "15");
        dic39.add("atk", "0");
        dic39.add("atk_speed", "0");
        dic39.add("skill_id", "0");
        dic39.add("sk", "39");
        dic39.add("big_wave", "34");
        dic39.add("hp", "4");
        dic39.add("base_hp", "4");
        dic39.add("base_num", "7");
        dic39.add("split", "0");
        dic39.add("resurrection", "0");
        this.infDic.add("39", dic39);
        var dic40 = new Dictionary_1.default();
        dic40.add("id", "40");
        dic40.add("type", "2");
        dic40.add("boss", "0");
        dic40.add("move_speed", "19");
        dic40.add("atk", "0");
        dic40.add("atk_speed", "0");
        dic40.add("skill_id", "1");
        dic40.add("sk", "40");
        dic40.add("big_wave", "34");
        dic40.add("hp", "1");
        dic40.add("base_hp", "1");
        dic40.add("base_num", "6");
        dic40.add("split", "0");
        dic40.add("resurrection", "0");
        this.infDic.add("40", dic40);
        var dic41 = new Dictionary_1.default();
        dic41.add("id", "41");
        dic41.add("type", "2");
        dic41.add("boss", "0");
        dic41.add("move_speed", "19");
        dic41.add("atk", "0");
        dic41.add("atk_speed", "0");
        dic41.add("skill_id", "0");
        dic41.add("sk", "41");
        dic41.add("big_wave", "34");
        dic41.add("hp", "1");
        dic41.add("base_hp", "1");
        dic41.add("base_num", "6");
        dic41.add("split", "0");
        dic41.add("resurrection", "0");
        this.infDic.add("41", dic41);
    };
    MonsterInfo.infDic = new Dictionary_1.default();
    MonsterInfo.infList = null;
    return MonsterInfo;
}());
exports.default = MonsterInfo;
},{"../Tool/Dictionary":5}],33:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Tool/Dictionary");
var NormalSkillInfo = /** @class */ (function () {
    function NormalSkillInfo(id) {
        this.curInf = new Dictionary_1.default();
        this.curInf = NormalSkillInfo.infDic.getValue(id);
    }
    NormalSkillInfo.serverInit = function (infDic) {
        this.infDic.clear();
        this.infDic = infDic;
    };
    Object.defineProperty(NormalSkillInfo.prototype, "id", {
        get: function () {
            return Number(this.curInf.getValue("id"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NormalSkillInfo.prototype, "explain", {
        get: function () {
            return String(this.curInf.getValue("explain"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NormalSkillInfo.prototype, "des", {
        get: function () {
            return String(this.curInf.getValue("des"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NormalSkillInfo.prototype, "hit_type", {
        get: function () {
            return Number(this.curInf.getValue("hit_type"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NormalSkillInfo.prototype, "attack_audio_id", {
        get: function () {
            return Number(this.curInf.getValue("attack_audio_id"));
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 依据id获得配置信息
     * @param id 配置id
     */
    NormalSkillInfo.getInfo = function (id) {
        var ids = String(id);
        if (this.infDic.hasKey(ids)) {
            return new NormalSkillInfo(ids);
        }
        return null;
    };
    NormalSkillInfo.getList = function () {
        if (this.infList == null) {
            var list = this.infDic.getKeys();
            this.infList = [];
            for (var i = 0, len = list.length; i < len; i++) {
                this.infList.push(new NormalSkillInfo(list[i]));
            }
        }
        return this.infList;
    };
    NormalSkillInfo.init = function () {
        this.infDic = new Dictionary_1.default();
        var dic1 = new Dictionary_1.default();
        dic1.add("id", "1");
        dic1.add("explain", "普攻");
        dic1.add("des", "普伤");
        dic1.add("hit_type", "1");
        dic1.add("attack_audio_id", "100");
        this.infDic.add("1", dic1);
        var dic2 = new Dictionary_1.default();
        dic2.add("id", "2");
        dic2.add("explain", "普攻");
        dic2.add("des", "普伤");
        dic2.add("hit_type", "1");
        dic2.add("attack_audio_id", "100");
        this.infDic.add("2", dic2);
        var dic3 = new Dictionary_1.default();
        dic3.add("id", "3");
        dic3.add("explain", "普攻");
        dic3.add("des", "普伤");
        dic3.add("hit_type", "1");
        dic3.add("attack_audio_id", "100");
        this.infDic.add("3", dic3);
        var dic4 = new Dictionary_1.default();
        dic4.add("id", "4");
        dic4.add("explain", "普攻");
        dic4.add("des", "普伤");
        dic4.add("hit_type", "1");
        dic4.add("attack_audio_id", "100");
        this.infDic.add("4", dic4);
        var dic5 = new Dictionary_1.default();
        dic5.add("id", "5");
        dic5.add("explain", "普攻");
        dic5.add("des", "普伤");
        dic5.add("hit_type", "1");
        dic5.add("attack_audio_id", "100");
        this.infDic.add("5", dic5);
        var dic6 = new Dictionary_1.default();
        dic6.add("id", "6");
        dic6.add("explain", "普攻");
        dic6.add("des", "普伤");
        dic6.add("hit_type", "1");
        dic6.add("attack_audio_id", "100");
        this.infDic.add("6", dic6);
        var dic7 = new Dictionary_1.default();
        dic7.add("id", "7");
        dic7.add("explain", "普攻");
        dic7.add("des", "普伤");
        dic7.add("hit_type", "1");
        dic7.add("attack_audio_id", "100");
        this.infDic.add("7", dic7);
        var dic8 = new Dictionary_1.default();
        dic8.add("id", "8");
        dic8.add("explain", "普攻");
        dic8.add("des", "普伤");
        dic8.add("hit_type", "1");
        dic8.add("attack_audio_id", "100");
        this.infDic.add("8", dic8);
        var dic9 = new Dictionary_1.default();
        dic9.add("id", "9");
        dic9.add("explain", "普攻");
        dic9.add("des", "普伤");
        dic9.add("hit_type", "1");
        dic9.add("attack_audio_id", "100");
        this.infDic.add("9", dic9);
        var dic10 = new Dictionary_1.default();
        dic10.add("id", "10");
        dic10.add("explain", "普攻");
        dic10.add("des", "普伤");
        dic10.add("hit_type", "1");
        dic10.add("attack_audio_id", "100");
        this.infDic.add("10", dic10);
        var dic11 = new Dictionary_1.default();
        dic11.add("id", "11");
        dic11.add("explain", "普攻");
        dic11.add("des", "普伤");
        dic11.add("hit_type", "1");
        dic11.add("attack_audio_id", "100");
        this.infDic.add("11", dic11);
        var dic12 = new Dictionary_1.default();
        dic12.add("id", "12");
        dic12.add("explain", "普攻");
        dic12.add("des", "普伤");
        dic12.add("hit_type", "1");
        dic12.add("attack_audio_id", "100");
        this.infDic.add("12", dic12);
        var dic13 = new Dictionary_1.default();
        dic13.add("id", "13");
        dic13.add("explain", "普攻");
        dic13.add("des", "普伤");
        dic13.add("hit_type", "1");
        dic13.add("attack_audio_id", "100");
        this.infDic.add("13", dic13);
        var dic14 = new Dictionary_1.default();
        dic14.add("id", "14");
        dic14.add("explain", "普攻");
        dic14.add("des", "普伤");
        dic14.add("hit_type", "1");
        dic14.add("attack_audio_id", "100");
        this.infDic.add("14", dic14);
        var dic15 = new Dictionary_1.default();
        dic15.add("id", "15");
        dic15.add("explain", "普攻");
        dic15.add("des", "普伤");
        dic15.add("hit_type", "1");
        dic15.add("attack_audio_id", "100");
        this.infDic.add("15", dic15);
        var dic16 = new Dictionary_1.default();
        dic16.add("id", "16");
        dic16.add("explain", "普攻");
        dic16.add("des", "普伤");
        dic16.add("hit_type", "1");
        dic16.add("attack_audio_id", "100");
        this.infDic.add("16", dic16);
        var dic17 = new Dictionary_1.default();
        dic17.add("id", "17");
        dic17.add("explain", "普攻");
        dic17.add("des", "普伤");
        dic17.add("hit_type", "1");
        dic17.add("attack_audio_id", "100");
        this.infDic.add("17", dic17);
        var dic18 = new Dictionary_1.default();
        dic18.add("id", "18");
        dic18.add("explain", "普攻");
        dic18.add("des", "普伤");
        dic18.add("hit_type", "1");
        dic18.add("attack_audio_id", "100");
        this.infDic.add("18", dic18);
        var dic19 = new Dictionary_1.default();
        dic19.add("id", "19");
        dic19.add("explain", "普攻");
        dic19.add("des", "普伤");
        dic19.add("hit_type", "1");
        dic19.add("attack_audio_id", "100");
        this.infDic.add("19", dic19);
        var dic20 = new Dictionary_1.default();
        dic20.add("id", "20");
        dic20.add("explain", "普攻");
        dic20.add("des", "普伤");
        dic20.add("hit_type", "1");
        dic20.add("attack_audio_id", "100");
        this.infDic.add("20", dic20);
        var dic21 = new Dictionary_1.default();
        dic21.add("id", "21");
        dic21.add("explain", "普攻");
        dic21.add("des", "普伤");
        dic21.add("hit_type", "1");
        dic21.add("attack_audio_id", "100");
        this.infDic.add("21", dic21);
        var dic22 = new Dictionary_1.default();
        dic22.add("id", "22");
        dic22.add("explain", "普攻");
        dic22.add("des", "普伤");
        dic22.add("hit_type", "1");
        dic22.add("attack_audio_id", "100");
        this.infDic.add("22", dic22);
        var dic23 = new Dictionary_1.default();
        dic23.add("id", "23");
        dic23.add("explain", "普攻");
        dic23.add("des", "普伤");
        dic23.add("hit_type", "1");
        dic23.add("attack_audio_id", "100");
        this.infDic.add("23", dic23);
        var dic24 = new Dictionary_1.default();
        dic24.add("id", "24");
        dic24.add("explain", "普攻");
        dic24.add("des", "普伤");
        dic24.add("hit_type", "1");
        dic24.add("attack_audio_id", "100");
        this.infDic.add("24", dic24);
        var dic25 = new Dictionary_1.default();
        dic25.add("id", "25");
        dic25.add("explain", "普攻");
        dic25.add("des", "普伤");
        dic25.add("hit_type", "1");
        dic25.add("attack_audio_id", "100");
        this.infDic.add("25", dic25);
        var dic26 = new Dictionary_1.default();
        dic26.add("id", "26");
        dic26.add("explain", "普攻");
        dic26.add("des", "普伤");
        dic26.add("hit_type", "1");
        dic26.add("attack_audio_id", "100");
        this.infDic.add("26", dic26);
        var dic27 = new Dictionary_1.default();
        dic27.add("id", "27");
        dic27.add("explain", "普攻");
        dic27.add("des", "普伤");
        dic27.add("hit_type", "1");
        dic27.add("attack_audio_id", "100");
        this.infDic.add("27", dic27);
        var dic28 = new Dictionary_1.default();
        dic28.add("id", "28");
        dic28.add("explain", "普攻");
        dic28.add("des", "普伤");
        dic28.add("hit_type", "1");
        dic28.add("attack_audio_id", "100");
        this.infDic.add("28", dic28);
        var dic29 = new Dictionary_1.default();
        dic29.add("id", "29");
        dic29.add("explain", "普攻");
        dic29.add("des", "普伤");
        dic29.add("hit_type", "1");
        dic29.add("attack_audio_id", "100");
        this.infDic.add("29", dic29);
        var dic30 = new Dictionary_1.default();
        dic30.add("id", "30");
        dic30.add("explain", "普攻");
        dic30.add("des", "普伤");
        dic30.add("hit_type", "1");
        dic30.add("attack_audio_id", "100");
        this.infDic.add("30", dic30);
        var dic31 = new Dictionary_1.default();
        dic31.add("id", "31");
        dic31.add("explain", "普攻");
        dic31.add("des", "普伤");
        dic31.add("hit_type", "1");
        dic31.add("attack_audio_id", "100");
        this.infDic.add("31", dic31);
        var dic32 = new Dictionary_1.default();
        dic32.add("id", "32");
        dic32.add("explain", "普攻");
        dic32.add("des", "普伤");
        dic32.add("hit_type", "1");
        dic32.add("attack_audio_id", "100");
        this.infDic.add("32", dic32);
        var dic33 = new Dictionary_1.default();
        dic33.add("id", "33");
        dic33.add("explain", "普攻");
        dic33.add("des", "普伤");
        dic33.add("hit_type", "1");
        dic33.add("attack_audio_id", "100");
        this.infDic.add("33", dic33);
        var dic34 = new Dictionary_1.default();
        dic34.add("id", "34");
        dic34.add("explain", "普攻");
        dic34.add("des", "普伤");
        dic34.add("hit_type", "1");
        dic34.add("attack_audio_id", "100");
        this.infDic.add("34", dic34);
        var dic35 = new Dictionary_1.default();
        dic35.add("id", "35");
        dic35.add("explain", "普攻");
        dic35.add("des", "普伤");
        dic35.add("hit_type", "1");
        dic35.add("attack_audio_id", "100");
        this.infDic.add("35", dic35);
    };
    NormalSkillInfo.infDic = new Dictionary_1.default();
    NormalSkillInfo.infList = null;
    return NormalSkillInfo;
}());
exports.default = NormalSkillInfo;
},{"../Tool/Dictionary":5}],34:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Tool/Dictionary");
var PlaySkillInfo = /** @class */ (function () {
    function PlaySkillInfo(id) {
        this.curInf = new Dictionary_1.default();
        this.curInf = PlaySkillInfo.infDic.getValue(id);
    }
    PlaySkillInfo.serverInit = function (infDic) {
        this.infDic.clear();
        this.infDic = infDic;
    };
    Object.defineProperty(PlaySkillInfo.prototype, "id", {
        get: function () {
            return Number(this.curInf.getValue("id"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PlaySkillInfo.prototype, "name", {
        get: function () {
            return String(this.curInf.getValue("name"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PlaySkillInfo.prototype, "des", {
        get: function () {
            return String(this.curInf.getValue("des"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PlaySkillInfo.prototype, "val", {
        get: function () {
            return Number(this.curInf.getValue("val"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PlaySkillInfo.prototype, "time", {
        get: function () {
            return Number(this.curInf.getValue("time"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PlaySkillInfo.prototype, "unlock", {
        get: function () {
            return Number(this.curInf.getValue("unlock"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PlaySkillInfo.prototype, "cd", {
        get: function () {
            return Number(this.curInf.getValue("cd"));
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 依据id获得配置信息
     * @param id 配置id
     */
    PlaySkillInfo.getInfo = function (id) {
        var ids = String(id);
        if (this.infDic.hasKey(ids)) {
            return new PlaySkillInfo(ids);
        }
        return null;
    };
    PlaySkillInfo.getList = function () {
        if (this.infList == null) {
            var list = this.infDic.getKeys();
            this.infList = [];
            for (var i = 0, len = list.length; i < len; i++) {
                this.infList.push(new PlaySkillInfo(list[i]));
            }
        }
        return this.infList;
    };
    PlaySkillInfo.init = function () {
        this.infDic = new Dictionary_1.default();
        var dic1 = new Dictionary_1.default();
        dic1.add("id", "1");
        dic1.add("name", "攻击力加强?爆");
        dic1.add("des", "提升攻击力{0}%，持续{1}秒");
        dic1.add("val", "30");
        dic1.add("time", "5");
        dic1.add("unlock", "1");
        dic1.add("cd", "10");
        this.infDic.add("1", dic1);
        var dic2 = new Dictionary_1.default();
        dic2.add("id", "2");
        dic2.add("name", "攻击力加强?恒");
        dic2.add("des", "提升攻击力{0}%，持续{1}秒");
        dic2.add("val", "10");
        dic2.add("time", "0");
        dic2.add("unlock", "21");
        dic2.add("cd", "40");
        this.infDic.add("2", dic2);
        var dic3 = new Dictionary_1.default();
        dic3.add("id", "3");
        dic3.add("name", "爆击率加强?爆");
        dic3.add("des", "提升爆击率{0}%，持续{1}秒");
        dic3.add("val", "20");
        dic3.add("time", "5");
        dic3.add("unlock", "51");
        dic3.add("cd", "30");
        this.infDic.add("3", dic3);
        var dic4 = new Dictionary_1.default();
        dic4.add("id", "4");
        dic4.add("name", "爆击率加强?恒");
        dic4.add("des", "提升爆击率{0}%，持续{1}秒");
        dic4.add("val", "5");
        dic4.add("time", "0");
        dic4.add("unlock", "51");
        dic4.add("cd", "10");
        this.infDic.add("4", dic4);
        var dic5 = new Dictionary_1.default();
        dic5.add("id", "5");
        dic5.add("name", "爆伤加强?爆");
        dic5.add("des", "提升爆伤{0}%，持续{1}秒");
        dic5.add("val", "100");
        dic5.add("time", "5");
        dic5.add("unlock", "51");
        dic5.add("cd", "40");
        this.infDic.add("5", dic5);
        var dic6 = new Dictionary_1.default();
        dic6.add("id", "6");
        dic6.add("name", "爆伤加强?恒");
        dic6.add("des", "提升爆伤{0}%，持续{1}秒");
        dic6.add("val", "50");
        dic6.add("time", "0");
        dic6.add("unlock", "51");
        dic6.add("cd", "30");
        this.infDic.add("6", dic6);
        var dic7 = new Dictionary_1.default();
        dic7.add("id", "7");
        dic7.add("name", "攻速加强?爆");
        dic7.add("des", "提升攻速{0}%，持续{1}秒");
        dic7.add("val", "100");
        dic7.add("time", "5");
        dic7.add("unlock", "51");
        dic7.add("cd", "10");
        this.infDic.add("7", dic7);
        var dic8 = new Dictionary_1.default();
        dic8.add("id", "8");
        dic8.add("name", "攻速加强?恒");
        dic8.add("des", "提升攻速{0}%，持续{1}秒");
        dic8.add("val", "30");
        dic8.add("time", "0");
        dic8.add("unlock", "51");
        dic8.add("cd", "40");
        this.infDic.add("8", dic8);
    };
    PlaySkillInfo.infDic = new Dictionary_1.default();
    PlaySkillInfo.infList = null;
    return PlaySkillInfo;
}());
exports.default = PlaySkillInfo;
},{"../Tool/Dictionary":5}],35:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Tool/Dictionary");
var DifficultyEfficiencyInfo_1 = require("./DifficultyEfficiencyInfo");
var HeroInfo_1 = require("./HeroInfo");
var HeroTypeInfo_1 = require("./HeroTypeInfo");
var MonsterInfo_1 = require("./MonsterInfo");
var SkillInfo_1 = require("./SkillInfo");
var WaveformInfo_1 = require("./WaveformInfo");
var WaveInfo_1 = require("./WaveInfo");
var ServerCSVConfig = /** @class */ (function () {
    function ServerCSVConfig() {
        this.infDic = new Dictionary_1.default();
    }
    Object.defineProperty(ServerCSVConfig, "Instance", {
        get: function () {
            if (!ServerCSVConfig._Instance) {
                ServerCSVConfig._Instance = new ServerCSVConfig();
            }
            return ServerCSVConfig._Instance;
        },
        enumerable: true,
        configurable: true
    });
    ServerCSVConfig.prototype.setCSVInit = function (json) {
        for (var key in json) {
            var inf = json[key];
            if (!this.infDic.hasKey(key)) {
                this.infDic.add(key, new Dictionary_1.default());
            }
            var infval = this.infDic.getValue(key);
            for (var key2 in inf) {
                var line = inf[key2];
                if (line.hasOwnProperty("id")) {
                    var lineId = String(line["id"]);
                    if (!infval.hasKey(lineId)) {
                        infval.add(lineId, new Dictionary_1.default());
                    }
                    var lineVal = infval.getValue(lineId);
                    for (var lineKey in line) {
                        lineVal.add(lineKey, line[lineKey]);
                    }
                }
            }
            switch (key) {
                case "DifficultyEfficiencyInfo":
                    DifficultyEfficiencyInfo_1.default.serverInit(this.infDic.getValue(key));
                    break;
                case "HeroInfo":
                    HeroInfo_1.default.serverInit(this.infDic.getValue(key));
                    break;
                case "HeroTypeInfo":
                    HeroTypeInfo_1.default.serverInit(this.infDic.getValue(key));
                    break;
                case "MonsterInfo":
                    MonsterInfo_1.default.serverInit(this.infDic.getValue(key));
                    break;
                case "SkillInfo":
                    SkillInfo_1.default.serverInit(this.infDic.getValue(key));
                    break;
                case "WaveformInfo":
                    WaveformInfo_1.default.serverInit(this.infDic.getValue(key));
                    break;
                case "WaveInfo":
                    WaveInfo_1.default.serverInit(this.infDic.getValue(key));
                    break;
            }
        }
    };
    return ServerCSVConfig;
}());
exports.default = ServerCSVConfig;
},{"../Tool/Dictionary":5,"./DifficultyEfficiencyInfo":28,"./HeroInfo":30,"./HeroTypeInfo":31,"./MonsterInfo":32,"./SkillInfo":37,"./WaveInfo":40,"./WaveformInfo":41}],36:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Tool/Dictionary");
var SkillHitTypeInfo = /** @class */ (function () {
    function SkillHitTypeInfo(id) {
        this.curInf = new Dictionary_1.default();
        this.curInf = SkillHitTypeInfo.infDic.getValue(id);
    }
    SkillHitTypeInfo.serverInit = function (infDic) {
        this.infDic.clear();
        this.infDic = infDic;
    };
    Object.defineProperty(SkillHitTypeInfo.prototype, "id", {
        get: function () {
            return Number(this.curInf.getValue("id"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SkillHitTypeInfo.prototype, "hit_type", {
        get: function () {
            return String(this.curInf.getValue("hit_type"));
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 依据id获得配置信息
     * @param id 配置id
     */
    SkillHitTypeInfo.getInfo = function (id) {
        var ids = String(id);
        if (this.infDic.hasKey(ids)) {
            return new SkillHitTypeInfo(ids);
        }
        return null;
    };
    SkillHitTypeInfo.getList = function () {
        if (this.infList == null) {
            var list = this.infDic.getKeys();
            this.infList = [];
            for (var i = 0, len = list.length; i < len; i++) {
                this.infList.push(new SkillHitTypeInfo(list[i]));
            }
        }
        return this.infList;
    };
    SkillHitTypeInfo.init = function () {
        this.infDic = new Dictionary_1.default();
        var dic1 = new Dictionary_1.default();
        dic1.add("id", "1");
        dic1.add("hit_type", "单");
        this.infDic.add("1", dic1);
        var dic2 = new Dictionary_1.default();
        dic2.add("id", "2");
        dic2.add("hit_type", "多");
        this.infDic.add("2", dic2);
        var dic3 = new Dictionary_1.default();
        dic3.add("id", "3");
        dic3.add("hit_type", "溅射");
        this.infDic.add("3", dic3);
        var dic4 = new Dictionary_1.default();
        dic4.add("id", "4");
        dic4.add("hit_type", "范围");
        this.infDic.add("4", dic4);
        var dic5 = new Dictionary_1.default();
        dic5.add("id", "5");
        dic5.add("hit_type", "全屏");
        this.infDic.add("5", dic5);
        var dic6 = new Dictionary_1.default();
        dic6.add("id", "6");
        dic6.add("hit_type", "buff");
        this.infDic.add("6", dic6);
    };
    SkillHitTypeInfo.infDic = new Dictionary_1.default();
    SkillHitTypeInfo.infList = null;
    return SkillHitTypeInfo;
}());
exports.default = SkillHitTypeInfo;
},{"../Tool/Dictionary":5}],37:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Tool/Dictionary");
var SkillInfo = /** @class */ (function () {
    function SkillInfo(id) {
        this.curInf = new Dictionary_1.default();
        this.curInf = SkillInfo.infDic.getValue(id);
    }
    SkillInfo.serverInit = function (infDic) {
        this.infDic.clear();
        this.infDic = infDic;
    };
    Object.defineProperty(SkillInfo.prototype, "id", {
        get: function () {
            return Number(this.curInf.getValue("id"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SkillInfo.prototype, "explain", {
        get: function () {
            return String(this.curInf.getValue("explain"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SkillInfo.prototype, "des", {
        get: function () {
            return String(this.curInf.getValue("des"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SkillInfo.prototype, "hit_type", {
        get: function () {
            return Number(this.curInf.getValue("hit_type"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SkillInfo.prototype, "attack_audio_id", {
        get: function () {
            return Number(this.curInf.getValue("attack_audio_id"));
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 依据id获得配置信息
     * @param id 配置id
     */
    SkillInfo.getInfo = function (id) {
        var ids = String(id);
        if (this.infDic.hasKey(ids)) {
            return new SkillInfo(ids);
        }
        return null;
    };
    SkillInfo.getList = function () {
        if (this.infList == null) {
            var list = this.infDic.getKeys();
            this.infList = [];
            for (var i = 0, len = list.length; i < len; i++) {
                this.infList.push(new SkillInfo(list[i]));
            }
        }
        return this.infList;
    };
    SkillInfo.init = function () {
        this.infDic = new Dictionary_1.default();
        var dic1 = new Dictionary_1.default();
        dic1.add("id", "1");
        dic1.add("explain", "高爆率技能1");
        dic1.add("des", "普伤");
        dic1.add("hit_type", "1");
        dic1.add("attack_audio_id", "100");
        this.infDic.add("1", dic1);
        var dic2 = new Dictionary_1.default();
        dic2.add("id", "2");
        dic2.add("explain", "直接伤害2");
        dic2.add("des", "普伤");
        dic2.add("hit_type", "1");
        dic2.add("attack_audio_id", "100");
        this.infDic.add("2", dic2);
        var dic3 = new Dictionary_1.default();
        dic3.add("id", "3");
        dic3.add("explain", "直接伤害3");
        dic3.add("des", "普伤");
        dic3.add("hit_type", "1");
        dic3.add("attack_audio_id", "100");
        this.infDic.add("3", dic3);
        var dic4 = new Dictionary_1.default();
        dic4.add("id", "4");
        dic4.add("explain", "直接伤害4");
        dic4.add("des", "普伤");
        dic4.add("hit_type", "1");
        dic4.add("attack_audio_id", "100");
        this.infDic.add("4", dic4);
        var dic5 = new Dictionary_1.default();
        dic5.add("id", "5");
        dic5.add("explain", "高爆率buff1（敌）");
        dic5.add("des", "普伤");
        dic5.add("hit_type", "1");
        dic5.add("attack_audio_id", "101");
        this.infDic.add("5", dic5);
        var dic6 = new Dictionary_1.default();
        dic6.add("id", "6");
        dic6.add("explain", "直接伤害6");
        dic6.add("des", "普伤");
        dic6.add("hit_type", "1");
        dic6.add("attack_audio_id", "101");
        this.infDic.add("6", dic6);
        var dic7 = new Dictionary_1.default();
        dic7.add("id", "7");
        dic7.add("explain", "直接伤害7");
        dic7.add("des", "普伤");
        dic7.add("hit_type", "1");
        dic7.add("attack_audio_id", "101");
        this.infDic.add("7", dic7);
        var dic8 = new Dictionary_1.default();
        dic8.add("id", "8");
        dic8.add("explain", "直接伤害8");
        dic8.add("des", "普伤");
        dic8.add("hit_type", "1");
        dic8.add("attack_audio_id", "101");
        this.infDic.add("8", dic8);
        var dic9 = new Dictionary_1.default();
        dic9.add("id", "9");
        dic9.add("explain", "直接伤害9");
        dic9.add("des", "普伤");
        dic9.add("hit_type", "1");
        dic9.add("attack_audio_id", "102");
        this.infDic.add("9", dic9);
        var dic10 = new Dictionary_1.default();
        dic10.add("id", "10");
        dic10.add("explain", "高爆伤技能1");
        dic10.add("des", "普伤");
        dic10.add("hit_type", "1");
        dic10.add("attack_audio_id", "102");
        this.infDic.add("10", dic10);
        var dic11 = new Dictionary_1.default();
        dic11.add("id", "11");
        dic11.add("explain", "直接伤害1");
        dic11.add("des", "普伤");
        dic11.add("hit_type", "1");
        dic11.add("attack_audio_id", "103");
        this.infDic.add("11", dic11);
        var dic12 = new Dictionary_1.default();
        dic12.add("id", "12");
        dic12.add("explain", "高爆伤技能2");
        dic12.add("des", "普伤");
        dic12.add("hit_type", "1");
        dic12.add("attack_audio_id", "103");
        this.infDic.add("12", dic12);
        var dic13 = new Dictionary_1.default();
        dic13.add("id", "13");
        dic13.add("explain", "提攻速同列1");
        dic13.add("des", "普伤");
        dic13.add("hit_type", "3");
        dic13.add("attack_audio_id", "104");
        this.infDic.add("13", dic13);
        var dic14 = new Dictionary_1.default();
        dic14.add("id", "14");
        dic14.add("explain", "直接伤害14");
        dic14.add("des", "普伤");
        dic14.add("hit_type", "1");
        dic14.add("attack_audio_id", "104");
        this.infDic.add("14", dic14);
        var dic15 = new Dictionary_1.default();
        dic15.add("id", "15");
        dic15.add("explain", "直接伤害15");
        dic15.add("des", "普伤");
        dic15.add("hit_type", "3");
        dic15.add("attack_audio_id", "104");
        this.infDic.add("15", dic15);
        var dic16 = new Dictionary_1.default();
        dic16.add("id", "16");
        dic16.add("explain", "直接伤害16");
        dic16.add("des", "普伤");
        dic16.add("hit_type", "3");
        dic16.add("attack_audio_id", "104");
        this.infDic.add("16", dic16);
        var dic17 = new Dictionary_1.default();
        dic17.add("id", "17");
        dic17.add("explain", "直接伤害17");
        dic17.add("des", "普伤");
        dic17.add("hit_type", "3");
        dic17.add("attack_audio_id", "105");
        this.infDic.add("17", dic17);
        var dic18 = new Dictionary_1.default();
        dic18.add("id", "18");
        dic18.add("explain", "直接伤害18");
        dic18.add("des", "普伤");
        dic18.add("hit_type", "1");
        dic18.add("attack_audio_id", "105");
        this.infDic.add("18", dic18);
        var dic19 = new Dictionary_1.default();
        dic19.add("id", "19");
        dic19.add("explain", "高爆率技能2");
        dic19.add("des", "普伤");
        dic19.add("hit_type", "1");
        dic19.add("attack_audio_id", "103");
        this.infDic.add("19", dic19);
        var dic20 = new Dictionary_1.default();
        dic20.add("id", "20");
        dic20.add("explain", "直接伤害5");
        dic20.add("des", "普伤");
        dic20.add("hit_type", "1");
        dic20.add("attack_audio_id", "101");
        this.infDic.add("20", dic20);
        var dic21 = new Dictionary_1.default();
        dic21.add("id", "21");
        dic21.add("explain", "时间机器");
        dic21.add("des", "普伤");
        dic21.add("hit_type", "4");
        dic21.add("attack_audio_id", "106");
        this.infDic.add("21", dic21);
        var dic22 = new Dictionary_1.default();
        dic22.add("id", "22");
        dic22.add("explain", "提攻速同族");
        dic22.add("des", "普伤");
        dic22.add("hit_type", "6");
        dic22.add("attack_audio_id", "101");
        this.infDic.add("22", dic22);
        var dic23 = new Dictionary_1.default();
        dic23.add("id", "23");
        dic23.add("explain", "直接伤害18");
        dic23.add("des", "普伤");
        dic23.add("hit_type", "2");
        dic23.add("attack_audio_id", "101");
        this.infDic.add("23", dic23);
        var dic24 = new Dictionary_1.default();
        dic24.add("id", "24");
        dic24.add("explain", "直接伤害19");
        dic24.add("des", "普伤");
        dic24.add("hit_type", "4");
        dic24.add("attack_audio_id", "101");
        this.infDic.add("24", dic24);
        var dic25 = new Dictionary_1.default();
        dic25.add("id", "25");
        dic25.add("explain", "减速加伤");
        dic25.add("des", "普伤");
        dic25.add("hit_type", "1");
        dic25.add("attack_audio_id", "101");
        this.infDic.add("25", dic25);
        var dic26 = new Dictionary_1.default();
        dic26.add("id", "26");
        dic26.add("explain", "灼烧加伤");
        dic26.add("des", "普伤");
        dic26.add("hit_type", "4");
        dic26.add("attack_audio_id", "101");
        this.infDic.add("26", dic26);
        var dic27 = new Dictionary_1.default();
        dic27.add("id", "27");
        dic27.add("explain", "残血斩杀");
        dic27.add("des", "普伤");
        dic27.add("hit_type", "1");
        dic27.add("attack_audio_id", "101");
        this.infDic.add("27", dic27);
        var dic28 = new Dictionary_1.default();
        dic28.add("id", "28");
        dic28.add("explain", "直接伤害21");
        dic28.add("des", "特殊伤害");
        dic28.add("hit_type", "1");
        dic28.add("attack_audio_id", "101");
        this.infDic.add("28", dic28);
        var dic29 = new Dictionary_1.default();
        dic29.add("id", "29");
        dic29.add("explain", "高爆伤buff1（敌）");
        dic29.add("des", "普伤");
        dic29.add("hit_type", "3");
        dic29.add("attack_audio_id", "103");
        this.infDic.add("29", dic29);
        var dic30 = new Dictionary_1.default();
        dic30.add("id", "30");
        dic30.add("explain", "提攻速同行1");
        dic30.add("des", "普伤");
        dic30.add("hit_type", "6");
        dic30.add("attack_audio_id", "0");
        this.infDic.add("30", dic30);
        var dic31 = new Dictionary_1.default();
        dic31.add("id", "31");
        dic31.add("explain", "增加普攻对象数量x秒");
        dic31.add("des", "buff");
        dic31.add("hit_type", "6");
        dic31.add("attack_audio_id", "0");
        this.infDic.add("31", dic31);
        var dic32 = new Dictionary_1.default();
        dic32.add("id", "32");
        dic32.add("explain", "芭蕉扇");
        dic32.add("des", "普伤");
        dic32.add("hit_type", "3");
        dic32.add("attack_audio_id", "0");
        this.infDic.add("32", dic32);
        var dic33 = new Dictionary_1.default();
        dic33.add("id", "33");
        dic33.add("explain", "提攻速同职");
        dic33.add("des", "普伤");
        dic33.add("hit_type", "6");
        dic33.add("attack_audio_id", "104");
        this.infDic.add("33", dic33);
        var dic34 = new Dictionary_1.default();
        dic34.add("id", "34");
        dic34.add("explain", "双倍伤害buff");
        dic34.add("des", "光环");
        dic34.add("hit_type", "6");
        dic34.add("attack_audio_id", "205");
        this.infDic.add("34", dic34);
        var dic35 = new Dictionary_1.default();
        dic35.add("id", "35");
        dic35.add("explain", "直接伤害22");
        dic35.add("des", "控制");
        dic35.add("hit_type", "4");
        dic35.add("attack_audio_id", "104");
        this.infDic.add("35", dic35);
    };
    SkillInfo.infDic = new Dictionary_1.default();
    SkillInfo.infList = null;
    return SkillInfo;
}());
exports.default = SkillInfo;
},{"../Tool/Dictionary":5}],38:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Tool/Dictionary");
var TimeHouseInfo = /** @class */ (function () {
    function TimeHouseInfo(id) {
        this.curInf = new Dictionary_1.default();
        this.curInf = TimeHouseInfo.infDic.getValue(id);
    }
    TimeHouseInfo.serverInit = function (infDic) {
        this.infDic.clear();
        this.infDic = infDic;
    };
    Object.defineProperty(TimeHouseInfo.prototype, "id", {
        get: function () {
            return Number(this.curInf.getValue("id"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimeHouseInfo.prototype, "lv", {
        get: function () {
            return Number(this.curInf.getValue("lv"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimeHouseInfo.prototype, "star", {
        get: function () {
            return Number(this.curInf.getValue("star"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimeHouseInfo.prototype, "basic_injury", {
        get: function () {
            return Number(this.curInf.getValue("basic_injury"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimeHouseInfo.prototype, "injury_index", {
        get: function () {
            return Number(this.curInf.getValue("injury_index"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimeHouseInfo.prototype, "cost_gold", {
        get: function () {
            return Number(this.curInf.getValue("cost_gold"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimeHouseInfo.prototype, "cost_jadeite", {
        get: function () {
            return Number(this.curInf.getValue("cost_jadeite"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimeHouseInfo.prototype, "val0", {
        get: function () {
            return Number(this.curInf.getValue("val0"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimeHouseInfo.prototype, "val1", {
        get: function () {
            return Number(this.curInf.getValue("val1"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimeHouseInfo.prototype, "val2", {
        get: function () {
            return Number(this.curInf.getValue("val2"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimeHouseInfo.prototype, "val3", {
        get: function () {
            return Number(this.curInf.getValue("val3"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimeHouseInfo.prototype, "val4", {
        get: function () {
            return Number(this.curInf.getValue("val4"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimeHouseInfo.prototype, "val5", {
        get: function () {
            return Number(this.curInf.getValue("val5"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimeHouseInfo.prototype, "val6", {
        get: function () {
            return Number(this.curInf.getValue("val6"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimeHouseInfo.prototype, "val7", {
        get: function () {
            return Number(this.curInf.getValue("val7"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimeHouseInfo.prototype, "val8", {
        get: function () {
            return Number(this.curInf.getValue("val8"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimeHouseInfo.prototype, "val9", {
        get: function () {
            return Number(this.curInf.getValue("val9"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimeHouseInfo.prototype, "val10", {
        get: function () {
            return Number(this.curInf.getValue("val10"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimeHouseInfo.prototype, "vals", {
        get: function () {
            var val = [];
            val.push(this.val0);
            val.push(this.val1);
            val.push(this.val2);
            val.push(this.val3);
            val.push(this.val4);
            val.push(this.val5);
            val.push(this.val6);
            val.push(this.val7);
            val.push(this.val8);
            val.push(this.val9);
            val.push(this.val10);
            return val;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 依据id获得配置信息
     * @param id 配置id
     */
    TimeHouseInfo.getInfo = function (id) {
        var ids = String(id);
        if (this.infDic.hasKey(ids)) {
            return new TimeHouseInfo(ids);
        }
        return null;
    };
    /**
     * 依据lv获取配置信息
     * @param lv
     */
    TimeHouseInfo.getInfoLv = function (lv) {
        var list = TimeHouseInfo.getList();
        for (var i = list.length - 1; i >= 0; i--) {
            if (list[i].lv == lv) {
                return list[i];
            }
        }
        return null;
    };
    TimeHouseInfo.getList = function () {
        if (this.infList == null) {
            var list = this.infDic.getKeys();
            this.infList = [];
            for (var i = 0, len = list.length; i < len; i++) {
                this.infList.push(new TimeHouseInfo(list[i]));
            }
        }
        return this.infList;
    };
    TimeHouseInfo.init = function () {
        this.infDic = new Dictionary_1.default();
        var dic1 = new Dictionary_1.default();
        dic1.add("id", "1");
        dic1.add("lv", "1");
        dic1.add("star", "0");
        dic1.add("basic_injury", "7");
        dic1.add("injury_index", "21");
        dic1.add("cost_gold", "100");
        dic1.add("cost_jadeite", "0");
        dic1.add("val0", "1");
        dic1.add("val1", "2");
        dic1.add("val2", "3");
        dic1.add("val3", "4");
        dic1.add("val4", "5");
        dic1.add("val5", "6");
        dic1.add("val6", "7");
        dic1.add("val7", "8");
        dic1.add("val8", "9");
        dic1.add("val9", "10");
        dic1.add("val10", "11");
        this.infDic.add("1", dic1);
        var dic2 = new Dictionary_1.default();
        dic2.add("id", "2");
        dic2.add("lv", "2");
        dic2.add("star", "0");
        dic2.add("basic_injury", "9");
        dic2.add("injury_index", "33");
        dic2.add("cost_gold", "150");
        dic2.add("cost_jadeite", "0");
        dic2.add("val0", "2");
        dic2.add("val1", "3");
        dic2.add("val2", "4");
        dic2.add("val3", "5");
        dic2.add("val4", "6");
        dic2.add("val5", "7");
        dic2.add("val6", "8");
        dic2.add("val7", "9");
        dic2.add("val8", "10");
        dic2.add("val9", "11");
        dic2.add("val10", "12");
        this.infDic.add("2", dic2);
        var dic3 = new Dictionary_1.default();
        dic3.add("id", "3");
        dic3.add("lv", "3");
        dic3.add("star", "0");
        dic3.add("basic_injury", "12");
        dic3.add("injury_index", "46");
        dic3.add("cost_gold", "200");
        dic3.add("cost_jadeite", "0");
        dic3.add("val0", "3");
        dic3.add("val1", "4");
        dic3.add("val2", "5");
        dic3.add("val3", "6");
        dic3.add("val4", "7");
        dic3.add("val5", "8");
        dic3.add("val6", "9");
        dic3.add("val7", "10");
        dic3.add("val8", "11");
        dic3.add("val9", "12");
        dic3.add("val10", "13");
        this.infDic.add("3", dic3);
        var dic4 = new Dictionary_1.default();
        dic4.add("id", "4");
        dic4.add("lv", "4");
        dic4.add("star", "0");
        dic4.add("basic_injury", "14");
        dic4.add("injury_index", "59");
        dic4.add("cost_gold", "250");
        dic4.add("cost_jadeite", "0");
        dic4.add("val0", "4");
        dic4.add("val1", "5");
        dic4.add("val2", "6");
        dic4.add("val3", "7");
        dic4.add("val4", "8");
        dic4.add("val5", "9");
        dic4.add("val6", "10");
        dic4.add("val7", "11");
        dic4.add("val8", "12");
        dic4.add("val9", "13");
        dic4.add("val10", "14");
        this.infDic.add("4", dic4);
        var dic5 = new Dictionary_1.default();
        dic5.add("id", "5");
        dic5.add("lv", "5");
        dic5.add("star", "0");
        dic5.add("basic_injury", "16");
        dic5.add("injury_index", "72");
        dic5.add("cost_gold", "300");
        dic5.add("cost_jadeite", "0");
        dic5.add("val0", "5");
        dic5.add("val1", "6");
        dic5.add("val2", "7");
        dic5.add("val3", "8");
        dic5.add("val4", "9");
        dic5.add("val5", "10");
        dic5.add("val6", "11");
        dic5.add("val7", "12");
        dic5.add("val8", "13");
        dic5.add("val9", "14");
        dic5.add("val10", "15");
        this.infDic.add("5", dic5);
        var dic6 = new Dictionary_1.default();
        dic6.add("id", "6");
        dic6.add("lv", "6");
        dic6.add("star", "0");
        dic6.add("basic_injury", "19");
        dic6.add("injury_index", "86");
        dic6.add("cost_gold", "350");
        dic6.add("cost_jadeite", "0");
        dic6.add("val0", "6");
        dic6.add("val1", "7");
        dic6.add("val2", "8");
        dic6.add("val3", "9");
        dic6.add("val4", "10");
        dic6.add("val5", "11");
        dic6.add("val6", "12");
        dic6.add("val7", "13");
        dic6.add("val8", "14");
        dic6.add("val9", "15");
        dic6.add("val10", "16");
        this.infDic.add("6", dic6);
        var dic7 = new Dictionary_1.default();
        dic7.add("id", "7");
        dic7.add("lv", "7");
        dic7.add("star", "0");
        dic7.add("basic_injury", "21");
        dic7.add("injury_index", "100");
        dic7.add("cost_gold", "400");
        dic7.add("cost_jadeite", "0");
        dic7.add("val0", "7");
        dic7.add("val1", "8");
        dic7.add("val2", "9");
        dic7.add("val3", "10");
        dic7.add("val4", "11");
        dic7.add("val5", "12");
        dic7.add("val6", "13");
        dic7.add("val7", "14");
        dic7.add("val8", "15");
        dic7.add("val9", "16");
        dic7.add("val10", "17");
        this.infDic.add("7", dic7);
        var dic8 = new Dictionary_1.default();
        dic8.add("id", "8");
        dic8.add("lv", "8");
        dic8.add("star", "0");
        dic8.add("basic_injury", "24");
        dic8.add("injury_index", "114");
        dic8.add("cost_gold", "450");
        dic8.add("cost_jadeite", "0");
        dic8.add("val0", "8");
        dic8.add("val1", "9");
        dic8.add("val2", "10");
        dic8.add("val3", "11");
        dic8.add("val4", "12");
        dic8.add("val5", "13");
        dic8.add("val6", "14");
        dic8.add("val7", "15");
        dic8.add("val8", "16");
        dic8.add("val9", "17");
        dic8.add("val10", "18");
        this.infDic.add("8", dic8);
        var dic9 = new Dictionary_1.default();
        dic9.add("id", "9");
        dic9.add("lv", "9");
        dic9.add("star", "0");
        dic9.add("basic_injury", "27");
        dic9.add("injury_index", "129");
        dic9.add("cost_gold", "500");
        dic9.add("cost_jadeite", "0");
        dic9.add("val0", "9");
        dic9.add("val1", "10");
        dic9.add("val2", "11");
        dic9.add("val3", "12");
        dic9.add("val4", "13");
        dic9.add("val5", "14");
        dic9.add("val6", "15");
        dic9.add("val7", "16");
        dic9.add("val8", "17");
        dic9.add("val9", "18");
        dic9.add("val10", "19");
        this.infDic.add("9", dic9);
        var dic10 = new Dictionary_1.default();
        dic10.add("id", "10");
        dic10.add("lv", "10");
        dic10.add("star", "0");
        dic10.add("basic_injury", "30");
        dic10.add("injury_index", "145");
        dic10.add("cost_gold", "550");
        dic10.add("cost_jadeite", "12");
        dic10.add("val0", "10");
        dic10.add("val1", "11");
        dic10.add("val2", "12");
        dic10.add("val3", "13");
        dic10.add("val4", "14");
        dic10.add("val5", "15");
        dic10.add("val6", "16");
        dic10.add("val7", "17");
        dic10.add("val8", "18");
        dic10.add("val9", "19");
        dic10.add("val10", "20");
        this.infDic.add("10", dic10);
        var dic11 = new Dictionary_1.default();
        dic11.add("id", "11");
        dic11.add("lv", "11");
        dic11.add("star", "1");
        dic11.add("basic_injury", "36");
        dic11.add("injury_index", "247");
        dic11.add("cost_gold", "1100");
        dic11.add("cost_jadeite", "0");
        dic11.add("val0", "11");
        dic11.add("val1", "12");
        dic11.add("val2", "13");
        dic11.add("val3", "14");
        dic11.add("val4", "15");
        dic11.add("val5", "16");
        dic11.add("val6", "17");
        dic11.add("val7", "18");
        dic11.add("val8", "19");
        dic11.add("val9", "20");
        dic11.add("val10", "21");
        this.infDic.add("11", dic11);
        var dic12 = new Dictionary_1.default();
        dic12.add("id", "12");
        dic12.add("lv", "12");
        dic12.add("star", "1");
        dic12.add("basic_injury", "39");
        dic12.add("injury_index", "266");
        dic12.add("cost_gold", "1150");
        dic12.add("cost_jadeite", "0");
        dic12.add("val0", "12");
        dic12.add("val1", "13");
        dic12.add("val2", "14");
        dic12.add("val3", "15");
        dic12.add("val4", "16");
        dic12.add("val5", "17");
        dic12.add("val6", "18");
        dic12.add("val7", "19");
        dic12.add("val8", "20");
        dic12.add("val9", "21");
        dic12.add("val10", "22");
        this.infDic.add("12", dic12);
        var dic13 = new Dictionary_1.default();
        dic13.add("id", "13");
        dic13.add("lv", "13");
        dic13.add("star", "1");
        dic13.add("basic_injury", "42");
        dic13.add("injury_index", "286");
        dic13.add("cost_gold", "1200");
        dic13.add("cost_jadeite", "0");
        dic13.add("val0", "13");
        dic13.add("val1", "14");
        dic13.add("val2", "15");
        dic13.add("val3", "16");
        dic13.add("val4", "17");
        dic13.add("val5", "18");
        dic13.add("val6", "19");
        dic13.add("val7", "20");
        dic13.add("val8", "21");
        dic13.add("val9", "22");
        dic13.add("val10", "23");
        this.infDic.add("13", dic13);
        var dic14 = new Dictionary_1.default();
        dic14.add("id", "14");
        dic14.add("lv", "14");
        dic14.add("star", "1");
        dic14.add("basic_injury", "46");
        dic14.add("injury_index", "306");
        dic14.add("cost_gold", "1250");
        dic14.add("cost_jadeite", "0");
        dic14.add("val0", "14");
        dic14.add("val1", "15");
        dic14.add("val2", "16");
        dic14.add("val3", "17");
        dic14.add("val4", "18");
        dic14.add("val5", "19");
        dic14.add("val6", "20");
        dic14.add("val7", "21");
        dic14.add("val8", "22");
        dic14.add("val9", "23");
        dic14.add("val10", "24");
        this.infDic.add("14", dic14);
        var dic15 = new Dictionary_1.default();
        dic15.add("id", "15");
        dic15.add("lv", "15");
        dic15.add("star", "1");
        dic15.add("basic_injury", "50");
        dic15.add("injury_index", "327");
        dic15.add("cost_gold", "1300");
        dic15.add("cost_jadeite", "0");
        dic15.add("val0", "15");
        dic15.add("val1", "16");
        dic15.add("val2", "17");
        dic15.add("val3", "18");
        dic15.add("val4", "19");
        dic15.add("val5", "20");
        dic15.add("val6", "21");
        dic15.add("val7", "22");
        dic15.add("val8", "23");
        dic15.add("val9", "24");
        dic15.add("val10", "25");
        this.infDic.add("15", dic15);
        var dic16 = new Dictionary_1.default();
        dic16.add("id", "16");
        dic16.add("lv", "16");
        dic16.add("star", "1");
        dic16.add("basic_injury", "54");
        dic16.add("injury_index", "348");
        dic16.add("cost_gold", "1350");
        dic16.add("cost_jadeite", "0");
        dic16.add("val0", "16");
        dic16.add("val1", "17");
        dic16.add("val2", "18");
        dic16.add("val3", "19");
        dic16.add("val4", "20");
        dic16.add("val5", "21");
        dic16.add("val6", "22");
        dic16.add("val7", "23");
        dic16.add("val8", "24");
        dic16.add("val9", "25");
        dic16.add("val10", "26");
        this.infDic.add("16", dic16);
        var dic17 = new Dictionary_1.default();
        dic17.add("id", "17");
        dic17.add("lv", "17");
        dic17.add("star", "1");
        dic17.add("basic_injury", "58");
        dic17.add("injury_index", "371");
        dic17.add("cost_gold", "1400");
        dic17.add("cost_jadeite", "0");
        dic17.add("val0", "17");
        dic17.add("val1", "18");
        dic17.add("val2", "19");
        dic17.add("val3", "20");
        dic17.add("val4", "21");
        dic17.add("val5", "22");
        dic17.add("val6", "23");
        dic17.add("val7", "24");
        dic17.add("val8", "25");
        dic17.add("val9", "26");
        dic17.add("val10", "27");
        this.infDic.add("17", dic17);
        var dic18 = new Dictionary_1.default();
        dic18.add("id", "18");
        dic18.add("lv", "18");
        dic18.add("star", "1");
        dic18.add("basic_injury", "62");
        dic18.add("injury_index", "394");
        dic18.add("cost_gold", "1450");
        dic18.add("cost_jadeite", "0");
        dic18.add("val0", "18");
        dic18.add("val1", "19");
        dic18.add("val2", "20");
        dic18.add("val3", "21");
        dic18.add("val4", "22");
        dic18.add("val5", "23");
        dic18.add("val6", "24");
        dic18.add("val7", "25");
        dic18.add("val8", "26");
        dic18.add("val9", "27");
        dic18.add("val10", "28");
        this.infDic.add("18", dic18);
        var dic19 = new Dictionary_1.default();
        dic19.add("id", "19");
        dic19.add("lv", "19");
        dic19.add("star", "1");
        dic19.add("basic_injury", "67");
        dic19.add("injury_index", "418");
        dic19.add("cost_gold", "1500");
        dic19.add("cost_jadeite", "0");
        dic19.add("val0", "19");
        dic19.add("val1", "20");
        dic19.add("val2", "21");
        dic19.add("val3", "22");
        dic19.add("val4", "23");
        dic19.add("val5", "24");
        dic19.add("val6", "25");
        dic19.add("val7", "26");
        dic19.add("val8", "27");
        dic19.add("val9", "28");
        dic19.add("val10", "29");
        this.infDic.add("19", dic19);
        var dic20 = new Dictionary_1.default();
        dic20.add("id", "20");
        dic20.add("lv", "20");
        dic20.add("star", "1");
        dic20.add("basic_injury", "72");
        dic20.add("injury_index", "443");
        dic20.add("cost_gold", "1550");
        dic20.add("cost_jadeite", "60");
        dic20.add("val0", "20");
        dic20.add("val1", "21");
        dic20.add("val2", "22");
        dic20.add("val3", "23");
        dic20.add("val4", "24");
        dic20.add("val5", "25");
        dic20.add("val6", "26");
        dic20.add("val7", "27");
        dic20.add("val8", "28");
        dic20.add("val9", "29");
        dic20.add("val10", "30");
        this.infDic.add("20", dic20);
    };
    TimeHouseInfo.infDic = new Dictionary_1.default();
    TimeHouseInfo.infList = null;
    return TimeHouseInfo;
}());
exports.default = TimeHouseInfo;
},{"../Tool/Dictionary":5}],39:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Tool/Dictionary");
var TrialInfo = /** @class */ (function () {
    function TrialInfo(id) {
        this.curInf = new Dictionary_1.default();
        this.curInf = TrialInfo.infDic.getValue(id);
    }
    TrialInfo.serverInit = function (infDic) {
        this.infDic.clear();
        this.infDic = infDic;
    };
    Object.defineProperty(TrialInfo.prototype, "id", {
        get: function () {
            return Number(this.curInf.getValue("id"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TrialInfo.prototype, "level", {
        get: function () {
            return Number(this.curInf.getValue("level"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TrialInfo.prototype, "cooldown", {
        get: function () {
            return Number(this.curInf.getValue("cooldown"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TrialInfo.prototype, "reward_id", {
        get: function () {
            return Number(this.curInf.getValue("reward_id"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TrialInfo.prototype, "reward_num", {
        get: function () {
            return Number(this.curInf.getValue("reward_num"));
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 依据id获得配置信息
     * @param id 配置id
     */
    TrialInfo.getInfo = function (id) {
        var ids = String(id);
        if (this.infDic.hasKey(ids)) {
            return new TrialInfo(ids);
        }
        return null;
    };
    TrialInfo.getList = function () {
        if (this.infList == null) {
            var list = this.infDic.getKeys();
            this.infList = [];
            for (var i = 0, len = list.length; i < len; i++) {
                this.infList.push(new TrialInfo(list[i]));
            }
        }
        return this.infList;
    };
    TrialInfo.init = function () {
        this.infDic = new Dictionary_1.default();
        var dic1 = new Dictionary_1.default();
        dic1.add("id", "1");
        dic1.add("level", "1");
        dic1.add("cooldown", "30");
        dic1.add("reward_id", "1");
        dic1.add("reward_num", "1");
        this.infDic.add("1", dic1);
        var dic2 = new Dictionary_1.default();
        dic2.add("id", "2");
        dic2.add("level", "2");
        dic2.add("cooldown", "60");
        dic2.add("reward_id", "2");
        dic2.add("reward_num", "2");
        this.infDic.add("2", dic2);
        var dic3 = new Dictionary_1.default();
        dic3.add("id", "3");
        dic3.add("level", "3");
        dic3.add("cooldown", "120");
        dic3.add("reward_id", "3");
        dic3.add("reward_num", "3");
        this.infDic.add("3", dic3);
        var dic4 = new Dictionary_1.default();
        dic4.add("id", "4");
        dic4.add("level", "4");
        dic4.add("cooldown", "240");
        dic4.add("reward_id", "4");
        dic4.add("reward_num", "4");
        this.infDic.add("4", dic4);
        var dic5 = new Dictionary_1.default();
        dic5.add("id", "5");
        dic5.add("level", "5");
        dic5.add("cooldown", "480");
        dic5.add("reward_id", "5");
        dic5.add("reward_num", "5");
        this.infDic.add("5", dic5);
        var dic6 = new Dictionary_1.default();
        dic6.add("id", "6");
        dic6.add("level", "6");
        dic6.add("cooldown", "960");
        dic6.add("reward_id", "6");
        dic6.add("reward_num", "6");
        this.infDic.add("6", dic6);
        var dic7 = new Dictionary_1.default();
        dic7.add("id", "7");
        dic7.add("level", "7");
        dic7.add("cooldown", "1920");
        dic7.add("reward_id", "7");
        dic7.add("reward_num", "7");
        this.infDic.add("7", dic7);
        var dic8 = new Dictionary_1.default();
        dic8.add("id", "8");
        dic8.add("level", "8");
        dic8.add("cooldown", "3840");
        dic8.add("reward_id", "8");
        dic8.add("reward_num", "8");
        this.infDic.add("8", dic8);
        var dic9 = new Dictionary_1.default();
        dic9.add("id", "9");
        dic9.add("level", "9");
        dic9.add("cooldown", "7680");
        dic9.add("reward_id", "9");
        dic9.add("reward_num", "9");
        this.infDic.add("9", dic9);
        var dic10 = new Dictionary_1.default();
        dic10.add("id", "10");
        dic10.add("level", "10");
        dic10.add("cooldown", "15360");
        dic10.add("reward_id", "10");
        dic10.add("reward_num", "10");
        this.infDic.add("10", dic10);
    };
    TrialInfo.infDic = new Dictionary_1.default();
    TrialInfo.infList = null;
    return TrialInfo;
}());
exports.default = TrialInfo;
},{"../Tool/Dictionary":5}],40:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Tool/Dictionary");
var WaveInfo = /** @class */ (function () {
    function WaveInfo(id) {
        this.curInf = new Dictionary_1.default();
        this.curInf = WaveInfo.infDic.getValue(id);
    }
    WaveInfo.serverInit = function (infDic) {
        this.infDic.clear();
        this.infDic = infDic;
    };
    Object.defineProperty(WaveInfo.prototype, "id", {
        get: function () {
            return Number(this.curInf.getValue("id"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WaveInfo.prototype, "map", {
        get: function () {
            return Number(this.curInf.getValue("map"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WaveInfo.prototype, "level", {
        get: function () {
            return Number(this.curInf.getValue("level"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WaveInfo.prototype, "lv", {
        get: function () {
            return Number(this.curInf.getValue("lv"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WaveInfo.prototype, "type", {
        get: function () {
            return Number(this.curInf.getValue("type"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WaveInfo.prototype, "difficulty", {
        get: function () {
            return Number(this.curInf.getValue("difficulty"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WaveInfo.prototype, "waveform", {
        get: function () {
            return Number(this.curInf.getValue("waveform"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WaveInfo.prototype, "random", {
        get: function () {
            return Number(this.curInf.getValue("random"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WaveInfo.prototype, "time", {
        get: function () {
            return Number(this.curInf.getValue("time"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WaveInfo.prototype, "total_fight", {
        get: function () {
            return Number(this.curInf.getValue("total_fight"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WaveInfo.prototype, "total_speed", {
        get: function () {
            return Number(this.curInf.getValue("total_speed"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WaveInfo.prototype, "gold", {
        get: function () {
            return Number(this.curInf.getValue("gold"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WaveInfo.prototype, "diamonds", {
        get: function () {
            return Number(this.curInf.getValue("diamonds"));
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 依据id获得配置信息
     * @param id 配置id
     */
    WaveInfo.getInfo = function (id) {
        var ids = String(id);
        if (this.infDic.hasKey(ids)) {
            return new WaveInfo(ids);
        }
        return null;
    };
    WaveInfo.getList = function () {
        if (this.infList == null) {
            var list = this.infDic.getKeys();
            this.infList = [];
            for (var i = 0, len = list.length; i < len; i++) {
                this.infList.push(new WaveInfo(list[i]));
            }
        }
        return this.infList;
    };
    WaveInfo.init = function () {
        this.infDic = new Dictionary_1.default();
        var dic1 = new Dictionary_1.default();
        dic1.add("id", "1");
        dic1.add("map", "1");
        dic1.add("level", "1");
        dic1.add("lv", "1");
        dic1.add("type", "1");
        dic1.add("difficulty", "1");
        dic1.add("waveform", "1");
        dic1.add("random", "2382");
        dic1.add("time", "90");
        dic1.add("total_fight", "1");
        dic1.add("total_speed", "2");
        dic1.add("gold", "3");
        dic1.add("diamonds", "4");
        this.infDic.add("1", dic1);
        var dic2 = new Dictionary_1.default();
        dic2.add("id", "2");
        dic2.add("map", "1");
        dic2.add("level", "2");
        dic2.add("lv", "4");
        dic2.add("type", "2");
        dic2.add("difficulty", "2");
        dic2.add("waveform", "2");
        dic2.add("random", "7553");
        dic2.add("time", "90");
        dic2.add("total_fight", "1");
        dic2.add("total_speed", "2");
        dic2.add("gold", "3");
        dic2.add("diamonds", "4");
        this.infDic.add("2", dic2);
        var dic3 = new Dictionary_1.default();
        dic3.add("id", "3");
        dic3.add("map", "1");
        dic3.add("level", "3");
        dic3.add("lv", "7");
        dic3.add("type", "3");
        dic3.add("difficulty", "3");
        dic3.add("waveform", "3");
        dic3.add("random", "1235");
        dic3.add("time", "90");
        dic3.add("total_fight", "1");
        dic3.add("total_speed", "2");
        dic3.add("gold", "3");
        dic3.add("diamonds", "4");
        this.infDic.add("3", dic3);
        var dic4 = new Dictionary_1.default();
        dic4.add("id", "4");
        dic4.add("map", "1");
        dic4.add("level", "4");
        dic4.add("lv", "10");
        dic4.add("type", "4");
        dic4.add("difficulty", "4");
        dic4.add("waveform", "1");
        dic4.add("random", "3135");
        dic4.add("time", "90");
        dic4.add("total_fight", "1");
        dic4.add("total_speed", "2");
        dic4.add("gold", "3");
        dic4.add("diamonds", "4");
        this.infDic.add("4", dic4);
        var dic5 = new Dictionary_1.default();
        dic5.add("id", "5");
        dic5.add("map", "2");
        dic5.add("level", "1");
        dic5.add("lv", "11");
        dic5.add("type", "5");
        dic5.add("difficulty", "5");
        dic5.add("waveform", "2");
        dic5.add("random", "4632");
        dic5.add("time", "90");
        dic5.add("total_fight", "1");
        dic5.add("total_speed", "2");
        dic5.add("gold", "3");
        dic5.add("diamonds", "4");
        this.infDic.add("5", dic5);
        var dic6 = new Dictionary_1.default();
        dic6.add("id", "6");
        dic6.add("map", "2");
        dic6.add("level", "2");
        dic6.add("lv", "14");
        dic6.add("type", "6");
        dic6.add("difficulty", "6");
        dic6.add("waveform", "3");
        dic6.add("random", "3252");
        dic6.add("time", "90");
        dic6.add("total_fight", "1");
        dic6.add("total_speed", "2");
        dic6.add("gold", "3");
        dic6.add("diamonds", "4");
        this.infDic.add("6", dic6);
        var dic7 = new Dictionary_1.default();
        dic7.add("id", "7");
        dic7.add("map", "2");
        dic7.add("level", "3");
        dic7.add("lv", "17");
        dic7.add("type", "1");
        dic7.add("difficulty", "7");
        dic7.add("waveform", "1");
        dic7.add("random", "2454");
        dic7.add("time", "90");
        dic7.add("total_fight", "1");
        dic7.add("total_speed", "2");
        dic7.add("gold", "3");
        dic7.add("diamonds", "4");
        this.infDic.add("7", dic7);
        var dic8 = new Dictionary_1.default();
        dic8.add("id", "8");
        dic8.add("map", "2");
        dic8.add("level", "4");
        dic8.add("lv", "20");
        dic8.add("type", "2");
        dic8.add("difficulty", "8");
        dic8.add("waveform", "2");
        dic8.add("random", "5331");
        dic8.add("time", "90");
        dic8.add("total_fight", "1");
        dic8.add("total_speed", "2");
        dic8.add("gold", "3");
        dic8.add("diamonds", "4");
        this.infDic.add("8", dic8);
        var dic9 = new Dictionary_1.default();
        dic9.add("id", "9");
        dic9.add("map", "3");
        dic9.add("level", "1");
        dic9.add("lv", "21");
        dic9.add("type", "3");
        dic9.add("difficulty", "9");
        dic9.add("waveform", "3");
        dic9.add("random", "2316");
        dic9.add("time", "90");
        dic9.add("total_fight", "1");
        dic9.add("total_speed", "2");
        dic9.add("gold", "3");
        dic9.add("diamonds", "4");
        this.infDic.add("9", dic9);
        var dic10 = new Dictionary_1.default();
        dic10.add("id", "10");
        dic10.add("map", "3");
        dic10.add("level", "2");
        dic10.add("lv", "24");
        dic10.add("type", "4");
        dic10.add("difficulty", "10");
        dic10.add("waveform", "1");
        dic10.add("random", "6275");
        dic10.add("time", "90");
        dic10.add("total_fight", "1");
        dic10.add("total_speed", "2");
        dic10.add("gold", "3");
        dic10.add("diamonds", "4");
        this.infDic.add("10", dic10);
        var dic11 = new Dictionary_1.default();
        dic11.add("id", "11");
        dic11.add("map", "3");
        dic11.add("level", "3");
        dic11.add("lv", "27");
        dic11.add("type", "5");
        dic11.add("difficulty", "1");
        dic11.add("waveform", "2");
        dic11.add("random", "7538");
        dic11.add("time", "90");
        dic11.add("total_fight", "1");
        dic11.add("total_speed", "2");
        dic11.add("gold", "3");
        dic11.add("diamonds", "4");
        this.infDic.add("11", dic11);
        var dic12 = new Dictionary_1.default();
        dic12.add("id", "12");
        dic12.add("map", "3");
        dic12.add("level", "4");
        dic12.add("lv", "30");
        dic12.add("type", "6");
        dic12.add("difficulty", "2");
        dic12.add("waveform", "3");
        dic12.add("random", "5246");
        dic12.add("time", "90");
        dic12.add("total_fight", "1");
        dic12.add("total_speed", "2");
        dic12.add("gold", "3");
        dic12.add("diamonds", "4");
        this.infDic.add("12", dic12);
        var dic13 = new Dictionary_1.default();
        dic13.add("id", "13");
        dic13.add("map", "4");
        dic13.add("level", "1");
        dic13.add("lv", "31");
        dic13.add("type", "1");
        dic13.add("difficulty", "3");
        dic13.add("waveform", "1");
        dic13.add("random", "7525");
        dic13.add("time", "90");
        dic13.add("total_fight", "1");
        dic13.add("total_speed", "2");
        dic13.add("gold", "3");
        dic13.add("diamonds", "4");
        this.infDic.add("13", dic13);
    };
    WaveInfo.infDic = new Dictionary_1.default();
    WaveInfo.infList = null;
    return WaveInfo;
}());
exports.default = WaveInfo;
},{"../Tool/Dictionary":5}],41:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Tool/Dictionary");
var WaveformInfo = /** @class */ (function () {
    function WaveformInfo(id) {
        this.curInf = new Dictionary_1.default();
        this.curInf = WaveformInfo.infDic.getValue(id);
    }
    WaveformInfo.serverInit = function (infDic) {
        this.infDic.clear();
        this.infDic = infDic;
    };
    Object.defineProperty(WaveformInfo.prototype, "id", {
        get: function () {
            return Number(this.curInf.getValue("id"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WaveformInfo.prototype, "type", {
        get: function () {
            return Number(this.curInf.getValue("type"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WaveformInfo.prototype, "index", {
        get: function () {
            return Number(this.curInf.getValue("index"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WaveformInfo.prototype, "waveform", {
        get: function () {
            return Number(this.curInf.getValue("waveform"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WaveformInfo.prototype, "boss", {
        get: function () {
            return Number(this.curInf.getValue("boss"));
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 依据id获得配置信息
     * @param id 配置id
     */
    WaveformInfo.getInfo = function (id) {
        var ids = String(id);
        if (this.infDic.hasKey(ids)) {
            return new WaveformInfo(ids);
        }
        return null;
    };
    WaveformInfo.getList = function () {
        if (this.infList == null) {
            var list = this.infDic.getKeys();
            this.infList = [];
            for (var i = 0, len = list.length; i < len; i++) {
                this.infList.push(new WaveformInfo(list[i]));
            }
        }
        return this.infList;
    };
    WaveformInfo.getInfoWithType = function (type) {
        var list = WaveformInfo.getList();
        var result = [];
        for (var i = list.length - 1; i >= 0; i--) {
            if (list[i].type == type) {
                result.push(list[i]);
            }
        }
        return result;
    };
    WaveformInfo.init = function () {
        this.infDic = new Dictionary_1.default();
        var dic1 = new Dictionary_1.default();
        dic1.add("id", "1");
        dic1.add("type", "1");
        dic1.add("index", "0");
        dic1.add("waveform", "0");
        dic1.add("boss", "0");
        this.infDic.add("1", dic1);
        var dic2 = new Dictionary_1.default();
        dic2.add("id", "2");
        dic2.add("type", "1");
        dic2.add("index", "1");
        dic2.add("waveform", "25");
        dic2.add("boss", "0");
        this.infDic.add("2", dic2);
        var dic3 = new Dictionary_1.default();
        dic3.add("id", "3");
        dic3.add("type", "1");
        dic3.add("index", "2");
        dic3.add("waveform", "37.5");
        dic3.add("boss", "0");
        this.infDic.add("3", dic3);
        var dic4 = new Dictionary_1.default();
        dic4.add("id", "4");
        dic4.add("type", "1");
        dic4.add("index", "3");
        dic4.add("waveform", "50");
        dic4.add("boss", "0");
        this.infDic.add("4", dic4);
        var dic5 = new Dictionary_1.default();
        dic5.add("id", "5");
        dic5.add("type", "1");
        dic5.add("index", "4");
        dic5.add("waveform", "62.5");
        dic5.add("boss", "0");
        this.infDic.add("5", dic5);
        var dic6 = new Dictionary_1.default();
        dic6.add("id", "6");
        dic6.add("type", "1");
        dic6.add("index", "5");
        dic6.add("waveform", "75");
        dic6.add("boss", "0");
        this.infDic.add("6", dic6);
        var dic7 = new Dictionary_1.default();
        dic7.add("id", "7");
        dic7.add("type", "1");
        dic7.add("index", "6");
        dic7.add("waveform", "87.5");
        dic7.add("boss", "2");
        this.infDic.add("7", dic7);
        var dic8 = new Dictionary_1.default();
        dic8.add("id", "8");
        dic8.add("type", "1");
        dic8.add("index", "7");
        dic8.add("waveform", "62.5");
        dic8.add("boss", "0");
        this.infDic.add("8", dic8);
        var dic9 = new Dictionary_1.default();
        dic9.add("id", "9");
        dic9.add("type", "1");
        dic9.add("index", "8");
        dic9.add("waveform", "75");
        dic9.add("boss", "0");
        this.infDic.add("9", dic9);
        var dic10 = new Dictionary_1.default();
        dic10.add("id", "10");
        dic10.add("type", "1");
        dic10.add("index", "9");
        dic10.add("waveform", "87.5");
        dic10.add("boss", "0");
        this.infDic.add("10", dic10);
        var dic11 = new Dictionary_1.default();
        dic11.add("id", "11");
        dic11.add("type", "1");
        dic11.add("index", "10");
        dic11.add("waveform", "100");
        dic11.add("boss", "1");
        this.infDic.add("11", dic11);
        var dic12 = new Dictionary_1.default();
        dic12.add("id", "12");
        dic12.add("type", "2");
        dic12.add("index", "0");
        dic12.add("waveform", "0");
        dic12.add("boss", "0");
        this.infDic.add("12", dic12);
        var dic13 = new Dictionary_1.default();
        dic13.add("id", "13");
        dic13.add("type", "2");
        dic13.add("index", "1");
        dic13.add("waveform", "25");
        dic13.add("boss", "0");
        this.infDic.add("13", dic13);
        var dic14 = new Dictionary_1.default();
        dic14.add("id", "14");
        dic14.add("type", "2");
        dic14.add("index", "2");
        dic14.add("waveform", "37.5");
        dic14.add("boss", "0");
        this.infDic.add("14", dic14);
        var dic15 = new Dictionary_1.default();
        dic15.add("id", "15");
        dic15.add("type", "2");
        dic15.add("index", "3");
        dic15.add("waveform", "50");
        dic15.add("boss", "0");
        this.infDic.add("15", dic15);
        var dic16 = new Dictionary_1.default();
        dic16.add("id", "16");
        dic16.add("type", "2");
        dic16.add("index", "4");
        dic16.add("waveform", "62.5");
        dic16.add("boss", "0");
        this.infDic.add("16", dic16);
        var dic17 = new Dictionary_1.default();
        dic17.add("id", "17");
        dic17.add("type", "2");
        dic17.add("index", "5");
        dic17.add("waveform", "75");
        dic17.add("boss", "0");
        this.infDic.add("17", dic17);
        var dic18 = new Dictionary_1.default();
        dic18.add("id", "18");
        dic18.add("type", "2");
        dic18.add("index", "6");
        dic18.add("waveform", "87.5");
        dic18.add("boss", "2");
        this.infDic.add("18", dic18);
        var dic19 = new Dictionary_1.default();
        dic19.add("id", "19");
        dic19.add("type", "2");
        dic19.add("index", "7");
        dic19.add("waveform", "62.5");
        dic19.add("boss", "0");
        this.infDic.add("19", dic19);
        var dic20 = new Dictionary_1.default();
        dic20.add("id", "20");
        dic20.add("type", "2");
        dic20.add("index", "8");
        dic20.add("waveform", "75");
        dic20.add("boss", "0");
        this.infDic.add("20", dic20);
        var dic21 = new Dictionary_1.default();
        dic21.add("id", "21");
        dic21.add("type", "2");
        dic21.add("index", "9");
        dic21.add("waveform", "87.5");
        dic21.add("boss", "0");
        this.infDic.add("21", dic21);
        var dic22 = new Dictionary_1.default();
        dic22.add("id", "22");
        dic22.add("type", "2");
        dic22.add("index", "10");
        dic22.add("waveform", "100");
        dic22.add("boss", "1");
        this.infDic.add("22", dic22);
    };
    WaveformInfo.infDic = new Dictionary_1.default();
    WaveformInfo.infList = null;
    return WaveformInfo;
}());
exports.default = WaveformInfo;
},{"../Tool/Dictionary":5}],42:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Tool/Dictionary");
var FGUIResPackageConfig_1 = require("./FGUIResPackageConfig");
var Handler = Laya.Handler;
var Loader = laya.net.Loader;
var GamePreload_1 = require("./GamePreload");
var AssetManager = /** @class */ (function () {
    function AssetManager() {
    }
    // 加载资源列表
    AssetManager.loadList = function (list, onObj, onCompleteFun, onProgress) {
        var count = list.length;
        var index = 0;
        var callback = {
            onComplete: function (isSuccess) {
                var item = list[index];
                index++;
                if (onProgress) {
                    var rate = count > 0 ? index / count : 1;
                    onProgress(rate, index, count, item);
                }
                if (index >= count) {
                    if (onCompleteFun) {
                        if (onObj) {
                            onCompleteFun.apply(onObj);
                        }
                        else {
                            onCompleteFun();
                        }
                    }
                }
            },
            onProgress: function (val) {
                // console.log("加载资源列表 onProgress: val=" + val);
            }
        };
        if (list && list.length > 0) {
            var assets = [];
            var item = void 0;
            for (var i = 0; i < list.length; i++) {
                item = list[i];
                if (!item) {
                    callback.onComplete(item);
                }
                switch (item.type) {
                    case GamePreload_1.AssetItemType.FguiPackage:
                        this.loadFguiByPackagename(item.url, callback, callback.onComplete);
                        break;
                    case GamePreload_1.AssetItemType.Image:
                        assets.push({ url: item.url, type: Loader.IMAGE });
                        break;
                    case GamePreload_1.AssetItemType.Buffer:
                        assets.push({ url: item.url, type: Loader.BUFFER });
                        break;
                    case GamePreload_1.AssetItemType.Sound:
                        assets.push({ url: item.url, type: Loader.SOUND });
                        break;
                    case GamePreload_1.AssetItemType.Text:
                        assets.push({ url: item.url, type: Loader.TEXT });
                        break;
                    case GamePreload_1.AssetItemType.Json:
                        assets.push({ url: item.url, type: Loader.JSON });
                        break;
                    case GamePreload_1.AssetItemType.Xml:
                        assets.push({ url: item.url, type: Loader.XML });
                        break;
                    case GamePreload_1.AssetItemType.Font:
                        assets.push({ url: item.url, type: Loader.FONT });
                        break;
                    case GamePreload_1.AssetItemType.TTF:
                        assets.push({ url: item.url, type: Loader.TTF });
                        break;
                }
            }
            if (assets.length > 0) {
                for (var j = 0; j < assets.length; j++) {
                    if (this.loadedAssets.hasKey(assets[j].url)) {
                        callback.onComplete(true);
                    }
                    else {
                        Laya.loader.load([assets[j]], Handler.create(callback, callback.onComplete), Handler.create(callback, callback.onProgress));
                    }
                    this.loadedAssets.add(assets[j].url, new Date().getTime());
                }
            }
        }
        else {
            callback.onComplete(null);
        }
    };
    // 加载fgui包
    AssetManager.loadFguiByPackagename = function (packageName, caller, method) {
        var packageConfig = FGUIResPackageConfig_1.default.getconfig(packageName);
        this.loadFgui(packageConfig, caller, method);
    };
    AssetManager.loadFgui = function (packageConfig, caller, method) {
        var _this = this;
        var callback = {
            apply: function () {
                _this.addPackage(packageConfig.packagePath, packageConfig);
                if (method) {
                    if (caller) {
                        return method.apply(caller, [packageConfig]);
                    }
                    else {
                        method(packageConfig);
                    }
                }
            }
        };
        if (this._uiPackageDict.hasKey(packageConfig.packagePath)) {
            callback.apply();
            return;
        }
        Laya.loader.load(packageConfig.loadList, Handler.create(callback, callback.apply));
    };
    AssetManager.unloadFgui = function (packageName, forceDispose) {
        if (forceDispose === undefined)
            forceDispose = false;
        var packageConfig = FGUIResPackageConfig_1.default.getconfig(packageName);
        if (packageConfig) {
            this.removePackage(packageConfig.packagePath, packageConfig);
            var list = packageConfig.loadList;
            for (var i = 0; i < list.length; i++) {
                Laya.loader.clearRes(list[i].url);
            }
        }
    };
    AssetManager.addPackage = function (resKey, packageConfig) {
        if (this._uiPackageDict.hasKey(resKey)) {
            return this._uiPackageDict.getValue(resKey);
        }
        else {
            var pkg = fairygui.UIPackage.addPackage(resKey);
            this._uiPackageDict.add(resKey, pkg);
            return pkg;
        }
    };
    AssetManager.removePackage = function (resKey, packageConfig) {
        var pkg = this._uiPackageDict.getValue(resKey);
        if (pkg) {
            fairygui.UIPackage.removePackage(resKey);
            pkg.dispose();
            this._uiPackageDict.remove(resKey);
        }
    };
    AssetManager.loadedAssets = new Dictionary_1.default();
    AssetManager._uiPackageDict = new Dictionary_1.default();
    return AssetManager;
}());
exports.default = AssetManager;
},{"../Tool/Dictionary":5,"./FGUIResPackageConfig":85,"./GamePreload":86}],43:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_ArrangementMain_1 = require("../../Generates/Arrangement/fui_ArrangementMain");
var Game_1 = require("../../../Game");
var HeroInfo_1 = require("../../../dataInfo/HeroInfo");
var EventManager_1 = require("../../../Tool/EventManager");
var EventKey_1 = require("../../../Tool/EventKey");
var Fun_1 = require("../../../Tool/Fun");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_ArrangementMain = /** @class */ (function (_super) {
    __extends(UI_ArrangementMain, _super);
    function UI_ArrangementMain() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.levelTick = null;
        _this._levelAdd = 0;
        _this.dragItem = null;
        _this.mouseupTimeout = -1;
        _this.heroList = [];
        _this.association = [];
        return _this;
    }
    UI_ArrangementMain.createInstance = function () {
        return (fui_ArrangementMain_1.default.createInstance());
    };
    UI_ArrangementMain.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_ArrangementMain.URL, UI_ArrangementMain);
    };
    UI_ArrangementMain.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
        this.m_backBtn.onClick(this, this.backUI);
        this.m_heroList.setVirtual();
        // 设置列表渲染函数
        this.m_heroList.itemRenderer = Laya.Handler.create(this, this.initItem, null, false);
        // 列表内容单个item被点击
        // this.m_heroList.on(fairygui.Events.CLICK_ITEM, this, this.onClickItem);
        this.m_heroList.on(Laya.Event.MOUSE_MOVE, this, this.onScroll);
        this.m_heroList.on(Laya.Event.MOUSE_OUT, this, this.onScrollout);
        this.m_heroList.on(Laya.Event.MOUSE_UP, this, this.onScrollup);
        // 设置列表渲染函数
        this.m_seatList.itemRenderer = Laya.Handler.create(this, this.initSeatItem, null, false);
        // 列表内容单个item被点击
        this.m_seatList.on(fairygui.Events.CLICK_ITEM, this, this.onClickSeatItem);
        this.m_associationList.setVirtual();
        // 设置列表渲染函数
        this.m_associationList.itemRenderer = Laya.Handler.create(this, this.initAssociationItem, null, false);
        // 下阵按钮
        this.m_removeSeatBtn.on(fairygui.Events.DROP, this, this.onDropRemove);
        // 升级
        this.m_levelUpBtn.on(Laya.Event.MOUSE_DOWN, this, this.levelUpDown);
        this.m_levelUpBtn.on(Laya.Event.MOUSE_OUT, this, this.levelUpUp);
        this.m_levelUpBtn.on(Laya.Event.MOUSE_UP, this, this.levelUpUp);
        // 升星
        this.m_starUpBtn.onClick(this, this.starUpClick);
        this.m_select1.onClick(this, this.selectClick, [0]);
        this.m_select2.onClick(this, this.selectClick, [1]);
        this.m_select3.onClick(this, this.selectClick, [2]);
        this.selectBtnEnable();
    };
    // 点击升级按钮
    UI_ArrangementMain.prototype.levelUpDown = function () {
        this._levelAdd = 0;
        if (this.levelTick) {
            this.levelTick.Stop();
            Game_1.default.tick.clearTick(this.levelTick);
            this.levelTick = null;
        }
        this.levelTick = Game_1.default.tick.addTick(9, Laya.Handler.create(this, this.levelAdd, null, false), null);
        this.levelTick.Start();
    };
    UI_ArrangementMain.prototype.levelAdd = function () {
        this._levelAdd++;
    };
    UI_ArrangementMain.prototype.levelUpUp = function () {
        if (this.levelTick) {
            this.levelTick.Stop();
            Game_1.default.tick.clearTick(this.levelTick);
            this.levelTick = null;
            var data = {
                upLevel: this._levelAdd,
            };
            Game_1.default.proto.upLevel(data);
        }
    };
    // 点击升星按钮
    UI_ArrangementMain.prototype.starUpClick = function () {
        Game_1.default.proto.upStar({});
    };
    // 拖拽松手在当前按钮上，上阵英雄下阵
    UI_ArrangementMain.prototype.onDropRemove = function (data, evt) {
        if (Game_1.default.battleData.seatPos == -1)
            return;
        if (Game_1.default.battleData.heroInf == null)
            return;
        if (Game_1.default.battleData.seatBtn != null) {
            Game_1.default.battleData.seatBtn.addHero(null);
            Game_1.default.battleData.seatBtn = null;
        }
    };
    // 切换布阵
    UI_ArrangementMain.prototype.selectClick = function (index) {
        Game_1.default.battleScene.seatHeroSelect = index;
        this.selectBtnEnable();
        this.refrushHeroList();
    };
    UI_ArrangementMain.prototype.selectBtnEnable = function () {
        this.m_select1.enabled = Game_1.default.battleScene.seatHeroSelect != 0;
        this.m_select2.enabled = Game_1.default.battleScene.seatHeroSelect != 1;
        this.m_select3.enabled = Game_1.default.battleScene.seatHeroSelect != 2;
    };
    // 拖拽列表中
    UI_ArrangementMain.prototype.onScroll = function () {
        if (Game_1.default.battleData.startDrag)
            return;
        if (this.dragItem == null) {
            this.rect = this.m_heroList.localToGlobalRect(0, 0, this.m_heroList.width, this.m_heroList.height);
            var cur = 0;
            while (this.dragItem == null && cur < this.m_heroList.numItems) {
                var item = this.m_heroList.getChildAt(cur);
                var rect = item.localToGlobalRect(0, 0, item.width, item.height);
                if (rect.x >= this.rect.x + this.rect.width) {
                    break;
                }
                if (rect.x < Laya.stage.mouseX && rect.x + item.width > Laya.stage.mouseX) {
                    this.dragItem = item;
                    break;
                }
                cur++;
            }
        }
    };
    // 拖拽出列表范围
    UI_ArrangementMain.prototype.onScrollout = function () {
        if (Game_1.default.battleData.startDrag)
            return;
        if (this.dragItem == null || this.dragItem.heroInf == null)
            return;
        Game_1.default.battleData.seatPos = -1;
        Game_1.default.battleData.heroInf = this.dragItem.heroInf;
        var btn = fairygui.GObject.cast(this.dragItem.displayObject);
        fairygui.DragDropManager.inst.startDrag(btn, btn.icon, btn.icon);
        Game_1.default.battleData.startDrag = true;
        this.m_heroList.scrollPane.scrollToView(this.m_heroList.getFirstChildInView());
    };
    // 在列表范围内抬起鼠标
    UI_ArrangementMain.prototype.onScrollup = function () {
        Game_1.default.battleData.heroInf = null;
        this.dragItem = null;
    };
    // 鼠标抬起
    UI_ArrangementMain.prototype.mouseUp = function () {
        var _this = this;
        if (this.mouseupTimeout == -1 && Game_1.default.battleData.heroInf != null) {
            this.mouseupTimeout = setTimeout(function () {
                clearTimeout(_this.mouseupTimeout);
                Game_1.default.battleData.heroInf = null;
                _this.dragItem = null;
                Game_1.default.battleData.seatPos = -1;
                _this.mouseupTimeout = -1;
                Game_1.default.battleData.startDrag = false;
            }, 10);
        }
    };
    // 渲染item
    UI_ArrangementMain.prototype.initItem = function (index, obj) {
        var item = obj;
        item.setData(this.heroList[index], this.moduleWindow);
    };
    // // 点击item
    // private onClickItem(obj: fairygui.GObject): void {
    // 	let index = this.m_heroList.getChildIndex(obj);
    // 	// 转换为点击item在整个列表中的真实索引
    // 	var realIndex: number = this.m_heroList.childIndexToItemIndex(index);
    // }
    // 刷新英雄列表
    UI_ArrangementMain.prototype.refrushHeroList = function () {
        var list = Game_1.default.playData.curHero;
        this.heroList = [];
        var dic = Game_1.default.battleScene.seatHeroDic.getValue(Game_1.default.battleScene.seatHeroSelect);
        var seatList = dic.getValues();
        for (var i = 0, len = list.length; i < len; i++) {
            if (seatList.indexOf(list[i]) == -1) {
                var hero = HeroInfo_1.default.getInfo(list[i]);
                this.heroList.push(hero);
            }
        }
        this.m_heroList.numItems = this.heroList.length;
        this.m_seatList.numItems = 9;
        this.refrushAssociation();
    };
    // private raceDic: Dictionary<number, number> = new Dictionary<number, number>();
    // private careerDic: Dictionary<number, number> = new Dictionary<number, number>();
    // 显示所有羁绊关系
    UI_ArrangementMain.prototype.refrushAssociation = function () {
        this.association = Game_1.default.battleData.refrushAssociation();
        // if (this.raceDic.count > 0) {
        // 	let races = this.raceDic.getKeys();
        // 	let racelist = AssociationRaceInfo.getList();
        // 	let temraceList: Dictionary<number, AssociationRaceInfo> = new Dictionary<number, AssociationRaceInfo>();
        // 	for (let i = 0, len = racelist.length; i < len; i++) {
        // 		let temRace = racelist[i].race;
        // 		if (races.indexOf(String(temRace)) != -1) {
        // 			if (racelist[i].num <= this.raceDic.getValue(temRace)) {
        // 				if (temraceList.hasKey(temRace)) {
        // 					let val = temraceList.getValue(temRace);
        // 					if (racelist[i].num > val.num) {
        // 						temraceList.add(racelist[i].race, racelist[i]);
        // 					}
        // 				}
        // 				else {
        // 					temraceList.add(racelist[i].race, racelist[i]);
        // 				}
        // 			}
        // 		}
        // 	}
        // 	if (temraceList.count > 0) {
        // 		let valList = temraceList.getValues();
        // 		for (let i = 0, len = valList.length; i < len; i++) {
        // 			let _ass = new Association();
        // 			_ass.num = valList[i].num;
        // 			_ass.attribute_id = valList[i].attribute;
        // 			_ass.values = valList[i].value;
        // 			_ass.race = valList[i].race;
        // 			_ass.names = FiveElementsInfo.getInfoWithType(_ass.race).name;
        // 			this.association.push(_ass);
        // 		}
        // 	}
        // }
        // if (this.careerDic.count > 0) {
        // 	let races = this.careerDic.getKeys();
        // 	let racelist = AssociationCareerInfo.getList();
        // 	let temraceList: Dictionary<number, AssociationCareerInfo> = new Dictionary<number, AssociationCareerInfo>();
        // 	for (let i = 0, len = racelist.length; i < len; i++) {
        // 		let temRace = racelist[i].career;
        // 		if (races.indexOf(String(temRace)) != -1) {
        // 			if (racelist[i].num <= this.careerDic.getValue(temRace)) {
        // 				if (temraceList.hasKey(temRace)) {
        // 					let val = temraceList.getValue(temRace);
        // 					if (racelist[i].num > val.num) {
        // 						temraceList.add(racelist[i].career, racelist[i]);
        // 					}
        // 				}
        // 				else {
        // 					temraceList.add(racelist[i].career, racelist[i]);
        // 				}
        // 			}
        // 		}
        // 	}
        // 	if (temraceList.count > 0) {
        // 		let valList = temraceList.getValues();
        // 		for (let i = 0, len = valList.length; i < len; i++) {
        // 			let _ass = new Association();
        // 			_ass.num = valList[i].num;
        // 			_ass.attribute_id = valList[i].attribute;
        // 			_ass.values = valList[i].value;
        // 			_ass.career = valList[i].career;
        // 			_ass.names = FiveElementsInfo.getInfoWithType(_ass.career).name;
        // 			this.association.push(_ass);
        // 		}
        // 	}
        // }
        // let speciallist = AssociationSpecialInfo.getList();
        // for (let i = 0, len = speciallist.length; i < len; i++) {
        // 	let _ass = new Association();
        // 	_ass.names = speciallist[i].name;
        // 	_ass.attribute_id = speciallist[i].attribute;
        // 	_ass.values = speciallist[i].value;
        // 	let heros = [];
        // 	let hero1 = speciallist[i].hero1;
        // 	let hero2 = speciallist[i].hero2;
        // 	let hero3 = speciallist[i].hero3;
        // 	let hero4 = speciallist[i].hero4;
        // 	let hero5 = speciallist[i].hero5;
        // 	if (hero1 != 0) {
        // 		heros.push(hero1);
        // 	}
        // 	if (hero2 != 0) {
        // 		heros.push(hero2);
        // 	}
        // 	if (hero3 != 0) {
        // 		heros.push(hero3);
        // 	}
        // 	if (hero4 != 0) {
        // 		heros.push(hero4);
        // 	}
        // 	if (hero5 != 0) {
        // 		heros.push(hero5);
        // 	}
        // 	_ass.hero = heros;
        // 	this.association.push(_ass);
        // }
        this.m_associationList.numItems = this.association.length;
    };
    // seat渲染item
    UI_ArrangementMain.prototype.initSeatItem = function (index, obj) {
        var item = obj;
        item.seatSetData(index, null, this.moduleWindow);
    };
    // seat点击item
    UI_ArrangementMain.prototype.onClickSeatItem = function (obj) {
        var index = this.m_heroList.getChildIndex(obj);
        // 转换为点击item在整个列表中的真实索引
        var realIndex = this.m_seatList.childIndexToItemIndex(index);
    };
    // Association渲染item
    UI_ArrangementMain.prototype.initAssociationItem = function (index, obj) {
        var item = obj;
        item.setData(this.association[index], this.moduleWindow);
    };
    // 关闭ui
    UI_ArrangementMain.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_ArrangementMain.prototype.backUI = function () {
        var list = [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]];
        for (var k = 0; k < 3; k++) {
            if (Game_1.default.battleScene.seatHeroDic.hasKey(k)) {
                var dic = Game_1.default.battleScene.seatHeroDic.getValue(k);
                for (var i = 0; i < 9; i++) {
                    if (dic.hasKey(i)) {
                        list[k][i] = dic.getValue(i);
                    }
                }
            }
        }
        var data = {
            "seat": {
                "0": list[0],
                "1": list[1],
                "2": list[2]
            },
            "seatNum": Game_1.default.battleScene.seatHeroSelect
        };
        Game_1.default.proto.setSeat(data);
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_ArrangementMain.prototype.onWindowShow = function () {
        Laya.stage.on(Laya.Event.MOUSE_UP, this, this.mouseUp);
        Laya.stage.on(Laya.Event.MOUSE_OUT, this, this.mouseUp);
        EventManager_1.default.on(EventKey_1.default.ADD_HERO, this, this.refrushHeroList);
        EventManager_1.default.on(EventKey_1.default.HERO_LEVEL_UPDATE, this, this.refreshHeroLevel);
        EventManager_1.default.on(EventKey_1.default.HERO_STAR_UPDATE, this, this.refreshHeroStar);
        this.setData();
    };
    // 关闭时调用，相当于disable
    UI_ArrangementMain.prototype.onWindowHide = function () {
        Laya.stage.off(Laya.Event.MOUSE_UP, this, this.mouseUp);
        Laya.stage.off(Laya.Event.MOUSE_OUT, this, this.mouseUp);
        EventManager_1.default.offAllCaller(this);
    };
    UI_ArrangementMain.prototype.setData = function () {
        this.refrushHeroList();
        if (this.heroList.length > 0) {
            this.m_heroList.scrollToView(0);
        }
        this.refreshHeroLevel();
        this.refreshHeroStar();
    };
    UI_ArrangementMain.prototype.refreshHeroLevel = function () {
        this.m_level.text = Fun_1.default.format("等级：{0}", Game_1.default.playData.curLevel);
    };
    UI_ArrangementMain.prototype.refreshHeroStar = function () {
        this.m_star.text = Fun_1.default.format("星级：{0}", Game_1.default.playData.curStar);
    };
    UI_ArrangementMain.DependPackages = ["Arrangement"];
    return UI_ArrangementMain;
}(fui_ArrangementMain_1.default));
exports.default = UI_ArrangementMain;
UI_ArrangementMain.bind();
},{"../../../Game":1,"../../../Tool/EventKey":6,"../../../Tool/EventManager":7,"../../../Tool/Fun":8,"../../../dataInfo/HeroInfo":30,"../../Generates/Arrangement/fui_ArrangementMain":87}],44:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_Association_1 = require("../../Generates/Arrangement/fui_Association");
var Fun_1 = require("../../../Tool/Fun");
var Game_1 = require("../../../Game");
var AssociationAttributeInfo_1 = require("../../../dataInfo/AssociationAttributeInfo");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_Association = /** @class */ (function (_super) {
    __extends(UI_Association, _super);
    function UI_Association() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UI_Association.createInstance = function () {
        return (fui_Association_1.default.createInstance());
    };
    UI_Association.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_Association.URL, UI_Association);
    };
    UI_Association.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
        this.m_recommendBtn.onClick(this, this.recomClick);
    };
    UI_Association.prototype.recomClick = function () {
        Game_1.default.battleData.association = this.datas;
        this.moduleWindow.createRecommend();
    };
    UI_Association.prototype.setData = function (datas, moduleWindow) {
        this.moduleWindow = moduleWindow;
        this.datas = datas;
        var att = AssociationAttributeInfo_1.default.getInfo(datas.attribute_id);
        if (datas.hero.length > 0) {
            this.m_title.text = Fun_1.default.format("{0} ", datas.names);
        }
        else {
            this.m_title.text = Fun_1.default.format("{0} X {1} 触发 ", datas.names, datas.num) + Fun_1.default.format(att.des, datas.values);
        }
    };
    // 关闭ui
    UI_Association.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_Association.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_Association.prototype.onWindowShow = function () {
    };
    // 关闭时调用，相当于disable
    UI_Association.prototype.onWindowHide = function () {
    };
    UI_Association.DependPackages = ["Arrangement"];
    return UI_Association;
}(fui_Association_1.default));
exports.default = UI_Association;
UI_Association.bind();
},{"../../../Game":1,"../../../Tool/Fun":8,"../../../dataInfo/AssociationAttributeInfo":23,"../../Generates/Arrangement/fui_Association":88}],45:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_HeroInfo_1 = require("../../Generates/Arrangement/fui_HeroInfo");
var Game_1 = require("../../../Game");
var FiveElementsInfo_1 = require("../../../dataInfo/FiveElementsInfo");
var Fun_1 = require("../../../Tool/Fun");
var EventManager_1 = require("../../../Tool/EventManager");
var EventKey_1 = require("../../../Tool/EventKey");
var ProtoEvent_1 = require("../../../protobuf/ProtoEvent");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_HeroInfo = /** @class */ (function (_super) {
    __extends(UI_HeroInfo, _super);
    function UI_HeroInfo() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.heroInf = null;
        return _this;
    }
    UI_HeroInfo.createInstance = function () {
        return (fui_HeroInfo_1.default.createInstance());
    };
    UI_HeroInfo.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_HeroInfo.URL, UI_HeroInfo);
    };
    UI_HeroInfo.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
        this.m_closeBtn.onClick(this, this.closeUI);
        this.m_gainmethod.onClick(this, this.clickGain);
    };
    UI_HeroInfo.prototype.clickGain = function () {
        if (Game_1.default.playData.curHero.indexOf(this.heroInf.id) == -1) {
            if (Game_1.default.playData.curClips.getValue(this.heroInf.id) >= 10) {
                // 英雄合成
                EventManager_1.default.event(EventKey_1.default.SHOW_UI_WAIT);
                var data = {
                    heroId: this.heroInf.id,
                };
                Game_1.default.proto.synthetise(data);
            }
            else {
                Game_1.default.tipWin.showTip("碎片数量不足，无法合成");
            }
        }
        else {
            Game_1.default.tipWin.showTip("你已拥有此英雄，无需再次合成", Laya.Handler.create(this, this.closeUI));
        }
    };
    UI_HeroInfo.prototype.synthetiseOver = function () {
        EventManager_1.default.event(EventKey_1.default.CLOSE_UI_WAIT);
        this.closeUI();
    };
    // 关闭ui
    UI_HeroInfo.prototype.closeUI = function () {
        this.moduleWindow.windowRemoveChild(this);
    };
    // 返回上一级ui
    UI_HeroInfo.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_HeroInfo.prototype.onWindowShow = function () {
        EventManager_1.default.on(ProtoEvent_1.default.SYNTHETISE_CALL_BACK, this, this.synthetiseOver);
        this.heroInf = Game_1.default.battleData.clickHeroInf;
        if (this.heroInf != null) {
            this.m_heroname.text = this.heroInf.name;
            this.m_race.text = Fun_1.default.format("五行：{0}", FiveElementsInfo_1.default.getInfoWithType(this.heroInf.race).name);
            this.m_career.text = Fun_1.default.format("门派：{0}", FiveElementsInfo_1.default.getInfoWithType(this.heroInf.career).name);
        }
        else {
            console.log("未发现英雄信息");
            this.closeUI();
        }
    };
    // 关闭时调用，相当于disable
    UI_HeroInfo.prototype.onWindowHide = function () {
        EventManager_1.default.off(ProtoEvent_1.default.SYNTHETISE_CALL_BACK, this, this.synthetiseOver);
        Game_1.default.battleData.clickHeroInf = null;
        this.heroInf = null;
    };
    UI_HeroInfo.DependPackages = ["Arrangement"];
    return UI_HeroInfo;
}(fui_HeroInfo_1.default));
exports.default = UI_HeroInfo;
UI_HeroInfo.bind();
},{"../../../Game":1,"../../../Tool/EventKey":6,"../../../Tool/EventManager":7,"../../../Tool/Fun":8,"../../../dataInfo/FiveElementsInfo":29,"../../../protobuf/ProtoEvent":191,"../../Generates/Arrangement/fui_HeroInfo":89}],46:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_PropBtn_1 = require("../../Generates/Arrangement/fui_PropBtn");
var SpriteKey_1 = require("../../SpriteKey");
var Game_1 = require("../../../Game");
var HeroInfo_1 = require("../../../dataInfo/HeroInfo");
var EventManager_1 = require("../../../Tool/EventManager");
var EventKey_1 = require("../../../Tool/EventKey");
var Fun_1 = require("../../../Tool/Fun");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_PropBtn = /** @class */ (function (_super) {
    __extends(UI_PropBtn, _super);
    function UI_PropBtn() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.heroInf = null;
        _this.seatIndex = -1;
        _this.seatInit = false;
        return _this;
    }
    UI_PropBtn.createInstance = function () {
        return (fui_PropBtn_1.default.createInstance());
    };
    UI_PropBtn.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_PropBtn.URL, UI_PropBtn);
    };
    UI_PropBtn.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
        this.on(fairygui.Events.DROP, this, this.onDrop);
        this.onClick(this, this.clickBtn);
    };
    // 按钮被点击
    UI_PropBtn.prototype.clickBtn = function () {
        if (this.heroInf != null) {
            Game_1.default.battleData.clickHeroInf = this.heroInf;
            this.moduleWindow.createHeroInfoUI();
        }
    };
    // 上阵英雄拖拽开始
    UI_PropBtn.prototype.ondragStarts = function (evt) {
        var btn = fairygui.GObject.cast(evt.currentTarget);
        btn.stopDrag(); //取消对原目标的拖动，换成一个替代品
        if (this.heroInf != null) {
            Game_1.default.battleData.seatPos = this.seatIndex;
            Game_1.default.battleData.heroInf = this.heroInf;
            Game_1.default.battleData.seatBtn = this;
            fairygui.DragDropManager.inst.startDrag(btn, btn.icon, btn.icon);
            Game_1.default.battleData.startDrag = true;
        }
    };
    // 拖拽松手在当前按钮上，替换内容
    UI_PropBtn.prototype.onDrop = function (data, evt) {
        if (this.seatIndex == -1 || Game_1.default.battleData.heroInf == null)
            return;
        if (Game_1.default.battleData.seatPos >= 0 && Game_1.default.battleData.seatPos == this.seatIndex)
            return;
        if (Game_1.default.battleData.seatPos < 0) {
            // 拖拽上阵
            this.addHero(Game_1.default.battleData.heroInf);
        }
        else {
            // 交换位置
            var oldInf = this.heroInf;
            this.addHero(Game_1.default.battleData.heroInf);
            if (Game_1.default.battleData.seatBtn != null) {
                Game_1.default.battleData.seatBtn.addHero(oldInf);
                Game_1.default.battleData.seatBtn = null;
            }
        }
    };
    // 上阵英雄
    UI_PropBtn.prototype.addHero = function (heroInf) {
        this.heroInf = heroInf;
        var dic = Game_1.default.battleScene.seatHeroDic.getValue(Game_1.default.battleScene.seatHeroSelect);
        dic.add(this.seatIndex, this.heroInf != null ? this.heroInf.id : 0);
        this.seatSetData(this.seatIndex, this.heroInf);
        EventManager_1.default.event(EventKey_1.default.ADD_HERO);
    };
    // 列表英雄赋值
    UI_PropBtn.prototype.setData = function (heroInf, moduleWindow) {
        if (this.moduleWindow == null)
            this.moduleWindow = moduleWindow;
        this.heroInf = heroInf;
        this.title = heroInf.name;
        var index = Number(this.heroInf.id);
        while (index > 6) {
            index -= 6;
        }
        switch (index) {
            case 0:
                this.icon = SpriteKey_1.default.getUrl(SpriteKey_1.default.icon_1001);
                break;
            case 1:
                this.icon = SpriteKey_1.default.getUrl(SpriteKey_1.default.icon_1002);
                break;
            case 2:
                this.icon = SpriteKey_1.default.getUrl(SpriteKey_1.default.icon_1003);
                break;
            case 3:
                this.icon = SpriteKey_1.default.getUrl(SpriteKey_1.default.icon_1005);
                break;
            case 4:
                this.icon = SpriteKey_1.default.getUrl(SpriteKey_1.default.icon_1006);
                break;
            case 5:
                this.icon = SpriteKey_1.default.getUrl(SpriteKey_1.default.icon_1007);
                break;
            case 6:
                this.icon = SpriteKey_1.default.getUrl(SpriteKey_1.default.icon_1012);
                break;
            default:
                this.icon = SpriteKey_1.default.getUrl(SpriteKey_1.default.icon_1001);
                break;
        }
        this.m_status.setSelectedIndex(2);
    };
    // 上阵英雄赋值
    UI_PropBtn.prototype.seatSetData = function (index, heroInf, moduleWindow) {
        this.seatIndex = index;
        if (!this.seatInit) {
            this.seatInit = true;
            this.draggable = true;
            this.on(fairygui.Events.DRAG_START, this, this.ondragStarts);
        }
        if (heroInf) {
            this.setData(heroInf, moduleWindow);
        }
        else {
            this.m_status.setSelectedIndex(0);
            var dic = Game_1.default.battleScene.seatHeroDic.getValue(Game_1.default.battleScene.seatHeroSelect);
            if (dic.hasKey(this.seatIndex)) {
                var id = dic.getValue(this.seatIndex);
                if (id > 0) {
                    heroInf = HeroInfo_1.default.getInfo(id);
                    if (heroInf) {
                        this.setData(heroInf, moduleWindow);
                    }
                }
            }
        }
    };
    // 显示碎片
    UI_PropBtn.prototype.clipsSetData = function (id, Clips, moduleWindow) {
        var heroInf = HeroInfo_1.default.getInfo(id);
        this.title = Fun_1.default.format("{0}X{1}", heroInf.name, Clips);
        var index = Number(heroInf.id);
        while (index > 6) {
            index -= 6;
        }
        switch (index) {
            case 0:
                this.icon = SpriteKey_1.default.getUrl(SpriteKey_1.default.icon_1001);
                break;
            case 1:
                this.icon = SpriteKey_1.default.getUrl(SpriteKey_1.default.icon_1002);
                break;
            case 2:
                this.icon = SpriteKey_1.default.getUrl(SpriteKey_1.default.icon_1003);
                break;
            case 3:
                this.icon = SpriteKey_1.default.getUrl(SpriteKey_1.default.icon_1005);
                break;
            case 4:
                this.icon = SpriteKey_1.default.getUrl(SpriteKey_1.default.icon_1006);
                break;
            case 5:
                this.icon = SpriteKey_1.default.getUrl(SpriteKey_1.default.icon_1007);
                break;
            case 6:
                this.icon = SpriteKey_1.default.getUrl(SpriteKey_1.default.icon_1012);
                break;
            default:
                this.icon = SpriteKey_1.default.getUrl(SpriteKey_1.default.icon_1001);
                break;
        }
        this.m_status.setSelectedIndex(2);
    };
    // 关闭ui
    UI_PropBtn.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_PropBtn.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_PropBtn.prototype.onWindowShow = function () {
    };
    // 关闭时调用，相当于disable
    UI_PropBtn.prototype.onWindowHide = function () {
    };
    UI_PropBtn.DependPackages = ["Arrangement"];
    return UI_PropBtn;
}(fui_PropBtn_1.default));
exports.default = UI_PropBtn;
UI_PropBtn.bind();
},{"../../../Game":1,"../../../Tool/EventKey":6,"../../../Tool/EventManager":7,"../../../Tool/Fun":8,"../../../dataInfo/HeroInfo":30,"../../Generates/Arrangement/fui_PropBtn":90,"../../SpriteKey":133}],47:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_Recommend_1 = require("../../Generates/Arrangement/fui_Recommend");
var Game_1 = require("../../../Game");
var HeroInfo_1 = require("../../../dataInfo/HeroInfo");
var EventManager_1 = require("../../../Tool/EventManager");
var EventKey_1 = require("../../../Tool/EventKey");
var Fun_1 = require("../../../Tool/Fun");
var Association_1 = require("../../../gamemodule/DataStructs/Association");
var AssociationRaceInfo_1 = require("../../../dataInfo/AssociationRaceInfo");
var AssociationCareerInfo_1 = require("../../../dataInfo/AssociationCareerInfo");
var AssociationAttributeInfo_1 = require("../../../dataInfo/AssociationAttributeInfo");
var FiveElementsInfo_1 = require("../../../dataInfo/FiveElementsInfo");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_Recommend = /** @class */ (function (_super) {
    __extends(UI_Recommend, _super);
    function UI_Recommend() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.dragItem = null;
        _this.heroList = [];
        _this.assocation = [];
        return _this;
    }
    UI_Recommend.createInstance = function () {
        return (fui_Recommend_1.default.createInstance());
    };
    UI_Recommend.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_Recommend.URL, UI_Recommend);
    };
    UI_Recommend.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
        this.m_closeBtn.onClick(this, this.clickClose);
        this.m_heroList.setVirtual();
        // 设置列表渲染函数
        this.m_heroList.itemRenderer = Laya.Handler.create(this, this.initItem, null, false);
        // 列表内容单个item被点击
        this.m_heroList.on(fairygui.Events.CLICK_ITEM, this, this.onClickItem);
        this.m_heroList.on(Laya.Event.MOUSE_MOVE, this, this.onScroll);
        this.m_heroList.on(Laya.Event.MOUSE_OUT, this, this.onScrollout);
        this.m_heroList.on(Laya.Event.MOUSE_UP, this, this.onScrollup);
        this.m_list.itemRenderer = Laya.Handler.create(this, this.initjibanItem, null, false);
    };
    UI_Recommend.prototype.clickClose = function () {
        this.moduleWindow.windowRemoveChild(this);
    };
    // 渲染item
    UI_Recommend.prototype.initjibanItem = function (index, obj) {
        var item = obj;
        var datas = this.assocation[this.assocation.length - 1];
        var att = AssociationAttributeInfo_1.default.getInfo(datas.attribute_id);
        item.m_titles.text = Fun_1.default.format("{0} X {1} 触发 ", datas.names, datas.num) + Fun_1.default.format(att.des, datas.values);
    };
    // 渲染item
    UI_Recommend.prototype.initItem = function (index, obj) {
        var item = obj;
        item.setData(this.heroList[index], this.moduleWindow);
    };
    // 点击item
    UI_Recommend.prototype.onClickItem = function (obj) {
        var index = this.m_heroList.getChildIndex(obj);
        // 转换为点击item在整个列表中的真实索引
        var realIndex = this.m_heroList.childIndexToItemIndex(index);
    };
    // 拖拽列表中
    UI_Recommend.prototype.onScroll = function () {
        if (Game_1.default.battleData.startDrag)
            return;
        if (this.dragItem == null && this.m_heroList.numItems > 0) {
            this.rect = this.m_heroList.localToGlobalRect(0, 0, this.m_heroList.width, this.m_heroList.height);
            var cur = 0;
            while (this.dragItem == null && cur < this.m_heroList.numItems) {
                var item = this.m_heroList.getChildAt(cur);
                var rect = item.localToGlobalRect(0, 0, item.width, item.height);
                if (rect.x >= this.rect.x + this.rect.width) {
                    break;
                }
                if (rect.x < Laya.stage.mouseX && rect.x + item.width > Laya.stage.mouseX) {
                    this.dragItem = item;
                    break;
                }
                cur++;
            }
        }
    };
    // 拖拽出列表范围
    UI_Recommend.prototype.onScrollout = function () {
        if (Game_1.default.battleData.startDrag)
            return;
        if (this.dragItem == null || this.dragItem.heroInf == null)
            return;
        Game_1.default.battleData.seatPos = -1;
        Game_1.default.battleData.heroInf = this.dragItem.heroInf;
        var btn = fairygui.GObject.cast(this.dragItem.displayObject);
        fairygui.DragDropManager.inst.startDrag(btn, btn.icon, btn.icon);
        Game_1.default.battleData.startDrag = true;
        this.m_heroList.scrollPane.scrollToView(this.m_heroList.getFirstChildInView());
    };
    // 在列表范围内抬起鼠标
    UI_Recommend.prototype.onScrollup = function () {
        Game_1.default.battleData.heroInf = null;
        this.dragItem = null;
    };
    UI_Recommend.prototype.refrushHeroList = function () {
        var list = HeroInfo_1.default.getList();
        this.heroList = [];
        var ass = Game_1.default.battleData.association;
        var dic = Game_1.default.battleScene.seatHeroDic.getValue(Game_1.default.battleScene.seatHeroSelect);
        var seatList = dic.getValues();
        for (var i = 0, len = list.length; i < len; i++) {
            if (seatList.indexOf(Number(list[i].id)) != -1) {
                continue;
            }
            if (ass.race != 0) {
                if (list[i].race == ass.race) {
                    this.heroList.push(list[i]);
                }
            }
            else if (ass.career != 0) {
                if (list[i].career == ass.career) {
                    this.heroList.push(list[i]);
                }
            }
            else if (ass.hero.length > 0) {
                for (var k = ass.hero.length - 1; k >= 0; k--) {
                    if (ass.hero[k] == Number(list[i].id)) {
                        this.heroList.push(list[i]);
                    }
                }
            }
        }
        this.m_heroList.numItems = this.heroList.length;
        this.assocation = [];
        var assocationLength = 0;
        for (var i = 0, len = seatList.length; i < len; i++) {
            if (ass.race != 0) {
                if (seatList[i] > 0) {
                    var hero = HeroInfo_1.default.getInfo(seatList[i]);
                    if (hero.race == ass.race) {
                        assocationLength++;
                    }
                }
            }
            else if (ass.career != 0) {
                if (seatList[i] > 0) {
                    var hero = HeroInfo_1.default.getInfo(seatList[i]);
                    if (hero.career == ass.career) {
                        assocationLength++;
                    }
                }
            }
            else if (ass.hero.length > 0) {
                for (var k = ass.hero.length - 1; k >= 0; k--) {
                    if (ass.hero.indexOf(seatList[i]) != -1) {
                        assocationLength++;
                    }
                }
            }
        }
        if (ass.race != 0) {
            this.m_type.text = "职业羁绊：";
            var racelist = AssociationRaceInfo_1.default.getList();
            var names = FiveElementsInfo_1.default.getInfoWithType(ass.race).name;
            for (var i = 0, len = racelist.length; i < len; i++) {
                if (racelist[i].race == ass.race && racelist[i].num <= assocationLength) {
                    var _ass = new Association_1.default();
                    _ass.names = names;
                    _ass.num = racelist[i].num;
                    _ass.attribute_id = racelist[i].attribute;
                    _ass.values = racelist[i].value;
                    _ass.race = racelist[i].race;
                    this.assocation.push(_ass);
                }
            }
        }
        else if (ass.career != 0) {
            this.m_type.text = "种族羁绊：";
            var careerlist = AssociationCareerInfo_1.default.getList();
            var names = FiveElementsInfo_1.default.getInfoWithType(ass.career).name;
            for (var i = 0, len = careerlist.length; i < len; i++) {
                if (careerlist[i].career == ass.career && careerlist[i].num <= assocationLength) {
                    var _ass = new Association_1.default();
                    _ass.names = names;
                    _ass.num = careerlist[i].num;
                    _ass.attribute_id = careerlist[i].attribute;
                    _ass.values = careerlist[i].value;
                    _ass.career = careerlist[i].career;
                    this.assocation.push(_ass);
                }
            }
        }
        else if (ass.hero.length > 0) {
            this.m_type.text = "特殊羁绊：";
        }
        this.m_race.text = ass.names;
        if (this.assocation.length > 0) {
            this.m_list.numItems = 1; //this.assocation.length;
        }
        else {
            this.m_list.numItems = 0;
        }
    };
    // 关闭ui
    UI_Recommend.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_Recommend.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_Recommend.prototype.onWindowShow = function () {
        EventManager_1.default.on(EventKey_1.default.ADD_HERO, this, this.refrushHeroList);
        this.refrushHeroList();
        if (this.heroList.length > 0) {
            this.m_heroList.scrollToView(0);
        }
    };
    // 关闭时调用，相当于disable
    UI_Recommend.prototype.onWindowHide = function () {
        EventManager_1.default.offAllCaller(this);
    };
    UI_Recommend.DependPackages = ["Arrangement"];
    return UI_Recommend;
}(fui_Recommend_1.default));
exports.default = UI_Recommend;
UI_Recommend.bind();
},{"../../../Game":1,"../../../Tool/EventKey":6,"../../../Tool/EventManager":7,"../../../Tool/Fun":8,"../../../dataInfo/AssociationAttributeInfo":23,"../../../dataInfo/AssociationCareerInfo":24,"../../../dataInfo/AssociationRaceInfo":25,"../../../dataInfo/FiveElementsInfo":29,"../../../dataInfo/HeroInfo":30,"../../../gamemodule/DataStructs/Association":137,"../../Generates/Arrangement/fui_Recommend":91}],48:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_txt_1 = require("../../Generates/Arrangement/fui_txt");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_txt = /** @class */ (function (_super) {
    __extends(UI_txt, _super);
    function UI_txt() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UI_txt.createInstance = function () {
        return (fui_txt_1.default.createInstance());
    };
    UI_txt.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_txt.URL, UI_txt);
    };
    UI_txt.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
    };
    // 关闭ui
    UI_txt.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_txt.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_txt.prototype.onWindowShow = function () {
    };
    // 关闭时调用，相当于disable
    UI_txt.prototype.onWindowHide = function () {
    };
    UI_txt.DependPackages = ["Arrangement"];
    return UI_txt;
}(fui_txt_1.default));
exports.default = UI_txt;
UI_txt.bind();
},{"../../Generates/Arrangement/fui_txt":92}],49:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_BagMain_1 = require("../../Generates/Bag/fui_BagMain");
var Game_1 = require("../../../Game");
var Dictionary_1 = require("../../../Tool/Dictionary");
var HeroInfo_1 = require("../../../dataInfo/HeroInfo");
var EventManager_1 = require("../../../Tool/EventManager");
var ProtoEvent_1 = require("../../../protobuf/ProtoEvent");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_BagMain = /** @class */ (function (_super) {
    __extends(UI_BagMain, _super);
    function UI_BagMain() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.datas = new Dictionary_1.default();
        _this.idList = [];
        return _this;
    }
    UI_BagMain.createInstance = function () {
        return (fui_BagMain_1.default.createInstance());
    };
    UI_BagMain.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_BagMain.URL, UI_BagMain);
    };
    UI_BagMain.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
        this.m_list.setVirtual();
        // 设置列表渲染函数
        this.m_list.itemRenderer = Laya.Handler.create(this, this.initItem, null, false);
        // 列表内容单个item被点击
        this.m_list.on(fairygui.Events.CLICK_ITEM, this, this.onClickItem);
        this.m_backBtn.onClick(this, this.backUI);
    };
    // 关闭ui
    UI_BagMain.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_BagMain.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_BagMain.prototype.onWindowShow = function () {
        EventManager_1.default.on(ProtoEvent_1.default.SYNTHETISE_CALL_BACK, this, this.setData);
        this.setData();
    };
    // 关闭时调用，相当于disable
    UI_BagMain.prototype.onWindowHide = function () {
        EventManager_1.default.off(ProtoEvent_1.default.SYNTHETISE_CALL_BACK, this, this.setData);
    };
    UI_BagMain.prototype.setData = function () {
        this.datas = Game_1.default.playData.curClips;
        this.idList = Game_1.default.playData.curClips.getKeys();
        this.m_list.numItems = this.datas.count;
    };
    // 渲染item
    UI_BagMain.prototype.initItem = function (index, obj) {
        var item = obj;
        item.clipsSetData(this.idList[index], this.datas.getValue(this.idList[index]), this.moduleWindow);
    };
    // 点击item
    UI_BagMain.prototype.onClickItem = function (obj) {
        var index = this.m_list.getChildIndex(obj);
        // 转换为点击item在整个列表中的真实索引
        var realIndex = this.m_list.childIndexToItemIndex(index);
        var heroInf = HeroInfo_1.default.getInfo(this.idList[realIndex]);
        ;
        if (heroInf != null) {
            Game_1.default.battleData.clickHeroInf = heroInf;
            this.moduleWindow.createHeroInfoUI();
        }
    };
    UI_BagMain.DependPackages = ["Bag"];
    return UI_BagMain;
}(fui_BagMain_1.default));
exports.default = UI_BagMain;
UI_BagMain.bind();
},{"../../../Game":1,"../../../Tool/Dictionary":5,"../../../Tool/EventManager":7,"../../../dataInfo/HeroInfo":30,"../../../protobuf/ProtoEvent":191,"../../Generates/Bag/fui_BagMain":93}],50:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_AssociationBtn_1 = require("../../Generates/Battle/fui_AssociationBtn");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_AssociationBtn = /** @class */ (function (_super) {
    __extends(UI_AssociationBtn, _super);
    function UI_AssociationBtn() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UI_AssociationBtn.createInstance = function () {
        return (fui_AssociationBtn_1.default.createInstance());
    };
    UI_AssociationBtn.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_AssociationBtn.URL, UI_AssociationBtn);
    };
    UI_AssociationBtn.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
    };
    // 关闭ui
    UI_AssociationBtn.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_AssociationBtn.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_AssociationBtn.prototype.onWindowShow = function () {
    };
    // 关闭时调用，相当于disable
    UI_AssociationBtn.prototype.onWindowHide = function () {
    };
    UI_AssociationBtn.DependPackages = ["Battle"];
    return UI_AssociationBtn;
}(fui_AssociationBtn_1.default));
exports.default = UI_AssociationBtn;
UI_AssociationBtn.bind();
},{"../../Generates/Battle/fui_AssociationBtn":94}],51:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_BattleLeftBottom_1 = require("../../Generates/Battle/fui_BattleLeftBottom");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_BattleLeftBottom = /** @class */ (function (_super) {
    __extends(UI_BattleLeftBottom, _super);
    function UI_BattleLeftBottom() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UI_BattleLeftBottom.createInstance = function () {
        return (fui_BattleLeftBottom_1.default.createInstance());
    };
    UI_BattleLeftBottom.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_BattleLeftBottom.URL, UI_BattleLeftBottom);
    };
    UI_BattleLeftBottom.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
    };
    // 关闭ui
    UI_BattleLeftBottom.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_BattleLeftBottom.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_BattleLeftBottom.prototype.onWindowShow = function () {
    };
    // 关闭时调用，相当于disable
    UI_BattleLeftBottom.prototype.onWindowHide = function () {
    };
    UI_BattleLeftBottom.DependPackages = ["Battle"];
    return UI_BattleLeftBottom;
}(fui_BattleLeftBottom_1.default));
exports.default = UI_BattleLeftBottom;
UI_BattleLeftBottom.bind();
},{"../../Generates/Battle/fui_BattleLeftBottom":95}],52:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_BattleLeftTop_1 = require("../../Generates/Battle/fui_BattleLeftTop");
var Game_1 = require("../../../Game");
var MenuId_1 = require("../../../gamemodule/MenuId");
var EventManager_1 = require("../../../Tool/EventManager");
var EventKey_1 = require("../../../Tool/EventKey");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_BattleLeftTop = /** @class */ (function (_super) {
    __extends(UI_BattleLeftTop, _super);
    function UI_BattleLeftTop() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UI_BattleLeftTop.createInstance = function () {
        return (fui_BattleLeftTop_1.default.createInstance());
    };
    UI_BattleLeftTop.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_BattleLeftTop.URL, UI_BattleLeftTop);
    };
    UI_BattleLeftTop.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
        this.m_waveBtn.onClick(this, this.clickWaveBtn);
    };
    UI_BattleLeftTop.prototype.clickWaveBtn = function () {
        EventManager_1.default.event(EventKey_1.default.GAMEEXIT);
        Game_1.default.battleScene.stoneReset();
        Game_1.default.battleScene.clearEnemy();
        Game_1.default.battleScene.clearHero();
        this.closeUI();
        Game_1.default.menu.open(MenuId_1.MenuId.MenuSelect);
    };
    // 关闭ui
    UI_BattleLeftTop.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_BattleLeftTop.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_BattleLeftTop.prototype.onWindowShow = function () {
    };
    // 关闭时调用，相当于disable
    UI_BattleLeftTop.prototype.onWindowHide = function () {
    };
    UI_BattleLeftTop.DependPackages = ["Battle"];
    return UI_BattleLeftTop;
}(fui_BattleLeftTop_1.default));
exports.default = UI_BattleLeftTop;
UI_BattleLeftTop.bind();
},{"../../../Game":1,"../../../Tool/EventKey":6,"../../../Tool/EventManager":7,"../../../gamemodule/MenuId":153,"../../Generates/Battle/fui_BattleLeftTop":96}],53:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_BattleMain_1 = require("../../Generates/Battle/fui_BattleMain");
var Game_1 = require("../../../Game");
var SoundKey_1 = require("../../SoundKey");
var EventManager_1 = require("../../../Tool/EventManager");
var EventKey_1 = require("../../../Tool/EventKey");
var LoaderManager_1 = require("../../../Tool/LoaderManager");
var LoadFilesList_1 = require("../../../Tool/LoadFilesList");
var BattleSeat_1 = require("../../../gamemodule/Models/BattleSeat");
var GameStatus_1 = require("../../../gamemodule/DataEnums/GameStatus");
var Handler = Laya.Handler;
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_BattleMain = /** @class */ (function (_super) {
    __extends(UI_BattleMain, _super);
    function UI_BattleMain() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.loadOver = false;
        return _this;
    }
    UI_BattleMain.createInstance = function () {
        return (fui_BattleMain_1.default.createInstance());
    };
    UI_BattleMain.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_BattleMain.URL, UI_BattleMain);
    };
    UI_BattleMain.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
        Game_1.default.sound.playMusic(SoundKey_1.default.bgm_1, 0);
        Game_1.default.parentObject = this.m_scenes.displayObject;
        Game_1.default.bloodParent = this.m_bloods.root;
        Game_1.default.battleScene.stoneList.push(this.m_stone4);
        Game_1.default.battleScene.stoneList.push(this.m_stone5);
        Game_1.default.battleScene.stoneList.push(this.m_stone2);
        Game_1.default.battleScene.stoneList.push(this.m_stone3);
        Game_1.default.battleScene.stoneList.push(this.m_stone0);
        Game_1.default.battleScene.stoneList.push(this.m_stone1);
        for (var i = 0; i < 6; i++) {
            Game_1.default.battleScene.stoneList[i].reInit();
        }
        Game_1.default.battleScene.battleSeat.push(BattleSeat_1.default.create(this.m_base0, 0));
        Game_1.default.battleScene.battleSeat.push(BattleSeat_1.default.create(this.m_base3, 1));
        Game_1.default.battleScene.battleSeat.push(BattleSeat_1.default.create(this.m_base6, 2));
        Game_1.default.battleScene.battleSeat.push(BattleSeat_1.default.create(this.m_base1, 3));
        Game_1.default.battleScene.battleSeat.push(BattleSeat_1.default.create(this.m_base4, 4));
        Game_1.default.battleScene.battleSeat.push(BattleSeat_1.default.create(this.m_base7, 5));
        Game_1.default.battleScene.battleSeat.push(BattleSeat_1.default.create(this.m_base2, 6));
        Game_1.default.battleScene.battleSeat.push(BattleSeat_1.default.create(this.m_base5, 7));
        Game_1.default.battleScene.battleSeat.push(BattleSeat_1.default.create(this.m_base8, 8));
        EventManager_1.default.once(EventKey_1.default.LOADER_OVER, this, this.open);
        LoaderManager_1.default.resetShowLoad();
        LoaderManager_1.default.addList(LoadFilesList_1.default.allResList);
    };
    UI_BattleMain.prototype.open = function () {
        console.log("加载完毕sk");
        this.loadOver = true;
        Game_1.default.gameStatus = GameStatus_1.GameStatus.Pause;
        Game_1.default.tipWin.showTip("点击确定开始游戏", Handler.create(this, this.reTryPlay));
    };
    // 关闭ui
    UI_BattleMain.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_BattleMain.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_BattleMain.prototype.onWindowShow = function () {
        EventManager_1.default.on(EventKey_1.default.ENTER_FRAME, this, this.update);
        EventManager_1.default.on(EventKey_1.default.GAMELOSE, this, this.gameLose);
        EventManager_1.default.on(EventKey_1.default.GAMEWIN, this, this.gameWin);
        this.moduleWindow.createLeftTop();
        this.moduleWindow.createLeftBottom();
        this.moduleWindow.createRightTop();
        this.moduleWindow.createRightBottom();
        this.moduleWindow.createTopMiddle();
        for (var i = 0; i < Game_1.default.battleScene.battleSeat.length; i++) {
            Game_1.default.battleScene.battleSeat[i].onShow();
        }
        if (this.loadOver) {
            Game_1.default.tipWin.showTip("点击确定开始游戏", Handler.create(this, this.reTryPlay));
        }
    };
    // 关闭时调用，相当于disable
    UI_BattleMain.prototype.onWindowHide = function () {
        for (var i = 0; i < Game_1.default.battleScene.battleSeat.length; i++) {
            Game_1.default.battleScene.battleSeat[i].onClose();
        }
        EventManager_1.default.off(EventKey_1.default.ENTER_FRAME, this, this.update);
    };
    // 游戏重新开始本关卡
    UI_BattleMain.prototype.reTryPlay = function () {
        Game_1.default.battleScene.initHeroSeat();
        EventManager_1.default.event(EventKey_1.default.RE_TRYPLAY);
    };
    UI_BattleMain.prototype.gameWin = function () {
        Game_1.default.gameStatus = GameStatus_1.GameStatus.Win;
        EventManager_1.default.event(EventKey_1.default.GAME_PAUSE);
        this.moduleWindow.gameResult();
        EventManager_1.default.off(EventKey_1.default.ENTER_FRAME, this, this.update);
    };
    UI_BattleMain.prototype.gameLose = function () {
        Game_1.default.gameStatus = GameStatus_1.GameStatus.Failed;
        EventManager_1.default.event(EventKey_1.default.GAME_PAUSE);
        this.moduleWindow.gameResult();
        EventManager_1.default.off(EventKey_1.default.ENTER_FRAME, this, this.update);
    };
    // update
    UI_BattleMain.prototype.update = function () {
        if (Game_1.default.gameStatus == GameStatus_1.GameStatus.Pause)
            return;
        var dt = Laya.timer.delta;
        this.updateHero(dt);
        this.updateEnemy(dt);
        this.refreshIndex();
    };
    // 更新英雄信息
    UI_BattleMain.prototype.updateHero = function (dt) {
        for (var i = Game_1.default.battleScene.heroList.length - 1; i >= 0; i--) {
            var hero = Game_1.default.battleScene.heroList[i];
            if (hero) {
                hero.update(dt);
            }
            else {
                Game_1.default.battleScene.heroList.splice(i, 1);
            }
        }
    };
    // 更新敌人信息
    UI_BattleMain.prototype.updateEnemy = function (dt) {
        Game_1.default.battleScene.atkCellDIc.clear();
        if (Game_1.default.battleScene.enemyList.length > 0) {
            for (var i = Game_1.default.battleScene.enemyList.length - 1; i >= 0; i--) {
                var enemy = Game_1.default.battleScene.enemyList[i];
                if (enemy && !enemy.haveDeath) {
                    enemy.update(dt);
                    if (enemy.canHit) {
                        var skx = enemy.sk.x;
                        var sky = enemy.sk.y;
                        if (skx < 276) {
                            this.addInAtkRange(0, enemy);
                        }
                        else if (skx > 1088) {
                            this.addInAtkRange(80, enemy);
                        }
                        else {
                            if (skx >= 276 && skx < 416) {
                                this.checkPos(skx, sky, enemy, 1);
                            }
                            if (skx >= 416 && skx < 500) {
                                this.checkPos(skx, sky, enemy, 2);
                            }
                            if (skx >= 500 && skx < 640) {
                                this.checkPos(skx, sky, enemy, 3);
                            }
                            if (skx > 640 && skx <= 724) {
                                this.checkPos(skx, sky, enemy, 4);
                            }
                            if (skx > 724 && skx <= 864) {
                                this.checkPos(skx, sky, enemy, 5);
                            }
                            if (skx > 864 && skx <= 948) {
                                this.checkPos(skx, sky, enemy, 6);
                            }
                            if (skx > 948 && skx <= 1088) {
                                this.checkPos(skx, sky, enemy, 7);
                            }
                        }
                    }
                }
                else {
                    if (enemy) {
                        enemy.addClearEvent();
                    }
                    Game_1.default.battleScene.enemyList.splice(i, 1);
                }
            }
        }
    };
    // 计算敌人位置
    UI_BattleMain.prototype.checkPos = function (skx, sky, enemy, line) {
        var keys = line * 10;
        if (sky < 324) {
            // 最上边
            this.addInAtkRange(keys + 5, enemy);
        }
        else if (sky >= 324 && sky < 397) {
            // 最上排英雄站立一排
            this.addInAtkRange(keys + 3, enemy);
        }
        else if (sky >= 397 && sky < 486) {
            // 过道 上排石头
            this.addInAtkRange(keys + 1, enemy);
        }
        else if (sky > 486 && sky < 560) {
            // 中间一格 英雄站立一排
            this.addInAtkRange(keys + 0, enemy);
        }
        else if (sky >= 560 && sky <= 648) {
            // 过道 下排石头
            this.addInAtkRange(keys + 2, enemy);
        }
        else if (sky > 648 && sky <= 720) {
            // 最下边英雄站立一排
            this.addInAtkRange(keys + 4, enemy);
        }
        else if (sky > 720) {
            // 最下边
            this.addInAtkRange(keys + 6, enemy);
        }
    };
    // 存储位置敌人
    UI_BattleMain.prototype.addInAtkRange = function (key, enemy) {
        if (!Game_1.default.battleScene.atkCellDIc.hasKey(key)) {
            Game_1.default.battleScene.atkCellDIc.add(key, []);
        }
        var list = Game_1.default.battleScene.atkCellDIc.getValue(key);
        enemy.atkRangIndex = key;
        list.push(enemy);
    };
    // 刷新层级关系
    UI_BattleMain.prototype.refreshIndex = function () {
        var childNum = Game_1.default.parentObject.numChildren;
        for (var i = 0; i < childNum; i++) {
            var node = Game_1.default.parentObject.getChildAt(i);
            var index = Math.floor(node["y"]);
            if (index < 0)
                index = 0;
            node["_zOrder"] = index;
        }
        Game_1.default.parentObject.updateZOrder();
    };
    UI_BattleMain.DependPackages = ["Battle"];
    return UI_BattleMain;
}(fui_BattleMain_1.default));
exports.default = UI_BattleMain;
UI_BattleMain.bind();
},{"../../../Game":1,"../../../Tool/EventKey":6,"../../../Tool/EventManager":7,"../../../Tool/LoadFilesList":9,"../../../Tool/LoaderManager":10,"../../../gamemodule/DataEnums/GameStatus":134,"../../../gamemodule/Models/BattleSeat":162,"../../Generates/Battle/fui_BattleMain":97,"../../SoundKey":132}],54:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_BattleRightBottom_1 = require("../../Generates/Battle/fui_BattleRightBottom");
var Game_1 = require("../../../Game");
var PlaySkillInfo_1 = require("../../../dataInfo/PlaySkillInfo");
var EventManager_1 = require("../../../Tool/EventManager");
var EventKey_1 = require("../../../Tool/EventKey");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_BattleRightBottom = /** @class */ (function (_super) {
    __extends(UI_BattleRightBottom, _super);
    function UI_BattleRightBottom() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.m_skillBtn = [];
        _this.mapSkillInf = [null, null, null];
        _this.mapSkillCD = [0, 0, 0];
        _this.mapSkillCDMax = [0, 0, 0];
        return _this;
    }
    UI_BattleRightBottom.createInstance = function () {
        return (fui_BattleRightBottom_1.default.createInstance());
    };
    UI_BattleRightBottom.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_BattleRightBottom.URL, UI_BattleRightBottom);
    };
    UI_BattleRightBottom.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
        this.m_skill3Btn.onClick(this, this.skillClick, [0]);
        this.m_skill2Btn.onClick(this, this.skillClick, [1]);
        this.m_skill1Btn.onClick(this, this.skillClick, [2]);
        this.m_skillBtn.push(this.m_skill3Btn);
        this.m_skillBtn.push(this.m_skill2Btn);
        this.m_skillBtn.push(this.m_skill1Btn);
    };
    UI_BattleRightBottom.prototype.skillClick = function (index) {
        this.mapSkillCD[index] = this.mapSkillInf[index].cd * 1000;
        this.m_skillBtn[index].m_mask.fillAmount = 1;
        this.m_skillBtn[index].enabled = false;
    };
    UI_BattleRightBottom.prototype.update = function () {
        var dt = Laya.timer.delta;
        for (var i = 0; i < 3; i++) {
            if (this.mapSkillCD[i] > 0) {
                this.mapSkillCD[i] -= dt;
                if (this.mapSkillCD[i] < 0) {
                    this.mapSkillCD[i] = 0;
                    this.m_skillBtn[i].enabled = true;
                }
                this.m_skillBtn[i].m_mask.fillAmount = this.mapSkillCD[i] / this.mapSkillCDMax[i];
            }
        }
    };
    UI_BattleRightBottom.prototype.setData = function () {
        this.mapSkillInf = [null, null, null];
        for (var i = 0; i < 3; i++) {
            this.m_skillBtn[i].m_mask.fillAmount = 0;
            if (Game_1.default.battleData.map_skills[i] > 0) {
                this.mapSkillInf[i] = PlaySkillInfo_1.default.getInfo(Game_1.default.battleData.map_skills[i]);
                this.mapSkillCDMax[i] = this.mapSkillInf[i].cd * 1000;
                this.m_skillBtn[i].enabled = true;
            }
            else {
                this.mapSkillInf[i] = null;
                this.mapSkillCD[i] = 0;
                this.m_skillBtn[i].enabled = false;
            }
        }
    };
    // 关闭ui
    UI_BattleRightBottom.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_BattleRightBottom.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_BattleRightBottom.prototype.onWindowShow = function () {
        EventManager_1.default.on(EventKey_1.default.ENTER_FRAME, this, this.update);
        this.setData();
    };
    // 关闭时调用，相当于disable
    UI_BattleRightBottom.prototype.onWindowHide = function () {
        EventManager_1.default.off(EventKey_1.default.ENTER_FRAME, this, this.update);
    };
    UI_BattleRightBottom.DependPackages = ["Battle"];
    return UI_BattleRightBottom;
}(fui_BattleRightBottom_1.default));
exports.default = UI_BattleRightBottom;
UI_BattleRightBottom.bind();
},{"../../../Game":1,"../../../Tool/EventKey":6,"../../../Tool/EventManager":7,"../../../dataInfo/PlaySkillInfo":34,"../../Generates/Battle/fui_BattleRightBottom":98}],55:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_BattleRightTop_1 = require("../../Generates/Battle/fui_BattleRightTop");
var Game_1 = require("../../../Game");
var Fun_1 = require("../../../Tool/Fun");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_BattleRightTop = /** @class */ (function (_super) {
    __extends(UI_BattleRightTop, _super);
    function UI_BattleRightTop() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UI_BattleRightTop.createInstance = function () {
        return (fui_BattleRightTop_1.default.createInstance());
    };
    UI_BattleRightTop.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_BattleRightTop.URL, UI_BattleRightTop);
    };
    UI_BattleRightTop.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
    };
    UI_BattleRightTop.prototype.countdown = function () {
        var cd = Math.floor(Game_1.default.battleMap.waveTime - Game_1.default.battleMap.curTime);
        this.m_time.text = Fun_1.default.format("刷怪剩余时间：{0}秒", Math.floor(cd));
        if (cd <= 0) {
            Game_1.default.battleData.countdown.remove(this.countdown, this);
        }
    };
    // 关闭ui
    UI_BattleRightTop.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_BattleRightTop.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_BattleRightTop.prototype.onWindowShow = function () {
        Game_1.default.battleData.countdown.add(this.countdown, this);
    };
    // 关闭时调用，相当于disable
    UI_BattleRightTop.prototype.onWindowHide = function () {
        Game_1.default.battleData.countdown.remove(this.countdown, this);
    };
    UI_BattleRightTop.DependPackages = ["Battle"];
    return UI_BattleRightTop;
}(fui_BattleRightTop_1.default));
exports.default = UI_BattleRightTop;
UI_BattleRightTop.bind();
},{"../../../Game":1,"../../../Tool/Fun":8,"../../Generates/Battle/fui_BattleRightTop":99}],56:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_BattleTopMiddle_1 = require("../../Generates/Battle/fui_BattleTopMiddle");
var SpriteKey_1 = require("../../SpriteKey");
var Game_1 = require("../../../Game");
var Fun_1 = require("../../../Tool/Fun");
var AssociationAttributeInfo_1 = require("../../../dataInfo/AssociationAttributeInfo");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_BattleTopMiddle = /** @class */ (function (_super) {
    __extends(UI_BattleTopMiddle, _super);
    function UI_BattleTopMiddle() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.inRichText = null;
        _this.association = [];
        return _this;
    }
    UI_BattleTopMiddle.createInstance = function () {
        return (fui_BattleTopMiddle_1.default.createInstance());
    };
    UI_BattleTopMiddle.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_BattleTopMiddle.URL, UI_BattleTopMiddle);
    };
    UI_BattleTopMiddle.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
        // 设置列表渲染函数
        this.m_associationList.itemRenderer = Laya.Handler.create(this, this.initItem, null, false);
        // 列表内容单个item被点击
        this.m_associationList.on(fairygui.Events.CLICK_ITEM, this, this.onClickItem);
    };
    // 渲染item
    UI_BattleTopMiddle.prototype.initItem = function (index, obj) {
        var item = obj;
        var t = index + 1;
        item.icon = SpriteKey_1.default.getUrl("icon_100" + t + ".png");
        item.m_titles.text = (index + 1).toString();
    };
    // 点击item
    UI_BattleTopMiddle.prototype.onClickItem = function (obj) {
        var index = this.m_associationList.getChildIndex(obj);
        this.m_t0.stop();
        var att = AssociationAttributeInfo_1.default.getInfo(this.association[index].attribute_id);
        this.m_title.text = Fun_1.default.format("[color=#61aa66]{0}[/color] X [color=#51FC55]{1}[/color] <br /> ", this.association[index].names, this.association[index].num) + Fun_1.default.format(att.des, this.association[index].values); //"神谕：同时上阵N位天神时<br />[color=#51FC55]（2），攻击力提高15%[/color]<br />[color=#51FC55]（4），攻击力提高25%[/color]";
        this.m_title.height = 39 + 34 * 2;
        this.m_c1.setSelectedIndex(1);
        this.m_t0.play(Laya.Handler.create(this, this.hideMethod));
    };
    UI_BattleTopMiddle.prototype.hideMethod = function () {
        this.m_c1.setSelectedIndex(0);
    };
    // 关闭ui
    UI_BattleTopMiddle.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_BattleTopMiddle.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_BattleTopMiddle.prototype.onWindowShow = function () {
        this.association = Game_1.default.battleData.refrushAssociation();
        this.m_associationList.numItems = this.association.length;
    };
    // 关闭时调用，相当于disable
    UI_BattleTopMiddle.prototype.onWindowHide = function () {
    };
    UI_BattleTopMiddle.DependPackages = ["Battle"];
    return UI_BattleTopMiddle;
}(fui_BattleTopMiddle_1.default));
exports.default = UI_BattleTopMiddle;
UI_BattleTopMiddle.bind();
},{"../../../Game":1,"../../../Tool/Fun":8,"../../../dataInfo/AssociationAttributeInfo":23,"../../Generates/Battle/fui_BattleTopMiddle":100,"../../SpriteKey":133}],57:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_Blood_1 = require("../../Generates/Battle/fui_Blood");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_Blood = /** @class */ (function (_super) {
    __extends(UI_Blood, _super);
    function UI_Blood() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UI_Blood.createInstance = function () {
        return (fui_Blood_1.default.createInstance());
    };
    UI_Blood.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_Blood.URL, UI_Blood);
    };
    UI_Blood.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
    };
    // 关闭ui
    UI_Blood.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_Blood.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_Blood.prototype.onWindowShow = function () {
    };
    // 关闭时调用，相当于disable
    UI_Blood.prototype.onWindowHide = function () {
    };
    UI_Blood.DependPackages = ["Battle"];
    return UI_Blood;
}(fui_Blood_1.default));
exports.default = UI_Blood;
UI_Blood.bind();
},{"../../Generates/Battle/fui_Blood":101}],58:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_DriftingBlood_1 = require("../../Generates/Battle/fui_DriftingBlood");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_DriftingBlood = /** @class */ (function (_super) {
    __extends(UI_DriftingBlood, _super);
    function UI_DriftingBlood() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UI_DriftingBlood.createInstance = function () {
        return (fui_DriftingBlood_1.default.createInstance());
    };
    UI_DriftingBlood.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_DriftingBlood.URL, UI_DriftingBlood);
    };
    UI_DriftingBlood.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
    };
    // 关闭ui
    UI_DriftingBlood.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_DriftingBlood.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_DriftingBlood.prototype.onWindowShow = function () {
    };
    // 关闭时调用，相当于disable
    UI_DriftingBlood.prototype.onWindowHide = function () {
    };
    UI_DriftingBlood.DependPackages = ["Battle"];
    return UI_DriftingBlood;
}(fui_DriftingBlood_1.default));
exports.default = UI_DriftingBlood;
UI_DriftingBlood.bind();
},{"../../Generates/Battle/fui_DriftingBlood":102}],59:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_GameOver_1 = require("../../Generates/Battle/fui_GameOver");
var Game_1 = require("../../../Game");
var MenuId_1 = require("../../../gamemodule/MenuId");
var GameStatus_1 = require("../../../gamemodule/DataEnums/GameStatus");
var EventManager_1 = require("../../../Tool/EventManager");
var ProtoEvent_1 = require("../../../protobuf/ProtoEvent");
var EventKey_1 = require("../../../Tool/EventKey");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_GameOver = /** @class */ (function (_super) {
    __extends(UI_GameOver, _super);
    function UI_GameOver() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tick = null;
        return _this;
    }
    UI_GameOver.createInstance = function () {
        return (fui_GameOver_1.default.createInstance());
    };
    UI_GameOver.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_GameOver.URL, UI_GameOver);
    };
    UI_GameOver.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
        this.m_gainBtn.onClick(this, this.gainClick);
        this.m_upBtn.onClick(this, this.upClick);
        this.m_rewardList.itemRenderer = Laya.Handler.create(this, this.initItem, null, false);
    };
    // 渲染item
    UI_GameOver.prototype.initItem = function (index, obj) {
        var item = obj;
        item.setData(Game_1.default.battleData.fight_result[index]);
    };
    UI_GameOver.prototype.gainClick = function () {
        Game_1.default.battleScene.clearBattleScene();
        Game_1.default.menu.open(MenuId_1.MenuId.MenuSelect);
    };
    UI_GameOver.prototype.upClick = function () {
        Game_1.default.battleScene.clearBattleScene();
        Game_1.default.menu.open(MenuId_1.MenuId.MenuSelect);
    };
    UI_GameOver.prototype.setData = function () {
        EventManager_1.default.event(EventKey_1.default.SHOW_UI_WAIT);
        this.m_gainBtn.visible = false;
        this.m_upBtn.visible = false;
        var value = Game_1.default.gameStatus == GameStatus_1.GameStatus.Win ? 0 : 1;
        this.m_c1.setSelectedIndex(value);
        var data = {
            winLose: Game_1.default.gameStatus == GameStatus_1.GameStatus.Win,
            waveId: Game_1.default.battleData.level_id,
            fightType: Game_1.default.battleData.fight_type,
            level: Game_1.default.battleData.trial_level,
        };
        Game_1.default.proto.passWave(data);
    };
    UI_GameOver.prototype.showResult = function () {
        EventManager_1.default.event(EventKey_1.default.CLOSE_UI_WAIT);
        if (Game_1.default.gameStatus == GameStatus_1.GameStatus.Win && Game_1.default.battleData.fight_result.length > 0) {
            if (this.tick) {
                this.tick.Stop();
                Game_1.default.tick.clearTick(this.tick);
                this.tick = null;
            }
            this.m_rewardList.numItems = 0;
            this.tick = Game_1.default.tick.addTick(Game_1.default.battleData.fight_result.length - 1, Laya.Handler.create(this, this.updateNum, null, false), Laya.Handler.create(this, this.addNumOver, null, false), 10);
            this.tick.Start();
        }
        else {
            this.addNumOver();
        }
    };
    UI_GameOver.prototype.updateNum = function () {
        if (Game_1.default.battleData.fight_result.length > this.m_rewardList.numItems) {
            this.m_rewardList.numItems++;
        }
    };
    UI_GameOver.prototype.addNumOver = function () {
        if (this.tick) {
            this.tick.Stop();
            Game_1.default.tick.clearTick(this.tick);
            this.tick = null;
        }
        this.m_gainBtn.visible = true;
        this.m_upBtn.visible = true;
    };
    // 关闭ui
    UI_GameOver.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_GameOver.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_GameOver.prototype.onWindowShow = function () {
        EventManager_1.default.on(ProtoEvent_1.default.PASSWAVE_CALL_BACK, this, this.showResult);
        this.setData();
    };
    // 关闭时调用，相当于disable
    UI_GameOver.prototype.onWindowHide = function () {
        EventManager_1.default.off(ProtoEvent_1.default.PASSWAVE_CALL_BACK, this, this.showResult);
    };
    UI_GameOver.DependPackages = ["Battle"];
    return UI_GameOver;
}(fui_GameOver_1.default));
exports.default = UI_GameOver;
UI_GameOver.bind();
},{"../../../Game":1,"../../../Tool/EventKey":6,"../../../Tool/EventManager":7,"../../../gamemodule/DataEnums/GameStatus":134,"../../../gamemodule/MenuId":153,"../../../protobuf/ProtoEvent":191,"../../Generates/Battle/fui_GameOver":103}],60:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_Shadow_1 = require("../../Generates/Battle/fui_Shadow");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_Shadow = /** @class */ (function (_super) {
    __extends(UI_Shadow, _super);
    function UI_Shadow() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UI_Shadow.createInstance = function () {
        return (fui_Shadow_1.default.createInstance());
    };
    UI_Shadow.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_Shadow.URL, UI_Shadow);
    };
    UI_Shadow.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
    };
    // 关闭ui
    UI_Shadow.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_Shadow.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_Shadow.prototype.onWindowShow = function () {
    };
    // 关闭时调用，相当于disable
    UI_Shadow.prototype.onWindowHide = function () {
    };
    UI_Shadow.DependPackages = ["Battle"];
    return UI_Shadow;
}(fui_Shadow_1.default));
exports.default = UI_Shadow;
UI_Shadow.bind();
},{"../../Generates/Battle/fui_Shadow":104}],61:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_SkillBtn_1 = require("../../Generates/Battle/fui_SkillBtn");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_SkillBtn = /** @class */ (function (_super) {
    __extends(UI_SkillBtn, _super);
    function UI_SkillBtn() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UI_SkillBtn.createInstance = function () {
        return (fui_SkillBtn_1.default.createInstance());
    };
    UI_SkillBtn.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_SkillBtn.URL, UI_SkillBtn);
    };
    UI_SkillBtn.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
    };
    // 关闭ui
    UI_SkillBtn.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_SkillBtn.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_SkillBtn.prototype.onWindowShow = function () {
    };
    // 关闭时调用，相当于disable
    UI_SkillBtn.prototype.onWindowHide = function () {
    };
    UI_SkillBtn.DependPackages = ["Battle"];
    return UI_SkillBtn;
}(fui_SkillBtn_1.default));
exports.default = UI_SkillBtn;
UI_SkillBtn.bind();
},{"../../Generates/Battle/fui_SkillBtn":105}],62:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_Stone_1 = require("../../Generates/Battle/fui_Stone");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_Stone = /** @class */ (function (_super) {
    __extends(UI_Stone, _super);
    function UI_Stone() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._breaked = false;
        _this.selectIndex = 0;
        return _this;
    }
    UI_Stone.createInstance = function () {
        return (fui_Stone_1.default.createInstance());
    };
    UI_Stone.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_Stone.URL, UI_Stone);
    };
    UI_Stone.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
    };
    // 关闭ui
    UI_Stone.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_Stone.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_Stone.prototype.onWindowShow = function () {
    };
    // 关闭时调用，相当于disable
    UI_Stone.prototype.onWindowHide = function () {
    };
    Object.defineProperty(UI_Stone.prototype, "breaked", {
        get: function () {
            return this._breaked;
        },
        set: function (v) {
            this._breaked = v;
        },
        enumerable: true,
        configurable: true
    });
    UI_Stone.prototype.hit = function (ap) {
        this.selectIndex++;
        if (this.selectIndex < 4) {
            this.m_c1.setSelectedIndex(this.selectIndex);
        }
        if (this.selectIndex >= 3) {
            this.breaked = true;
        }
    };
    UI_Stone.prototype.reInit = function () {
        this.selectIndex = 0;
        this.breaked = false;
        this.m_c1.setSelectedIndex(this.selectIndex);
    };
    UI_Stone.DependPackages = ["Battle"];
    return UI_Stone;
}(fui_Stone_1.default));
exports.default = UI_Stone;
UI_Stone.bind();
},{"../../Generates/Battle/fui_Stone":106}],63:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_bagua_1 = require("../../Generates/Battle/fui_bagua");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_bagua = /** @class */ (function (_super) {
    __extends(UI_bagua, _super);
    function UI_bagua() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UI_bagua.createInstance = function () {
        return (fui_bagua_1.default.createInstance());
    };
    UI_bagua.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_bagua.URL, UI_bagua);
    };
    UI_bagua.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
    };
    // 关闭ui
    UI_bagua.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_bagua.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_bagua.prototype.onWindowShow = function () {
    };
    // 关闭时调用，相当于disable
    UI_bagua.prototype.onWindowHide = function () {
    };
    UI_bagua.DependPackages = ["Battle"];
    return UI_bagua;
}(fui_bagua_1.default));
exports.default = UI_bagua;
UI_bagua.bind();
},{"../../Generates/Battle/fui_bagua":107}],64:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_GMMain_1 = require("../../Generates/GM/fui_GMMain");
var Game_1 = require("../../../Game");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_GMMain = /** @class */ (function (_super) {
    __extends(UI_GMMain, _super);
    function UI_GMMain() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.inRichText = null;
        return _this;
    }
    UI_GMMain.createInstance = function () {
        return (fui_GMMain_1.default.createInstance());
    };
    UI_GMMain.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_GMMain.URL, UI_GMMain);
    };
    UI_GMMain.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
        this.m_closeBtn.onClick(this, this.closeUI);
        this.m_list.setVirtual();
        // 设置列表渲染函数
        this.m_list.itemRenderer = Laya.Handler.create(this, this.initItem, null, false);
        // 列表内容单个item被点击
        this.m_list.on(fairygui.Events.CLICK_ITEM, this, this.onClickItem);
    };
    // 渲染item
    UI_GMMain.prototype.initItem = function (index, obj) {
        var item = obj;
        item.title = Game_1.default.gm.tipList[index];
    };
    // 点击item
    UI_GMMain.prototype.onClickItem = function (obj) {
        var index = this.m_list.getChildIndex(obj);
        // 转换为点击item在整个列表中的真实索引
        var realIndex = this.m_list.childIndexToItemIndex(index);
        console.log("click ", realIndex);
        if (Game_1.default.gm.handlerList.length > realIndex) {
            var handl = Game_1.default.gm.handlerList[realIndex];
            if (handl) {
                handl.run();
            }
        }
        this.closeUI();
    };
    // 关闭ui
    UI_GMMain.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_GMMain.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_GMMain.prototype.onWindowShow = function () {
        this.m_list.numItems = Game_1.default.gm.tipList.length;
    };
    // 关闭时调用，相当于disable
    UI_GMMain.prototype.onWindowHide = function () {
    };
    UI_GMMain.DependPackages = ["GM"];
    return UI_GMMain;
}(fui_GMMain_1.default));
exports.default = UI_GMMain;
UI_GMMain.bind();
},{"../../../Game":1,"../../Generates/GM/fui_GMMain":108}],65:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_GeneralBtns_1 = require("../../Generates/Home/fui_GeneralBtns");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_GeneralBtns = /** @class */ (function (_super) {
    __extends(UI_GeneralBtns, _super);
    function UI_GeneralBtns() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UI_GeneralBtns.createInstance = function () {
        return (fui_GeneralBtns_1.default.createInstance());
    };
    UI_GeneralBtns.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_GeneralBtns.URL, UI_GeneralBtns);
    };
    UI_GeneralBtns.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
    };
    // 关闭ui
    UI_GeneralBtns.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_GeneralBtns.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_GeneralBtns.prototype.onWindowShow = function () {
    };
    // 关闭时调用，相当于disable
    UI_GeneralBtns.prototype.onWindowHide = function () {
    };
    UI_GeneralBtns.DependPackages = ["Home"];
    return UI_GeneralBtns;
}(fui_GeneralBtns_1.default));
exports.default = UI_GeneralBtns;
UI_GeneralBtns.bind();
},{"../../Generates/Home/fui_GeneralBtns":109}],66:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_HomeMain_1 = require("../../Generates/Home/fui_HomeMain");
var Game_1 = require("../../../Game");
var MenuId_1 = require("../../../gamemodule/MenuId");
var EventManager_1 = require("../../../Tool/EventManager");
var Fun_1 = require("../../../Tool/Fun");
var EventKey_1 = require("../../../Tool/EventKey");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_HomeMain = /** @class */ (function (_super) {
    __extends(UI_HomeMain, _super);
    function UI_HomeMain() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UI_HomeMain.createInstance = function () {
        return (fui_HomeMain_1.default.createInstance());
    };
    UI_HomeMain.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_HomeMain.URL, UI_HomeMain);
    };
    UI_HomeMain.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
        this.m_fightBtn.onClick(this, this.waveInfoCall);
        this.m_trialBtn.onClick(this, this.trialClick);
        this.m_seatBtn.onClick(this, this.seatClick);
        this.m_conquestBtn.onClick(this, this.conquestClick);
        // EventManager.on(ProtoEvent.WAVEINFO_CALL_BACK, this, this.waveInfoCall);
    };
    // fightClick(): void {
    // 	Game.proto.waveInfo({});
    // }
    UI_HomeMain.prototype.waveInfoCall = function () {
        Game_1.default.menu.open(MenuId_1.MenuId.MenuSelect);
        this.closeUI();
    };
    UI_HomeMain.prototype.trialClick = function () {
        console.log("trialClick");
    };
    UI_HomeMain.prototype.seatClick = function () {
        console.log("seatClick");
        Game_1.default.menu.open(MenuId_1.MenuId.Arrange);
    };
    UI_HomeMain.prototype.conquestClick = function () {
        console.log("conquestClick");
        Game_1.default.menu.open(MenuId_1.MenuId.Bag);
    };
    UI_HomeMain.prototype.setData = function () {
        this.refreshCoinGold();
        this.refreshCoinDiamond();
        this.refreshCoinJadeite();
    };
    UI_HomeMain.prototype.refreshCoinGold = function () {
        this.m_gold.text = Fun_1.default.format("金币：{0}", Game_1.default.playData.curGold);
    };
    UI_HomeMain.prototype.refreshCoinDiamond = function () {
        this.m_baoshi.text = Fun_1.default.format("宝石：{0}", Game_1.default.playData.curDiamond);
    };
    UI_HomeMain.prototype.refreshCoinJadeite = function () {
        this.m_feicui.text = Fun_1.default.format("翡翠：{0}", Game_1.default.playData.curJadeite);
    };
    // 关闭ui
    UI_HomeMain.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_HomeMain.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_HomeMain.prototype.onWindowShow = function () {
        EventManager_1.default.on(EventKey_1.default.COIN_GOLD_UPDATE, this, this.refreshCoinGold);
        EventManager_1.default.on(EventKey_1.default.COIN_GOLD_UPDATE, this, this.refreshCoinDiamond);
        EventManager_1.default.on(EventKey_1.default.COIN_GOLD_UPDATE, this, this.refreshCoinJadeite);
        this.setData();
    };
    // 关闭时调用，相当于disable
    UI_HomeMain.prototype.onWindowHide = function () {
        EventManager_1.default.off(EventKey_1.default.COIN_GOLD_UPDATE, this, this.refreshCoinGold);
        EventManager_1.default.off(EventKey_1.default.COIN_GOLD_UPDATE, this, this.refreshCoinDiamond);
        EventManager_1.default.off(EventKey_1.default.COIN_GOLD_UPDATE, this, this.refreshCoinJadeite);
    };
    UI_HomeMain.DependPackages = ["Home"];
    return UI_HomeMain;
}(fui_HomeMain_1.default));
exports.default = UI_HomeMain;
UI_HomeMain.bind();
},{"../../../Game":1,"../../../Tool/EventKey":6,"../../../Tool/EventManager":7,"../../../Tool/Fun":8,"../../../gamemodule/MenuId":153,"../../Generates/Home/fui_HomeMain":110}],67:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_HeadIcon_1 = require("../../Generates/Menus/fui_HeadIcon");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_HeadIcon = /** @class */ (function (_super) {
    __extends(UI_HeadIcon, _super);
    function UI_HeadIcon() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UI_HeadIcon.createInstance = function () {
        return (fui_HeadIcon_1.default.createInstance());
    };
    UI_HeadIcon.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_HeadIcon.URL, UI_HeadIcon);
    };
    UI_HeadIcon.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
    };
    // 关闭ui
    UI_HeadIcon.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_HeadIcon.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_HeadIcon.prototype.onWindowShow = function () {
    };
    // 关闭时调用，相当于disable
    UI_HeadIcon.prototype.onWindowHide = function () {
    };
    UI_HeadIcon.DependPackages = ["Menus"];
    return UI_HeadIcon;
}(fui_HeadIcon_1.default));
exports.default = UI_HeadIcon;
UI_HeadIcon.bind();
},{"../../Generates/Menus/fui_HeadIcon":111}],68:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_HeadIcon2_1 = require("../../Generates/Menus/fui_HeadIcon2");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_HeadIcon2 = /** @class */ (function (_super) {
    __extends(UI_HeadIcon2, _super);
    function UI_HeadIcon2() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UI_HeadIcon2.createInstance = function () {
        return (fui_HeadIcon2_1.default.createInstance());
    };
    UI_HeadIcon2.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_HeadIcon2.URL, UI_HeadIcon2);
    };
    UI_HeadIcon2.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
    };
    // 关闭ui
    UI_HeadIcon2.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_HeadIcon2.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_HeadIcon2.prototype.onWindowShow = function () {
    };
    // 关闭时调用，相当于disable
    UI_HeadIcon2.prototype.onWindowHide = function () {
    };
    UI_HeadIcon2.DependPackages = ["Menus"];
    return UI_HeadIcon2;
}(fui_HeadIcon2_1.default));
exports.default = UI_HeadIcon2;
UI_HeadIcon2.bind();
},{"../../Generates/Menus/fui_HeadIcon2":112}],69:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_HeroIcon_1 = require("../../Generates/Menus/fui_HeroIcon");
var Fun_1 = require("../../../Tool/Fun");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_HeroIcon = /** @class */ (function (_super) {
    __extends(UI_HeroIcon, _super);
    function UI_HeroIcon() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UI_HeroIcon.createInstance = function () {
        return (fui_HeroIcon_1.default.createInstance());
    };
    UI_HeroIcon.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_HeroIcon.URL, UI_HeroIcon);
    };
    UI_HeroIcon.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
    };
    UI_HeroIcon.prototype.setData = function (item) {
        this.m_number.text = Fun_1.default.format("X {0}", item.itemNum);
        if (item.itemId < 10000) {
            this.m_c1.setSelectedIndex(3);
        }
        else {
            this.m_c1.setSelectedIndex(2);
        }
    };
    // 关闭ui
    UI_HeroIcon.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_HeroIcon.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_HeroIcon.prototype.onWindowShow = function () {
    };
    // 关闭时调用，相当于disable
    UI_HeroIcon.prototype.onWindowHide = function () {
    };
    UI_HeroIcon.DependPackages = ["Menus"];
    return UI_HeroIcon;
}(fui_HeroIcon_1.default));
exports.default = UI_HeroIcon;
UI_HeroIcon.bind();
},{"../../../Tool/Fun":8,"../../Generates/Menus/fui_HeroIcon":113}],70:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_MenusMain_1 = require("../../Generates/Menus/fui_MenusMain");
var Game_1 = require("../../../Game");
var Fun_1 = require("../../../Tool/Fun");
var MenuId_1 = require("../../../gamemodule/MenuId");
var ShareManager_1 = require("../../../Tool/ShareManager");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_MenusMain = /** @class */ (function (_super) {
    __extends(UI_MenusMain, _super);
    function UI_MenusMain() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.selectList = [];
        return _this;
    }
    UI_MenusMain.createInstance = function () {
        return (fui_MenusMain_1.default.createInstance());
    };
    UI_MenusMain.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_MenusMain.URL, UI_MenusMain);
    };
    UI_MenusMain.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
        this.m_backBtn.setXY(Fun_1.default.leftTopPoint.x + 5, Fun_1.default.leftTopPoint.y + 5);
        this.m_middle.setXY(Fun_1.default.topMiddlePoint.x, Fun_1.default.topMiddlePoint.y + 5);
        this.selectList.push(this.m_select1);
        this.selectList.push(this.m_select2);
        this.selectList.push(this.m_select3);
        this.selectList.push(this.m_select4);
        this.selectList.push(this.m_select5);
        this.selectList.push(this.m_select6);
        this.selectList.push(this.m_select7);
        this.selectList.push(this.m_select8);
        this.selectList.push(this.m_select9);
        this.selectList.push(this.m_select10);
        this.selectList.push(this.m_select11);
        this.selectList.push(this.m_select12);
        this.selectList.push(this.m_select13);
        for (var i = 0, len = this.selectList.length; i < len; i++) {
            this.selectList[i].m_selBtn.onClick(this, this.slelectClick, [i]);
        }
        this.m_backBtn.onClick(this, this.backClick);
        ShareManager_1.default.init();
    };
    UI_MenusMain.prototype.slelectClick = function (index) {
        var waveinf = this.selectList[index].waveInfo;
        Game_1.default.battleData.level_id = waveinf.id;
        Game_1.default.battleData.play_map = waveinf.map;
        Game_1.default.battleData.play_level = waveinf.level;
        this.moduleWindow.createTrialUI();
    };
    UI_MenusMain.prototype.backClick = function () {
        Game_1.default.menu.open(MenuId_1.MenuId.Home);
        this.closeUI();
    };
    // 关闭ui
    UI_MenusMain.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_MenusMain.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_MenusMain.prototype.onWindowShow = function () {
        for (var i = 0, len = this.selectList.length; i < len; i++) {
            this.selectList[i].setDate(i);
        }
        if (this.moduleWindow.menuParameter.initFunction.count > 0) {
            var fun = this.moduleWindow.menuParameter.initFunction.getValues();
            for (var i = 0, len = fun.length; i < len; i++) {
                if (fun[i]) {
                    fun[i].apply(this.moduleWindow);
                }
            }
        }
    };
    // 关闭时调用，相当于disable
    UI_MenusMain.prototype.onWindowHide = function () {
    };
    UI_MenusMain.DependPackages = ["Menus"];
    return UI_MenusMain;
}(fui_MenusMain_1.default));
exports.default = UI_MenusMain;
UI_MenusMain.bind();
},{"../../../Game":1,"../../../Tool/Fun":8,"../../../Tool/ShareManager":14,"../../../gamemodule/MenuId":153,"../../Generates/Menus/fui_MenusMain":114}],71:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_Selection_1 = require("../../Generates/Menus/fui_Selection");
var Game_1 = require("../../../Game");
var WaveInfo_1 = require("../../../dataInfo/WaveInfo");
var Fun_1 = require("../../../Tool/Fun");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_Selection = /** @class */ (function (_super) {
    __extends(UI_Selection, _super);
    function UI_Selection() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.waveInfo = null;
        return _this;
    }
    UI_Selection.createInstance = function () {
        return (fui_Selection_1.default.createInstance());
    };
    UI_Selection.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_Selection.URL, UI_Selection);
    };
    UI_Selection.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
    };
    // 关闭ui
    UI_Selection.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_Selection.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_Selection.prototype.onWindowShow = function () {
    };
    // 关闭时调用，相当于disable
    UI_Selection.prototype.onWindowHide = function () {
    };
    UI_Selection.prototype.setDate = function (index) {
        var levelId = index + 1;
        this.waveInfo = WaveInfo_1.default.getInfo(levelId);
        this.m_selBtn.setData(this.waveInfo.map, this.waveInfo.level);
        if (Game_1.default.battleMap.waveStatusDict.hasKey(levelId)) {
            var item = Game_1.default.battleMap.waveStatusDict.getValue(levelId);
            this.m_status.setSelectedIndex(2);
            this.m_progress.text = Fun_1.default.format("{0} %", item.level / 10 * 100);
        }
        else if (Game_1.default.battleMap.maxMapId == levelId) {
            console.log("map id == waveid");
            this.m_status.setSelectedIndex(1);
        }
        else {
            this.m_status.setSelectedIndex(0);
            this.m_selBtn.enabled = false;
        }
    };
    UI_Selection.DependPackages = ["Menus"];
    return UI_Selection;
}(fui_Selection_1.default));
exports.default = UI_Selection;
UI_Selection.bind();
},{"../../../Game":1,"../../../Tool/Fun":8,"../../../dataInfo/WaveInfo":40,"../../Generates/Menus/fui_Selection":115}],72:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_Trial_1 = require("../../Generates/Menus/fui_Trial");
var Game_1 = require("../../../Game");
var MenuId_1 = require("../../../gamemodule/MenuId");
var SpriteKey_1 = require("../../SpriteKey");
var EventManager_1 = require("../../../Tool/EventManager");
var ProtoEvent_1 = require("../../../protobuf/ProtoEvent");
var EventKey_1 = require("../../../Tool/EventKey");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_Trial = /** @class */ (function (_super) {
    __extends(UI_Trial, _super);
    function UI_Trial() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.fight_type = 0;
        return _this;
    }
    UI_Trial.createInstance = function () {
        return (fui_Trial_1.default.createInstance());
    };
    UI_Trial.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_Trial.URL, UI_Trial);
    };
    UI_Trial.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
        this.m_closeBtn.onClick(this, this.closeUI);
        this.m_startBtn.onClick(this, this.startClick);
        this.m_seatBtn.onClick(this, this.seatClickBtn);
    };
    UI_Trial.prototype.seatClickBtn = function () {
        Game_1.default.menu.open(MenuId_1.MenuId.Arrange);
    };
    // 开始挑战
    UI_Trial.prototype.startClick = function () {
        EventManager_1.default.event(EventKey_1.default.SHOW_UI_WAIT);
        Game_1.default.battleData.fight_type = this.fight_type;
        var data = {
            waveId: Game_1.default.battleData.level_id,
            fightType: Game_1.default.battleData.fight_type,
        };
        Game_1.default.proto.selectWave(data);
    };
    UI_Trial.prototype.startFight = function () {
        this.moduleWindow.menuClose();
        EventManager_1.default.event(EventKey_1.default.CLOSE_UI_WAIT);
        Game_1.default.menu.open(MenuId_1.MenuId.Battle);
    };
    // 关闭ui
    UI_Trial.prototype.closeUI = function () {
        if (!this.moduleWindow.menuParameter.initFunction.hasKey(this.id)) {
            this.moduleWindow.menuParameter.initFunction.remove(this.id);
        }
        this.moduleWindow.windowRemoveChild(this);
    };
    // 返回上一级ui
    UI_Trial.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_Trial.prototype.onWindowShow = function () {
        EventManager_1.default.on(ProtoEvent_1.default.SELECTWAVE_CALL_BACK, this, this.startFight);
        var item = null;
        if (Game_1.default.battleMap.waveStatusDict.hasKey(Game_1.default.battleData.level_id)) {
            item = Game_1.default.battleMap.waveStatusDict.getValue(Game_1.default.battleData.level_id);
        }
        this.fight_type = 0;
        Game_1.default.battleData.trial_level = 0;
        if (item) {
            this.fight_type = 1;
            Game_1.default.battleData.trial_level = item.level;
            this.m_c1.setSelectedIndex(1);
            this.m_progress.value = Math.floor(item.level / 10 * 100);
        }
        else {
            this.m_c1.setSelectedIndex(0);
        }
        this.m_mapid.icon = SpriteKey_1.default.getUrl(SpriteKey_1.default[Game_1.default.battleData.play_map]);
        this.m_levelid.icon = SpriteKey_1.default.getUrl(SpriteKey_1.default[Game_1.default.battleData.play_level]);
    };
    // 关闭时调用，相当于disable
    UI_Trial.prototype.onWindowHide = function () {
        EventManager_1.default.off(ProtoEvent_1.default.SELECTWAVE_CALL_BACK, this, this.startFight);
    };
    UI_Trial.DependPackages = ["Menus"];
    return UI_Trial;
}(fui_Trial_1.default));
exports.default = UI_Trial;
UI_Trial.bind();
},{"../../../Game":1,"../../../Tool/EventKey":6,"../../../Tool/EventManager":7,"../../../gamemodule/MenuId":153,"../../../protobuf/ProtoEvent":191,"../../Generates/Menus/fui_Trial":116,"../../SpriteKey":133}],73:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_WaveTip_1 = require("../../Generates/Menus/fui_WaveTip");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_WaveTip = /** @class */ (function (_super) {
    __extends(UI_WaveTip, _super);
    function UI_WaveTip() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UI_WaveTip.createInstance = function () {
        return (fui_WaveTip_1.default.createInstance());
    };
    UI_WaveTip.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_WaveTip.URL, UI_WaveTip);
    };
    UI_WaveTip.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
    };
    // 关闭ui
    UI_WaveTip.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_WaveTip.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_WaveTip.prototype.onWindowShow = function () {
    };
    // 关闭时调用，相当于disable
    UI_WaveTip.prototype.onWindowHide = function () {
    };
    UI_WaveTip.DependPackages = ["Menus"];
    return UI_WaveTip;
}(fui_WaveTip_1.default));
exports.default = UI_WaveTip;
UI_WaveTip.bind();
},{"../../Generates/Menus/fui_WaveTip":117}],74:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_selectionBtn_1 = require("../../Generates/Menus/fui_selectionBtn");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_selectionBtn = /** @class */ (function (_super) {
    __extends(UI_selectionBtn, _super);
    function UI_selectionBtn() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UI_selectionBtn.createInstance = function () {
        return (fui_selectionBtn_1.default.createInstance());
    };
    UI_selectionBtn.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_selectionBtn.URL, UI_selectionBtn);
    };
    UI_selectionBtn.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
    };
    // 关闭ui
    UI_selectionBtn.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_selectionBtn.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_selectionBtn.prototype.onWindowShow = function () {
    };
    // 关闭时调用，相当于disable
    UI_selectionBtn.prototype.onWindowHide = function () {
    };
    /**
     *
     * @param isboss 是否boss关卡
     * @param map 第几个地图
     * @param level 第几关
     */
    UI_selectionBtn.prototype.setData = function (map, level, isboss) {
        if (map < 1)
            map = 1;
        if (map > 4)
            map = 4;
        if (level < 1)
            level = 1;
        if (level > 4)
            level = 4;
        this.m_pic.setSelectedIndex(isboss ? 1 : 0);
        this.m_top.setSelectedIndex(map - 1);
        this.m_end.setSelectedIndex(level - 1);
    };
    UI_selectionBtn.DependPackages = ["Menus"];
    return UI_selectionBtn;
}(fui_selectionBtn_1.default));
exports.default = UI_selectionBtn;
UI_selectionBtn.bind();
},{"../../Generates/Menus/fui_selectionBtn":118}],75:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_Circle_1 = require("../../Generates/System/fui_Circle");
var EventManager_1 = require("../../../Tool/EventManager");
var EventKey_1 = require("../../../Tool/EventKey");
var MenuLayer_1 = require("../../../gamemodule/MenuLayer");
var MenuLayerType_1 = require("../../../gamemodule/DataEnums/MenuLayerType");
var Fun_1 = require("../../../Tool/Fun");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_Circle = /** @class */ (function (_super) {
    __extends(UI_Circle, _super);
    function UI_Circle() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UI_Circle.createInstance = function () {
        return (fui_Circle_1.default.createInstance());
    };
    UI_Circle.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_Circle.URL, UI_Circle);
    };
    UI_Circle.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
        EventManager_1.default.on(EventKey_1.default.LOADER_PROGRESS, this, this.setProgress);
        EventManager_1.default.on(EventKey_1.default.LOADER_OVER, this, this.loadOver);
        EventManager_1.default.on(EventKey_1.default.SHOW_WAIT, this, this.showWait);
        EventManager_1.default.on(EventKey_1.default.CLOSE_WAIT, this, this.loadOver);
        EventManager_1.default.on(EventKey_1.default.SHOW_UI_WAIT, this, this.showUiWait);
        EventManager_1.default.on(EventKey_1.default.CLOSE_UI_WAIT, this, this.loadOver);
        MenuLayer_1.default.showHideLayer(MenuLayerType_1.MenuLayerType.Loader, false);
    };
    UI_Circle.prototype.setProgress = function (progress, max) {
        this.m_c1.setSelectedIndex(0);
        MenuLayer_1.default.showHideLayer(MenuLayerType_1.MenuLayerType.Loader, true);
        var num = Math.floor(progress * 1000 / max);
        if (num > 999)
            num = 999;
        this.m_tips.text = Fun_1.default.format("{0}.{1}%", Math.floor(num * 0.1), num % 10);
    };
    UI_Circle.prototype.showWait = function () {
        this.m_c1.setSelectedIndex(1);
        MenuLayer_1.default.showHideLayer(MenuLayerType_1.MenuLayerType.Loader, true);
    };
    UI_Circle.prototype.showUiWait = function () {
        this.m_tips.text = "";
        this.m_c1.setSelectedIndex(0);
        MenuLayer_1.default.showHideLayer(MenuLayerType_1.MenuLayerType.Loader, true);
    };
    UI_Circle.prototype.loadOver = function () {
        MenuLayer_1.default.showHideLayer(MenuLayerType_1.MenuLayerType.Loader, false);
    };
    // 关闭ui
    UI_Circle.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_Circle.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_Circle.prototype.onWindowShow = function () {
    };
    // 关闭时调用，相当于disable
    UI_Circle.prototype.onWindowHide = function () {
    };
    UI_Circle.DependPackages = ["System"];
    return UI_Circle;
}(fui_Circle_1.default));
exports.default = UI_Circle;
UI_Circle.bind();
},{"../../../Tool/EventKey":6,"../../../Tool/EventManager":7,"../../../Tool/Fun":8,"../../../gamemodule/DataEnums/MenuLayerType":136,"../../../gamemodule/MenuLayer":154,"../../Generates/System/fui_Circle":119}],76:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_CloseBtn_1 = require("../../Generates/System/fui_CloseBtn");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_CloseBtn = /** @class */ (function (_super) {
    __extends(UI_CloseBtn, _super);
    function UI_CloseBtn() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UI_CloseBtn.createInstance = function () {
        return (fui_CloseBtn_1.default.createInstance());
    };
    UI_CloseBtn.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_CloseBtn.URL, UI_CloseBtn);
    };
    UI_CloseBtn.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
    };
    // 关闭ui
    UI_CloseBtn.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_CloseBtn.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_CloseBtn.prototype.onWindowShow = function () {
    };
    // 关闭时调用，相当于disable
    UI_CloseBtn.prototype.onWindowHide = function () {
    };
    UI_CloseBtn.DependPackages = ["System"];
    return UI_CloseBtn;
}(fui_CloseBtn_1.default));
exports.default = UI_CloseBtn;
UI_CloseBtn.bind();
},{"../../Generates/System/fui_CloseBtn":120}],77:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_GeneralBtn_1 = require("../../Generates/System/fui_GeneralBtn");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_GeneralBtn = /** @class */ (function (_super) {
    __extends(UI_GeneralBtn, _super);
    function UI_GeneralBtn() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UI_GeneralBtn.createInstance = function () {
        return (fui_GeneralBtn_1.default.createInstance());
    };
    UI_GeneralBtn.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_GeneralBtn.URL, UI_GeneralBtn);
    };
    UI_GeneralBtn.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
    };
    // 关闭ui
    UI_GeneralBtn.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_GeneralBtn.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_GeneralBtn.prototype.onWindowShow = function () {
    };
    // 关闭时调用，相当于disable
    UI_GeneralBtn.prototype.onWindowHide = function () {
    };
    UI_GeneralBtn.DependPackages = ["System"];
    return UI_GeneralBtn;
}(fui_GeneralBtn_1.default));
exports.default = UI_GeneralBtn;
UI_GeneralBtn.bind();
},{"../../Generates/System/fui_GeneralBtn":121}],78:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_GuideLayer_1 = require("../../Generates/System/fui_GuideLayer");
var UI_winBtn_1 = require("./UI_winBtn");
var MenuLayer_1 = require("../../../gamemodule/MenuLayer");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_GuideLayer = /** @class */ (function (_super) {
    __extends(UI_GuideLayer, _super);
    function UI_GuideLayer() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.timeOutNum = -1;
        return _this;
    }
    UI_GuideLayer.createInstance = function () {
        return (fui_GuideLayer_1.default.createInstance());
    };
    UI_GuideLayer.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_GuideLayer.URL, UI_GuideLayer);
    };
    UI_GuideLayer.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
        if (!this.m_wbtn || this.m_wbtn == null) {
            this.m_wbtn = UI_winBtn_1.default.createInstance();
            this.addChild(this.m_wbtn);
            this.m_wbtn.onClick(this, this.clickBtn);
        }
    };
    UI_GuideLayer.prototype.showGuide = function (target, onComplete) {
        if (this.timeOutNum != -1) {
            clearTimeout(this.timeOutNum);
            this.timeOutNum = -1;
        }
        this.m_wbtn.enabled = false;
        if (this._onCompleteHandler) {
            this._onCompleteHandler.recover();
        }
        this._onCompleteHandler = onComplete;
        MenuLayer_1.default.guide.addChild(this);
        var rect = target.localToGlobalRect(-5, -5, target.width + 10, target.height + 10);
        var win = this.m_window;
        win.setSize(rect.width, rect.height);
        fairygui.tween.GTween.to2(win.x, win.y, rect.x, rect.y, 0.3).setTarget(win, win.setXY).onComplete(this._complete, this);
    };
    UI_GuideLayer.prototype._complete = function () {
        this.m_wbtn.setSize(this.m_window.width, this.m_window.height);
        this.m_wbtn.setXY(this.m_window.x, this.m_window.y);
        this.m_wbtn.enabled = true;
    };
    UI_GuideLayer.prototype.clickBtn = function () {
        var _this = this;
        this.m_wbtn.enabled = false;
        if (this._onCompleteHandler) {
            this.timeOutNum = setTimeout(function () {
                _this._onCompleteHandler.run();
            }, 100);
        }
        this.hideGuide();
    };
    UI_GuideLayer.prototype.hideGuide = function () {
        this.removeFromParent();
    };
    // 关闭ui
    UI_GuideLayer.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_GuideLayer.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_GuideLayer.prototype.onWindowShow = function () {
    };
    // 关闭时调用，相当于disable
    UI_GuideLayer.prototype.onWindowHide = function () {
    };
    UI_GuideLayer.DependPackages = ["System"];
    return UI_GuideLayer;
}(fui_GuideLayer_1.default));
exports.default = UI_GuideLayer;
UI_GuideLayer.bind();
},{"../../../gamemodule/MenuLayer":154,"../../Generates/System/fui_GuideLayer":122,"./UI_winBtn":84}],79:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_OkBtn_1 = require("../../Generates/System/fui_OkBtn");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_OkBtn = /** @class */ (function (_super) {
    __extends(UI_OkBtn, _super);
    function UI_OkBtn() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UI_OkBtn.createInstance = function () {
        return (fui_OkBtn_1.default.createInstance());
    };
    UI_OkBtn.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_OkBtn.URL, UI_OkBtn);
    };
    UI_OkBtn.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
    };
    // 关闭ui
    UI_OkBtn.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_OkBtn.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_OkBtn.prototype.onWindowShow = function () {
    };
    // 关闭时调用，相当于disable
    UI_OkBtn.prototype.onWindowHide = function () {
    };
    UI_OkBtn.DependPackages = ["System"];
    return UI_OkBtn;
}(fui_OkBtn_1.default));
exports.default = UI_OkBtn;
UI_OkBtn.bind();
},{"../../Generates/System/fui_OkBtn":123}],80:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_PopupMenu_1 = require("../../Generates/System/fui_PopupMenu");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_PopupMenu = /** @class */ (function (_super) {
    __extends(UI_PopupMenu, _super);
    function UI_PopupMenu() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UI_PopupMenu.createInstance = function () {
        return (fui_PopupMenu_1.default.createInstance());
    };
    UI_PopupMenu.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_PopupMenu.URL, UI_PopupMenu);
    };
    UI_PopupMenu.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
    };
    UI_PopupMenu.prototype.showPopup = function (button, showInBtnPos) {
        var arg = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            arg[_i - 2] = arguments[_i];
        }
        this.updateData();
        this.m_tip.text = arg.toString();
        if (showInBtnPos) {
            fairygui.GRoot.inst.showPopup(this, button);
        }
        else {
            fairygui.GRoot.inst.showPopup(this);
        }
    };
    UI_PopupMenu.prototype.updateData = function () {
    };
    // 关闭ui
    UI_PopupMenu.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_PopupMenu.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_PopupMenu.prototype.onWindowShow = function () {
    };
    // 关闭时调用，相当于disable
    UI_PopupMenu.prototype.onWindowHide = function () {
    };
    UI_PopupMenu.DependPackages = ["System"];
    return UI_PopupMenu;
}(fui_PopupMenu_1.default));
exports.default = UI_PopupMenu;
UI_PopupMenu.bind();
},{"../../Generates/System/fui_PopupMenu":124}],81:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_ScrollTxt_1 = require("../../Generates/System/fui_ScrollTxt");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_ScrollTxt = /** @class */ (function (_super) {
    __extends(UI_ScrollTxt, _super);
    function UI_ScrollTxt() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UI_ScrollTxt.createInstance = function () {
        return (fui_ScrollTxt_1.default.createInstance());
    };
    UI_ScrollTxt.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_ScrollTxt.URL, UI_ScrollTxt);
    };
    UI_ScrollTxt.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
    };
    // 关闭ui
    UI_ScrollTxt.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_ScrollTxt.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_ScrollTxt.prototype.onWindowShow = function () {
    };
    // 关闭时调用，相当于disable
    UI_ScrollTxt.prototype.onWindowHide = function () {
    };
    UI_ScrollTxt.DependPackages = ["System"];
    return UI_ScrollTxt;
}(fui_ScrollTxt_1.default));
exports.default = UI_ScrollTxt;
UI_ScrollTxt.bind();
},{"../../Generates/System/fui_ScrollTxt":125}],82:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_TipWin_1 = require("../../Generates/System/fui_TipWin");
var MenuLayer_1 = require("../../../gamemodule/MenuLayer");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_TipWin = /** @class */ (function (_super) {
    __extends(UI_TipWin, _super);
    function UI_TipWin() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UI_TipWin.createInstance = function () {
        return (fui_TipWin_1.default.createInstance());
    };
    UI_TipWin.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_TipWin.URL, UI_TipWin);
    };
    UI_TipWin.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
        this.m_ok.onClick(this, this.okBtnClick);
    };
    UI_TipWin.prototype.okBtnClick = function () {
        this.onComplete();
    };
    UI_TipWin.prototype.showTxt = function (txt, onComplete) {
        if (this._onCompleteHandler) {
            this._onCompleteHandler.recover();
        }
        this._onCompleteHandler = onComplete;
        this.m_c1.setSelectedIndex(1);
        this.m_scrollTxt.text = txt;
        MenuLayer_1.default.floatMsg.addChild(this);
    };
    UI_TipWin.prototype.showList = function (list, onComplete) {
        if (this._onCompleteHandler) {
            this._onCompleteHandler.recover();
        }
        this._onCompleteHandler = onComplete;
        this.m_c1.setSelectedIndex(0);
        MenuLayer_1.default.floatMsg.addChild(this);
    };
    UI_TipWin.prototype.onComplete = function () {
        this.removeFromParent();
        if (this._onCompleteHandler) {
            this._onCompleteHandler.runWith(this);
            this._onCompleteHandler.recover();
            this._onCompleteHandler = null;
        }
    };
    // 关闭ui
    UI_TipWin.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_TipWin.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_TipWin.prototype.onWindowShow = function () {
    };
    // 关闭时调用，相当于disable
    UI_TipWin.prototype.onWindowHide = function () {
    };
    UI_TipWin.DependPackages = ["System"];
    return UI_TipWin;
}(fui_TipWin_1.default));
exports.default = UI_TipWin;
UI_TipWin.bind();
},{"../../../gamemodule/MenuLayer":154,"../../Generates/System/fui_TipWin":126}],83:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_TotalMessage_1 = require("../../Generates/System/fui_TotalMessage");
var MenuLayer_1 = require("../../../gamemodule/MenuLayer");
var Handler = Laya.Handler;
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_TotalMessage = /** @class */ (function (_super) {
    __extends(UI_TotalMessage, _super);
    function UI_TotalMessage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UI_TotalMessage.createInstance = function () {
        return (fui_TotalMessage_1.default.createInstance());
    };
    UI_TotalMessage.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_TotalMessage.URL, UI_TotalMessage);
    };
    UI_TotalMessage.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
    };
    UI_TotalMessage.prototype.playMove = function (txt, onComplete) {
        if (this._onCompleteHandler) {
            this._onCompleteHandler.recover();
        }
        this._onCompleteHandler = onComplete;
        this.m_moveTtitle.text = txt;
        MenuLayer_1.default.floatMsg.addChild(this);
        this.m_move.play(Handler.create(this, this.onComplete));
    };
    UI_TotalMessage.prototype.playTop = function (txt, onComplete) {
        if (this._onCompleteHandler) {
            this._onCompleteHandler.recover();
        }
        this._onCompleteHandler = onComplete;
        this.m_topTitle.text = txt;
        MenuLayer_1.default.floatMsg.addChild(this);
        this.m_top.play(Handler.create(this, this.onComplete));
    };
    UI_TotalMessage.prototype.onComplete = function () {
        this.removeFromParent();
        if (this._onCompleteHandler) {
            this._onCompleteHandler.runWith(this);
            this._onCompleteHandler.recover();
            this._onCompleteHandler = null;
        }
    };
    // 关闭ui
    UI_TotalMessage.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_TotalMessage.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_TotalMessage.prototype.onWindowShow = function () {
    };
    // 关闭时调用，相当于disable
    UI_TotalMessage.prototype.onWindowHide = function () {
    };
    UI_TotalMessage.DependPackages = ["System"];
    return UI_TotalMessage;
}(fui_TotalMessage_1.default));
exports.default = UI_TotalMessage;
UI_TotalMessage.bind();
},{"../../../gamemodule/MenuLayer":154,"../../Generates/System/fui_TotalMessage":127}],84:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fui_winBtn_1 = require("../../Generates/System/fui_winBtn");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var UI_winBtn = /** @class */ (function (_super) {
    __extends(UI_winBtn, _super);
    function UI_winBtn() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UI_winBtn.createInstance = function () {
        return (fui_winBtn_1.default.createInstance());
    };
    UI_winBtn.bind = function () {
        fairygui.UIObjectFactory.setPackageItemExtension(UI_winBtn.URL, UI_winBtn);
    };
    UI_winBtn.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        // 此处可以引入初始化信息，比如初始化按钮点击，相当于awake()
        // ToDo
    };
    // 关闭ui
    UI_winBtn.prototype.closeUI = function () {
        this.moduleWindow.menuClose();
    };
    // 返回上一级ui
    UI_winBtn.prototype.backUI = function () {
        this.moduleWindow.menuBack();
    };
    // 显示，相当于enable
    UI_winBtn.prototype.onWindowShow = function () {
    };
    // 关闭时调用，相当于disable
    UI_winBtn.prototype.onWindowHide = function () {
    };
    UI_winBtn.DependPackages = ["System"];
    return UI_winBtn;
}(fui_winBtn_1.default));
exports.default = UI_winBtn;
UI_winBtn.bind();
},{"../../Generates/System/fui_winBtn":128}],85:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ResPackageConfig_1 = require("./ResPackageConfig");
var Dictionary_1 = require("../Tool/Dictionary");
// 此文件不要修改，会被覆盖
var FGUIResPackageConfig = /** @class */ (function () {
    function FGUIResPackageConfig() {
    }
    // 添加配置
    FGUIResPackageConfig.addconfig = function (config) {
        this.dict.add(config.packageName, config);
    };
    // 获取配置
    FGUIResPackageConfig.getconfig = function (packageName) {
        return this.dict.getValue(packageName);
    };
    FGUIResPackageConfig.install = function () {
        var config;
        config = new ResPackageConfig_1.default();
        config.packageName = "Arrangement";
        config.resDir = "fgui";
        config.resBin = "Arrangement.bin";
        config.resAtlas.push("Arrangement_atlas0.png");
        this.addconfig(config);
        config = new ResPackageConfig_1.default();
        config.packageName = "Bag";
        config.resDir = "fgui";
        config.resBin = "Bag.bin";
        this.addconfig(config);
        config = new ResPackageConfig_1.default();
        config.packageName = "Battle";
        config.resDir = "fgui";
        config.resBin = "Battle.bin";
        config.resAtlas.push("Battle_atlas0.png");
        this.addconfig(config);
        config = new ResPackageConfig_1.default();
        config.packageName = "FSprite";
        config.resDir = "fgui";
        config.resBin = "FSprite.bin";
        config.resAtlas.push("FSprite_atlas0.png");
        this.addconfig(config);
        config = new ResPackageConfig_1.default();
        config.packageName = "GM";
        config.resDir = "fgui";
        config.resBin = "GM.bin";
        this.addconfig(config);
        config = new ResPackageConfig_1.default();
        config.packageName = "Home";
        config.resDir = "fgui";
        config.resBin = "Home.bin";
        this.addconfig(config);
        config = new ResPackageConfig_1.default();
        config.packageName = "Menus";
        config.resDir = "fgui";
        config.resBin = "Menus.bin";
        config.resAtlas.push("Menus_atlas0.png");
        this.addconfig(config);
        config = new ResPackageConfig_1.default();
        config.packageName = "Sound";
        config.resDir = "fgui";
        config.resBin = "Sound.bin";
        config.resSounds.push("Sound_jx3y1.mp3");
        config.resSounds.push("Sound_q0800.mp3");
        this.addconfig(config);
        config = new ResPackageConfig_1.default();
        config.packageName = "System";
        config.resDir = "fgui";
        config.resBin = "System.bin";
        config.resAtlas.push("System_atlas0.png");
        this.addconfig(config);
    };
    FGUIResPackageConfig.dict = new Dictionary_1.default();
    return FGUIResPackageConfig;
}());
exports.default = FGUIResPackageConfig;
},{"../Tool/Dictionary":5,"./ResPackageConfig":131}],86:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Tool/Dictionary");
var FGUIResPackageConfig_1 = require("./FGUIResPackageConfig");
var Loader = laya.net.Loader;
var AssetManager_1 = require("./AssetManager");
var GuiPackageNames_1 = require("./GuiPackageNames");
var GamePreload = /** @class */ (function () {
    function GamePreload() {
    }
    // 添加依赖资源--fgui 包名
    GamePreload.addAssetForFguiPackagename = function (packagename) {
        this.assets.push({ url: packagename, type: AssetItemType.FguiPackage });
    };
    // 添加依赖资源--组件
    GamePreload.addAssetForFguiComponent = function (fguiCom) {
        var names = fguiCom["DependPackages"];
        for (var i = 0; i < names.length; i++) {
            this.addAssetForFguiPackagename(names[i]);
        }
    };
    GamePreload.begin = function (onObj, onCompleteFun) {
        this.onObj = onObj;
        this.onCompleteFun = onCompleteFun;
        this.generate();
        console.log("预加载资源数量：" + this.list.length);
        AssetManager_1.default.loadList(this.list, this, this.onEnd, this.onProgress);
    };
    GamePreload.onProgress = function (rate, index, count, item) {
        // fgui加载进度
    };
    GamePreload.onEnd = function () {
        for (var _i = 0, _a = this.packageConfigs; _i < _a.length; _i++) {
            var packageConfig = _a[_i];
            AssetManager_1.default.addPackage(packageConfig.packagePath);
        }
        if (this.onCompleteFun) {
            if (this.onObj) {
                this.onCompleteFun.apply(this.onObj);
            }
            else {
                this.onCompleteFun();
            }
        }
    };
    GamePreload.generate = function () {
        this.addAssetForFguiPackagename(GuiPackageNames_1.default.System);
        this.addAssetForFguiPackagename(GuiPackageNames_1.default.GM);
        this.addAssetForFguiPackagename(GuiPackageNames_1.default.Sound);
        this.addAssetForFguiPackagename(GuiPackageNames_1.default.FSprite);
        this.addAssetForFguiPackagename(GuiPackageNames_1.default.Home);
        var dict = new Dictionary_1.default();
        var packageDict = new Dictionary_1.default();
        for (var i = 0; i < this.assets.length; i++) {
            var item = this.assets[i];
            var packageConfig = null;
            switch (item.type) {
                case AssetItemType.FguiPackage:
                    packageConfig = FGUIResPackageConfig_1.default.getconfig(item.url);
                    break;
                case AssetItemType.FspritePackage:
                    packageConfig = FGUIResPackageConfig_1.default.getconfig(item.url);
                    break;
            }
            if (packageConfig) {
                if (!packageDict.hasKey(packageConfig.packagePath)) {
                    packageDict.add(packageConfig.packagePath, packageConfig);
                }
                var packageRes = packageConfig.loadList;
                for (var _i = 0, packageRes_1 = packageRes; _i < packageRes_1.length; _i++) {
                    var packageItem = packageRes_1[_i];
                    if (!dict.hasKey(packageItem.url)) {
                        var mitem = { url: packageItem.url, type: AssetHelper.layaLoaderType2AssetItemType(packageItem.type) };
                        dict.add(mitem.url, mitem);
                    }
                }
            }
            else {
                if (!dict.hasKey(item.url)) {
                    dict.add(item.url, item);
                }
            }
        }
        this.list = dict.getValues();
        this.packageConfigs = packageDict.getValues();
    };
    GamePreload.packageConfigs = [];
    // 依赖资源列表
    GamePreload.assets = [];
    return GamePreload;
}());
exports.default = GamePreload;
var AssetItemType;
(function (AssetItemType) {
    AssetItemType[AssetItemType["FguiPackage"] = 0] = "FguiPackage";
    AssetItemType[AssetItemType["FspritePackage"] = 1] = "FspritePackage";
    AssetItemType[AssetItemType["Image"] = 2] = "Image";
    AssetItemType[AssetItemType["Buffer"] = 3] = "Buffer";
    AssetItemType[AssetItemType["Sound"] = 4] = "Sound";
    AssetItemType[AssetItemType["Text"] = 5] = "Text";
    AssetItemType[AssetItemType["Json"] = 6] = "Json";
    AssetItemType[AssetItemType["Xml"] = 7] = "Xml";
    AssetItemType[AssetItemType["Font"] = 8] = "Font";
    AssetItemType[AssetItemType["TTF"] = 9] = "TTF";
    AssetItemType[AssetItemType["PKM"] = 10] = "PKM";
})(AssetItemType = exports.AssetItemType || (exports.AssetItemType = {}));
var AssetHelper = /** @class */ (function () {
    function AssetHelper() {
    }
    Object.defineProperty(AssetHelper, "layaLoaderType2AssetItemTypeDict", {
        get: function () {
            if (!AssetHelper._layaLoaderType2AssetItemTypeDict) {
                var dict = new Dictionary_1.default();
                dict.add(Loader.IMAGE, AssetItemType.Image);
                dict.add(Loader.BUFFER, AssetItemType.Buffer);
                dict.add(Loader.SOUND, AssetItemType.Sound);
                dict.add(Loader.TEXT, AssetItemType.Text);
                dict.add(Loader.JSON, AssetItemType.Json);
                dict.add(Loader.XML, AssetItemType.Xml);
                dict.add(Loader.FONT, AssetItemType.Font);
                dict.add(Loader.TTF, AssetItemType.TTF);
                AssetHelper._layaLoaderType2AssetItemTypeDict = dict;
            }
            return AssetHelper._layaLoaderType2AssetItemTypeDict;
        },
        enumerable: true,
        configurable: true
    });
    AssetHelper.layaLoaderType2AssetItemType = function (loader) {
        return AssetHelper.layaLoaderType2AssetItemTypeDict.getValue(loader);
    };
    return AssetHelper;
}());
exports.AssetHelper = AssetHelper;
},{"../Tool/Dictionary":5,"./AssetManager":42,"./FGUIResPackageConfig":85,"./GuiPackageNames":129}],87:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_ArrangementMain = /** @class */ (function (_super) {
    __extends(fui_ArrangementMain, _super);
    function fui_ArrangementMain() {
        return _super.call(this) || this;
    }
    fui_ArrangementMain.createInstance = function () {
        return (fairygui.UIPackage.createObject("Arrangement", "ArrangementMain"));
    };
    fui_ArrangementMain.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_titles = (this.getChildAt(1));
        this.m_select1 = (this.getChildAt(2));
        this.m_select2 = (this.getChildAt(3));
        this.m_select3 = (this.getChildAt(4));
        this.m_seatList = (this.getChildAt(5));
        this.m_heroList = (this.getChildAt(6));
        this.m_backBtn = (this.getChildAt(7));
        this.m_level = (this.getChildAt(8));
        this.m_star = (this.getChildAt(9));
        this.m_levelUpBtn = (this.getChildAt(10));
        this.m_starUpBtn = (this.getChildAt(11));
        this.m_associationList = (this.getChildAt(15));
        this.m_recommendPos = (this.getChildAt(16));
        this.m_removeSeatBtn = (this.getChildAt(17));
    };
    fui_ArrangementMain.URL = "ui://9wh71t3fog780";
    return fui_ArrangementMain;
}(fairygui.GComponent));
exports.default = fui_ArrangementMain;
},{}],88:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_Association = /** @class */ (function (_super) {
    __extends(fui_Association, _super);
    function fui_Association() {
        return _super.call(this) || this;
    }
    fui_Association.createInstance = function () {
        return (fairygui.UIPackage.createObject("Arrangement", "Association"));
    };
    fui_Association.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_title = (this.getChildAt(1));
        this.m_recommendBtn = (this.getChildAt(2));
    };
    fui_Association.URL = "ui://9wh71t3fnn3i6";
    return fui_Association;
}(fairygui.GComponent));
exports.default = fui_Association;
},{}],89:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_HeroInfo = /** @class */ (function (_super) {
    __extends(fui_HeroInfo, _super);
    function fui_HeroInfo() {
        return _super.call(this) || this;
    }
    fui_HeroInfo.createInstance = function () {
        return (fairygui.UIPackage.createObject("Arrangement", "HeroInfo"));
    };
    fui_HeroInfo.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_heroname = (this.getChildAt(2));
        this.m_icons = (this.getChildAt(3));
        this.m_lv = (this.getChildAt(4));
        this.m_star = (this.getChildAt(5));
        this.m_atk = (this.getChildAt(6));
        this.m_atkspeed = (this.getChildAt(7));
        this.m_cirt = (this.getChildAt(8));
        this.m_burst = (this.getChildAt(9));
        this.m_skillname = (this.getChildAt(10));
        this.m_gainmethod = (this.getChildAt(11));
        this.m_race = (this.getChildAt(12));
        this.m_career = (this.getChildAt(13));
        this.m_special = (this.getChildAt(14));
        this.m_lookrace = (this.getChildAt(15));
        this.m_lookcareer = (this.getChildAt(16));
        this.m_lookspecial = (this.getChildAt(17));
        this.m_closeBtn = (this.getChildAt(18));
    };
    fui_HeroInfo.URL = "ui://9wh71t3fnn3i9";
    return fui_HeroInfo;
}(fairygui.GComponent));
exports.default = fui_HeroInfo;
},{}],90:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_PropBtn = /** @class */ (function (_super) {
    __extends(fui_PropBtn, _super);
    function fui_PropBtn() {
        return _super.call(this) || this;
    }
    fui_PropBtn.createInstance = function () {
        return (fairygui.UIPackage.createObject("Arrangement", "PropBtn"));
    };
    fui_PropBtn.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_status = this.getControllerAt(1);
        this.m_t0 = this.getTransitionAt(0);
    };
    fui_PropBtn.URL = "ui://9wh71t3fnn3i4";
    return fui_PropBtn;
}(fairygui.GButton));
exports.default = fui_PropBtn;
},{}],91:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_Recommend = /** @class */ (function (_super) {
    __extends(fui_Recommend, _super);
    function fui_Recommend() {
        return _super.call(this) || this;
    }
    fui_Recommend.createInstance = function () {
        return (fairygui.UIPackage.createObject("Arrangement", "Recommend"));
    };
    fui_Recommend.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_type = (this.getChildAt(1));
        this.m_race = (this.getChildAt(2));
        this.m_heroList = (this.getChildAt(4));
        this.m_list = (this.getChildAt(6));
        this.m_closeBtn = (this.getChildAt(7));
    };
    fui_Recommend.URL = "ui://9wh71t3fnn3i7";
    return fui_Recommend;
}(fairygui.GComponent));
exports.default = fui_Recommend;
},{}],92:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_txt = /** @class */ (function (_super) {
    __extends(fui_txt, _super);
    function fui_txt() {
        return _super.call(this) || this;
    }
    fui_txt.createInstance = function () {
        return (fairygui.UIPackage.createObject("Arrangement", "txt"));
    };
    fui_txt.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_titles = (this.getChildAt(0));
    };
    fui_txt.URL = "ui://9wh71t3fnn3i8";
    return fui_txt;
}(fairygui.GComponent));
exports.default = fui_txt;
},{}],93:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_BagMain = /** @class */ (function (_super) {
    __extends(fui_BagMain, _super);
    function fui_BagMain() {
        return _super.call(this) || this;
    }
    fui_BagMain.createInstance = function () {
        return (fairygui.UIPackage.createObject("Bag", "BagMain"));
    };
    fui_BagMain.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_list = (this.getChildAt(1));
        this.m_backBtn = (this.getChildAt(2));
    };
    fui_BagMain.URL = "ui://kpm8go2dj5ct0";
    return fui_BagMain;
}(fairygui.GComponent));
exports.default = fui_BagMain;
},{}],94:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_AssociationBtn = /** @class */ (function (_super) {
    __extends(fui_AssociationBtn, _super);
    function fui_AssociationBtn() {
        return _super.call(this) || this;
    }
    fui_AssociationBtn.createInstance = function () {
        return (fairygui.UIPackage.createObject("Battle", "AssociationBtn"));
    };
    fui_AssociationBtn.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_titles = (this.getChildAt(1));
    };
    fui_AssociationBtn.URL = "ui://3jvhuirzngrs18";
    return fui_AssociationBtn;
}(fairygui.GButton));
exports.default = fui_AssociationBtn;
},{}],95:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_BattleLeftBottom = /** @class */ (function (_super) {
    __extends(fui_BattleLeftBottom, _super);
    function fui_BattleLeftBottom() {
        return _super.call(this) || this;
    }
    fui_BattleLeftBottom.createInstance = function () {
        return (fairygui.UIPackage.createObject("Battle", "BattleLeftBottom"));
    };
    fui_BattleLeftBottom.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_dikuang = (this.getChildAt(1));
        this.m_headIcon = (this.getChildAt(2));
        this.m_atkAttribute = (this.getChildAt(3));
        this.m_attribute = (this.getChildAt(4));
        this.m_nameIcon = (this.getChildAt(5));
        this.m_atktip = (this.getChildAt(6));
        this.m_skill = (this.getChildAt(7));
        this.m_menpai = (this.getChildAt(8));
        this.m_wuxing = (this.getChildAt(9));
    };
    fui_BattleLeftBottom.URL = "ui://3jvhuirzngrsz";
    return fui_BattleLeftBottom;
}(fairygui.GComponent));
exports.default = fui_BattleLeftBottom;
},{}],96:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_BattleLeftTop = /** @class */ (function (_super) {
    __extends(fui_BattleLeftTop, _super);
    function fui_BattleLeftTop() {
        return _super.call(this) || this;
    }
    fui_BattleLeftTop.createInstance = function () {
        return (fairygui.UIPackage.createObject("Battle", "BattleLeftTop"));
    };
    fui_BattleLeftTop.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_waveBtn = (this.getChildAt(0));
        this.m_tip1 = (this.getChildAt(1));
        this.m_tip2 = (this.getChildAt(2));
    };
    fui_BattleLeftTop.URL = "ui://3jvhuirzngrsx";
    return fui_BattleLeftTop;
}(fairygui.GComponent));
exports.default = fui_BattleLeftTop;
},{}],97:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_BattleMain = /** @class */ (function (_super) {
    __extends(fui_BattleMain, _super);
    function fui_BattleMain() {
        return _super.call(this) || this;
    }
    fui_BattleMain.createInstance = function () {
        return (fairygui.UIPackage.createObject("Battle", "BattleMain"));
    };
    fui_BattleMain.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_base0 = (this.getChildAt(1));
        this.m_stone0 = (this.getChildAt(2));
        this.m_base1 = (this.getChildAt(3));
        this.m_stone1 = (this.getChildAt(4));
        this.m_base2 = (this.getChildAt(5));
        this.m_base3 = (this.getChildAt(6));
        this.m_stone2 = (this.getChildAt(7));
        this.m_base4 = (this.getChildAt(8));
        this.m_stone3 = (this.getChildAt(9));
        this.m_base5 = (this.getChildAt(10));
        this.m_base6 = (this.getChildAt(11));
        this.m_stone4 = (this.getChildAt(12));
        this.m_base7 = (this.getChildAt(13));
        this.m_stone5 = (this.getChildAt(14));
        this.m_base8 = (this.getChildAt(15));
        this.m_scenes = (this.getChildAt(24));
        this.m_bloods = (this.getChildAt(25));
    };
    fui_BattleMain.URL = "ui://3jvhuirzn1s05";
    return fui_BattleMain;
}(fairygui.GComponent));
exports.default = fui_BattleMain;
},{}],98:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_BattleRightBottom = /** @class */ (function (_super) {
    __extends(fui_BattleRightBottom, _super);
    function fui_BattleRightBottom() {
        return _super.call(this) || this;
    }
    fui_BattleRightBottom.createInstance = function () {
        return (fairygui.UIPackage.createObject("Battle", "BattleRightBottom"));
    };
    fui_BattleRightBottom.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_skill1Btn = (this.getChildAt(1));
        this.m_skill2Btn = (this.getChildAt(2));
        this.m_skill3Btn = (this.getChildAt(3));
    };
    fui_BattleRightBottom.URL = "ui://3jvhuirzngrs11";
    return fui_BattleRightBottom;
}(fairygui.GComponent));
exports.default = fui_BattleRightBottom;
},{}],99:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_BattleRightTop = /** @class */ (function (_super) {
    __extends(fui_BattleRightTop, _super);
    function fui_BattleRightTop() {
        return _super.call(this) || this;
    }
    fui_BattleRightTop.createInstance = function () {
        return (fairygui.UIPackage.createObject("Battle", "BattleRightTop"));
    };
    fui_BattleRightTop.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_waveBtn = (this.getChildAt(0));
        this.m_setBtn = (this.getChildAt(1));
        this.m_pauseBtn = (this.getChildAt(2));
        this.m_time = (this.getChildAt(3));
    };
    fui_BattleRightTop.URL = "ui://3jvhuirzngrs10";
    return fui_BattleRightTop;
}(fairygui.GComponent));
exports.default = fui_BattleRightTop;
},{}],100:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_BattleTopMiddle = /** @class */ (function (_super) {
    __extends(fui_BattleTopMiddle, _super);
    function fui_BattleTopMiddle() {
        return _super.call(this) || this;
    }
    fui_BattleTopMiddle.createInstance = function () {
        return (fairygui.UIPackage.createObject("Battle", "BattleTopMiddle"));
    };
    fui_BattleTopMiddle.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_c1 = this.getControllerAt(0);
        this.m_associationList = (this.getChildAt(0));
        this.m_title = (this.getChildAt(2));
        this.m_t0 = this.getTransitionAt(0);
    };
    fui_BattleTopMiddle.URL = "ui://3jvhuirzngrs15";
    return fui_BattleTopMiddle;
}(fairygui.GComponent));
exports.default = fui_BattleTopMiddle;
},{}],101:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_Blood = /** @class */ (function (_super) {
    __extends(fui_Blood, _super);
    function fui_Blood() {
        return _super.call(this) || this;
    }
    fui_Blood.createInstance = function () {
        return (fairygui.UIPackage.createObject("Battle", "Blood"));
    };
    fui_Blood.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_bg = (this.getChildAt(0));
    };
    fui_Blood.URL = "ui://3jvhuirzepyrh";
    return fui_Blood;
}(fairygui.GProgressBar));
exports.default = fui_Blood;
},{}],102:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_DriftingBlood = /** @class */ (function (_super) {
    __extends(fui_DriftingBlood, _super);
    function fui_DriftingBlood() {
        return _super.call(this) || this;
    }
    fui_DriftingBlood.createInstance = function () {
        return (fairygui.UIPackage.createObject("Battle", "DriftingBlood"));
    };
    fui_DriftingBlood.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_t0 = this.getTransitionAt(0);
    };
    fui_DriftingBlood.URL = "ui://3jvhuirzepyri";
    return fui_DriftingBlood;
}(fairygui.GLabel));
exports.default = fui_DriftingBlood;
},{}],103:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_GameOver = /** @class */ (function (_super) {
    __extends(fui_GameOver, _super);
    function fui_GameOver() {
        return _super.call(this) || this;
    }
    fui_GameOver.createInstance = function () {
        return (fairygui.UIPackage.createObject("Battle", "GameOver"));
    };
    fui_GameOver.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_c1 = this.getControllerAt(0);
        this.m_gainBtn = (this.getChildAt(7));
        this.m_upBtn = (this.getChildAt(15));
        this.m_rewardList = (this.getChildAt(16));
    };
    fui_GameOver.URL = "ui://3jvhuirzngrsn";
    return fui_GameOver;
}(fairygui.GComponent));
exports.default = fui_GameOver;
},{}],104:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_Shadow = /** @class */ (function (_super) {
    __extends(fui_Shadow, _super);
    function fui_Shadow() {
        return _super.call(this) || this;
    }
    fui_Shadow.createInstance = function () {
        return (fairygui.UIPackage.createObject("Battle", "Shadow"));
    };
    fui_Shadow.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_t0 = this.getTransitionAt(0);
    };
    fui_Shadow.URL = "ui://3jvhuirzepyrk";
    return fui_Shadow;
}(fairygui.GComponent));
exports.default = fui_Shadow;
},{}],105:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_SkillBtn = /** @class */ (function (_super) {
    __extends(fui_SkillBtn, _super);
    function fui_SkillBtn() {
        return _super.call(this) || this;
    }
    fui_SkillBtn.createInstance = function () {
        return (fairygui.UIPackage.createObject("Battle", "SkillBtn"));
    };
    fui_SkillBtn.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_mask = (this.getChildAt(1));
    };
    fui_SkillBtn.URL = "ui://3jvhuirzngrs13";
    return fui_SkillBtn;
}(fairygui.GButton));
exports.default = fui_SkillBtn;
},{}],106:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_Stone = /** @class */ (function (_super) {
    __extends(fui_Stone, _super);
    function fui_Stone() {
        return _super.call(this) || this;
    }
    fui_Stone.createInstance = function () {
        return (fairygui.UIPackage.createObject("Battle", "Stone"));
    };
    fui_Stone.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_c1 = this.getControllerAt(0);
    };
    fui_Stone.URL = "ui://3jvhuirzn1s09";
    return fui_Stone;
}(fairygui.GComponent));
exports.default = fui_Stone;
},{}],107:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_bagua = /** @class */ (function (_super) {
    __extends(fui_bagua, _super);
    function fui_bagua() {
        return _super.call(this) || this;
    }
    fui_bagua.createInstance = function () {
        return (fairygui.UIPackage.createObject("Battle", "bagua"));
    };
    fui_bagua.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_c1 = this.getControllerAt(0);
        this.m_t1 = this.getTransitionAt(0);
        this.m_t2 = this.getTransitionAt(1);
    };
    fui_bagua.URL = "ui://3jvhuirzyyzwe";
    return fui_bagua;
}(fairygui.GComponent));
exports.default = fui_bagua;
},{}],108:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_GMMain = /** @class */ (function (_super) {
    __extends(fui_GMMain, _super);
    function fui_GMMain() {
        return _super.call(this) || this;
    }
    fui_GMMain.createInstance = function () {
        return (fairygui.UIPackage.createObject("GM", "GMMain"));
    };
    fui_GMMain.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_list = (this.getChildAt(1));
        this.m_closeBtn = (this.getChildAt(2));
    };
    fui_GMMain.URL = "ui://krkxlzm9j5ct0";
    return fui_GMMain;
}(fairygui.GComponent));
exports.default = fui_GMMain;
},{}],109:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_GeneralBtns = /** @class */ (function (_super) {
    __extends(fui_GeneralBtns, _super);
    function fui_GeneralBtns() {
        return _super.call(this) || this;
    }
    fui_GeneralBtns.createInstance = function () {
        return (fairygui.UIPackage.createObject("Home", "GeneralBtns"));
    };
    fui_GeneralBtns.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_bgColor = this.getControllerAt(1);
    };
    fui_GeneralBtns.URL = "ui://9xvnuoq0og7810";
    return fui_GeneralBtns;
}(fairygui.GButton));
exports.default = fui_GeneralBtns;
},{}],110:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_HomeMain = /** @class */ (function (_super) {
    __extends(fui_HomeMain, _super);
    function fui_HomeMain() {
        return _super.call(this) || this;
    }
    fui_HomeMain.createInstance = function () {
        return (fairygui.UIPackage.createObject("Home", "HomeMain"));
    };
    fui_HomeMain.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_homeTip = (this.getChildAt(0));
        this.m_feicui = (this.getChildAt(1));
        this.m_baoshi = (this.getChildAt(2));
        this.m_gold = (this.getChildAt(3));
        this.m_fightBtn = (this.getChildAt(4));
        this.m_trialBtn = (this.getChildAt(5));
        this.m_seatBtn = (this.getChildAt(6));
        this.m_conquestBtn = (this.getChildAt(7));
    };
    fui_HomeMain.URL = "ui://9xvnuoq0og780";
    return fui_HomeMain;
}(fairygui.GComponent));
exports.default = fui_HomeMain;
},{}],111:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_HeadIcon = /** @class */ (function (_super) {
    __extends(fui_HeadIcon, _super);
    function fui_HeadIcon() {
        return _super.call(this) || this;
    }
    fui_HeadIcon.createInstance = function () {
        return (fairygui.UIPackage.createObject("Menus", "HeadIcon"));
    };
    fui_HeadIcon.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_icon = (this.getChildAt(0));
    };
    fui_HeadIcon.URL = "ui://pdzut3twngrs10";
    return fui_HeadIcon;
}(fairygui.GComponent));
exports.default = fui_HeadIcon;
},{}],112:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_HeadIcon2 = /** @class */ (function (_super) {
    __extends(fui_HeadIcon2, _super);
    function fui_HeadIcon2() {
        return _super.call(this) || this;
    }
    fui_HeadIcon2.createInstance = function () {
        return (fairygui.UIPackage.createObject("Menus", "HeadIcon2"));
    };
    fui_HeadIcon2.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_icon = (this.getChildAt(0));
    };
    fui_HeadIcon2.URL = "ui://pdzut3twngrs1k";
    return fui_HeadIcon2;
}(fairygui.GComponent));
exports.default = fui_HeadIcon2;
},{}],113:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_HeroIcon = /** @class */ (function (_super) {
    __extends(fui_HeroIcon, _super);
    function fui_HeroIcon() {
        return _super.call(this) || this;
    }
    fui_HeroIcon.createInstance = function () {
        return (fairygui.UIPackage.createObject("Menus", "HeroIcon"));
    };
    fui_HeroIcon.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_c1 = this.getControllerAt(0);
        this.m_headIcon = (this.getChildAt(1));
        this.m_number = (this.getChildAt(3));
    };
    fui_HeroIcon.URL = "ui://pdzut3twngrsz";
    return fui_HeroIcon;
}(fairygui.GComponent));
exports.default = fui_HeroIcon;
},{}],114:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_MenusMain = /** @class */ (function (_super) {
    __extends(fui_MenusMain, _super);
    function fui_MenusMain() {
        return _super.call(this) || this;
    }
    fui_MenusMain.createInstance = function () {
        return (fairygui.UIPackage.createObject("Menus", "MenusMain"));
    };
    fui_MenusMain.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_backBtn = (this.getChildAt(2));
        this.m_middle = (this.getChildAt(3));
        this.m_select1 = (this.getChildAt(7));
        this.m_select2 = (this.getChildAt(8));
        this.m_select3 = (this.getChildAt(9));
        this.m_select4 = (this.getChildAt(10));
        this.m_select5 = (this.getChildAt(11));
        this.m_select6 = (this.getChildAt(12));
        this.m_select7 = (this.getChildAt(13));
        this.m_select8 = (this.getChildAt(14));
        this.m_select9 = (this.getChildAt(15));
        this.m_select10 = (this.getChildAt(16));
        this.m_select11 = (this.getChildAt(17));
        this.m_select12 = (this.getChildAt(18));
        this.m_select13 = (this.getChildAt(19));
    };
    fui_MenusMain.URL = "ui://pdzut3twudz45";
    return fui_MenusMain;
}(fairygui.GComponent));
exports.default = fui_MenusMain;
},{}],115:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_Selection = /** @class */ (function (_super) {
    __extends(fui_Selection, _super);
    function fui_Selection() {
        return _super.call(this) || this;
    }
    fui_Selection.createInstance = function () {
        return (fairygui.UIPackage.createObject("Menus", "Selection"));
    };
    fui_Selection.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_status = this.getControllerAt(0);
        this.m_selBtn = (this.getChildAt(0));
        this.m_progress = (this.getChildAt(4));
        this.m_time = (this.getChildAt(7));
        this.m_gain = (this.getChildAt(8));
    };
    fui_Selection.URL = "ui://pdzut3twngrs13";
    return fui_Selection;
}(fairygui.GComponent));
exports.default = fui_Selection;
},{}],116:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_Trial = /** @class */ (function (_super) {
    __extends(fui_Trial, _super);
    function fui_Trial() {
        return _super.call(this) || this;
    }
    fui_Trial.createInstance = function () {
        return (fairygui.UIPackage.createObject("Menus", "Trial"));
    };
    fui_Trial.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_c1 = this.getControllerAt(0);
        this.m_closeBtn = (this.getChildAt(2));
        this.m_mapid = (this.getChildAt(5));
        this.m_levelid = (this.getChildAt(6));
        this.m_seatBtn = (this.getChildAt(17));
        this.m_startBtn = (this.getChildAt(18));
        this.m_progress = (this.getChildAt(23));
    };
    fui_Trial.URL = "ui://pdzut3twudz4p";
    return fui_Trial;
}(fairygui.GComponent));
exports.default = fui_Trial;
},{}],117:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_WaveTip = /** @class */ (function (_super) {
    __extends(fui_WaveTip, _super);
    function fui_WaveTip() {
        return _super.call(this) || this;
    }
    fui_WaveTip.createInstance = function () {
        return (fairygui.UIPackage.createObject("Menus", "WaveTip"));
    };
    fui_WaveTip.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_icon = (this.getChildAt(1));
        this.m_title = (this.getChildAt(2));
        this.m_title2 = (this.getChildAt(3));
    };
    fui_WaveTip.URL = "ui://pdzut3twngrs18";
    return fui_WaveTip;
}(fairygui.GComponent));
exports.default = fui_WaveTip;
},{}],118:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_selectionBtn = /** @class */ (function (_super) {
    __extends(fui_selectionBtn, _super);
    function fui_selectionBtn() {
        return _super.call(this) || this;
    }
    fui_selectionBtn.createInstance = function () {
        return (fairygui.UIPackage.createObject("Menus", "selectionBtn"));
    };
    fui_selectionBtn.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_pic = this.getControllerAt(1);
        this.m_top = this.getControllerAt(2);
        this.m_end = this.getControllerAt(3);
    };
    fui_selectionBtn.URL = "ui://pdzut3twudz4h";
    return fui_selectionBtn;
}(fairygui.GButton));
exports.default = fui_selectionBtn;
},{}],119:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_Circle = /** @class */ (function (_super) {
    __extends(fui_Circle, _super);
    function fui_Circle() {
        return _super.call(this) || this;
    }
    fui_Circle.createInstance = function () {
        return (fairygui.UIPackage.createObject("System", "Circle"));
    };
    fui_Circle.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_c1 = this.getControllerAt(0);
        this.m_tips = (this.getChildAt(6));
        this.m_t0 = this.getTransitionAt(0);
        this.m_t1 = this.getTransitionAt(1);
    };
    fui_Circle.URL = "ui://130tmfxdq0800";
    return fui_Circle;
}(fairygui.GComponent));
exports.default = fui_Circle;
},{}],120:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_CloseBtn = /** @class */ (function (_super) {
    __extends(fui_CloseBtn, _super);
    function fui_CloseBtn() {
        return _super.call(this) || this;
    }
    fui_CloseBtn.createInstance = function () {
        return (fairygui.UIPackage.createObject("System", "CloseBtn"));
    };
    fui_CloseBtn.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_bg = (this.getChildAt(0));
    };
    fui_CloseBtn.URL = "ui://130tmfxdq080l";
    return fui_CloseBtn;
}(fairygui.GButton));
exports.default = fui_CloseBtn;
},{}],121:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_GeneralBtn = /** @class */ (function (_super) {
    __extends(fui_GeneralBtn, _super);
    function fui_GeneralBtn() {
        return _super.call(this) || this;
    }
    fui_GeneralBtn.createInstance = function () {
        return (fairygui.UIPackage.createObject("System", "GeneralBtn"));
    };
    fui_GeneralBtn.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_bgColor = this.getControllerAt(1);
    };
    fui_GeneralBtn.URL = "ui://130tmfxdq080m";
    return fui_GeneralBtn;
}(fairygui.GButton));
exports.default = fui_GeneralBtn;
},{}],122:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_GuideLayer = /** @class */ (function (_super) {
    __extends(fui_GuideLayer, _super);
    function fui_GuideLayer() {
        return _super.call(this) || this;
    }
    fui_GuideLayer.createInstance = function () {
        return (fairygui.UIPackage.createObject("System", "GuideLayer"));
    };
    fui_GuideLayer.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_window = (this.getChildAt(1));
    };
    fui_GuideLayer.URL = "ui://130tmfxdopk1p";
    return fui_GuideLayer;
}(fairygui.GComponent));
exports.default = fui_GuideLayer;
},{}],123:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_OkBtn = /** @class */ (function (_super) {
    __extends(fui_OkBtn, _super);
    function fui_OkBtn() {
        return _super.call(this) || this;
    }
    fui_OkBtn.createInstance = function () {
        return (fairygui.UIPackage.createObject("System", "OkBtn"));
    };
    fui_OkBtn.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_bg = (this.getChildAt(0));
    };
    fui_OkBtn.URL = "ui://130tmfxdq080e";
    return fui_OkBtn;
}(fairygui.GButton));
exports.default = fui_OkBtn;
},{}],124:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_PopupMenu = /** @class */ (function (_super) {
    __extends(fui_PopupMenu, _super);
    function fui_PopupMenu() {
        return _super.call(this) || this;
    }
    fui_PopupMenu.createInstance = function () {
        return (fairygui.UIPackage.createObject("System", "PopupMenu"));
    };
    fui_PopupMenu.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_popType = this.getControllerAt(0);
        this.m_tip = (this.getChildAt(1));
    };
    fui_PopupMenu.URL = "ui://130tmfxdnvpox";
    return fui_PopupMenu;
}(fairygui.GComponent));
exports.default = fui_PopupMenu;
},{}],125:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_ScrollTxt = /** @class */ (function (_super) {
    __extends(fui_ScrollTxt, _super);
    function fui_ScrollTxt() {
        return _super.call(this) || this;
    }
    fui_ScrollTxt.createInstance = function () {
        return (fairygui.UIPackage.createObject("System", "ScrollTxt"));
    };
    fui_ScrollTxt.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_gloader = (this.getChildAt(0));
    };
    fui_ScrollTxt.URL = "ui://130tmfxdq080f";
    return fui_ScrollTxt;
}(fairygui.GLabel));
exports.default = fui_ScrollTxt;
},{}],126:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_TipWin = /** @class */ (function (_super) {
    __extends(fui_TipWin, _super);
    function fui_TipWin() {
        return _super.call(this) || this;
    }
    fui_TipWin.createInstance = function () {
        return (fairygui.UIPackage.createObject("System", "TipWin"));
    };
    fui_TipWin.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_c1 = this.getControllerAt(0);
        this.m_scrollTxt = (this.getChildAt(1));
        this.m_list = (this.getChildAt(2));
        this.m_ok = (this.getChildAt(3));
    };
    fui_TipWin.URL = "ui://130tmfxdq080d";
    return fui_TipWin;
}(fairygui.GComponent));
exports.default = fui_TipWin;
},{}],127:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_TotalMessage = /** @class */ (function (_super) {
    __extends(fui_TotalMessage, _super);
    function fui_TotalMessage() {
        return _super.call(this) || this;
    }
    fui_TotalMessage.createInstance = function () {
        return (fairygui.UIPackage.createObject("System", "TotalMessage"));
    };
    fui_TotalMessage.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_topTitle = (this.getChildAt(0));
        this.m_moveTtitle = (this.getChildAt(1));
        this.m_top = this.getTransitionAt(0);
        this.m_move = this.getTransitionAt(1);
    };
    fui_TotalMessage.URL = "ui://130tmfxdq0808";
    return fui_TotalMessage;
}(fairygui.GComponent));
exports.default = fui_TotalMessage;
},{}],128:[function(require,module,exports){
"use strict";
/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", { value: true });
var fui_winBtn = /** @class */ (function (_super) {
    __extends(fui_winBtn, _super);
    function fui_winBtn() {
        return _super.call(this) || this;
    }
    fui_winBtn.createInstance = function () {
        return (fairygui.UIPackage.createObject("System", "winBtn"));
    };
    fui_winBtn.prototype.constructFromXML = function (xml) {
        _super.prototype.constructFromXML.call(this, xml);
        this.m_icons = (this.getChildAt(0));
    };
    fui_winBtn.URL = "ui://130tmfxdngrsz";
    return fui_winBtn;
}(fairygui.GButton));
exports.default = fui_winBtn;
},{}],129:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * fgui 包名称
 */
var GuiPackageNames = /** @class */ (function () {
    function GuiPackageNames() {
    }
    GuiPackageNames.Arrangement = "Arrangement";
    GuiPackageNames.Bag = "Bag";
    GuiPackageNames.Battle = "Battle";
    GuiPackageNames.FSprite = "FSprite";
    GuiPackageNames.GM = "GM";
    GuiPackageNames.Home = "Home";
    GuiPackageNames.Menus = "Menus";
    GuiPackageNames.Sound = "Sound";
    GuiPackageNames.System = "System";
    return GuiPackageNames;
}());
exports.default = GuiPackageNames;
},{}],130:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var FGUIResPackageConfig_1 = require("./FGUIResPackageConfig");
var LoadFgui = /** @class */ (function () {
    function LoadFgui() {
    }
    LoadFgui.install = function () {
        FGUIResPackageConfig_1.default.install();
        // 设置fgui文件后缀
        fairygui.UIConfig.packageFileExtension = "bin";
    };
    return LoadFgui;
}());
exports.default = LoadFgui;
},{"./FGUIResPackageConfig":85}],131:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Loader = laya.net.Loader;
var Fun_1 = require("../Tool/Fun");
var ResPackageConfig = /** @class */ (function () {
    function ResPackageConfig() {
        // atlasX.png
        this.resAtlas = [];
        // sound
        this.resSounds = [];
    }
    Object.defineProperty(ResPackageConfig.prototype, "loadList", {
        get: function () {
            if (!this._loadList) {
                var list = [];
                list.push({ url: Fun_1.default.getResPath(this.resBin, this.resDir), type: Loader.BUFFER });
                if (this.resAtlas) {
                    for (var i = 0; i < this.resAtlas.length; i++) {
                        list.push({ url: Fun_1.default.getResPath(this.resAtlas[i], this.resDir), type: Loader.IMAGE });
                    }
                }
                if (this.resSounds) {
                    for (var i = 0; i < this.resSounds.length; i++) {
                        list.push({ url: Fun_1.default.getResPath(this.resSounds[i], this.resDir), type: Loader.SOUND });
                    }
                }
                this._loadList = list;
            }
            return this._loadList;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ResPackageConfig.prototype, "packagePath", {
        get: function () {
            return Fun_1.default.getResPath(this.packageName, this.resDir);
        },
        enumerable: true,
        configurable: true
    });
    return ResPackageConfig;
}());
exports.default = ResPackageConfig;
},{"../Tool/Fun":8}],132:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Fun_1 = require("../Tool/Fun");
var Dictionary_1 = require("../Tool/Dictionary");
var SoundKey = /** @class */ (function () {
    function SoundKey() {
    }
    Object.defineProperty(SoundKey, "idDict", {
        get: function () {
            if (!SoundKey._idDict) {
                SoundKey.init();
            }
            return SoundKey._idDict;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SoundKey, "extDict", {
        get: function () {
            if (!SoundKey._extDict) {
                SoundKey.init();
            }
            return SoundKey._extDict;
        },
        enumerable: true,
        configurable: true
    });
    SoundKey.getId = function (key) {
        if (!SoundKey.idDict.hasKey(key)) {
            console.error('SoundKey 不存在 key=' + key);
            return '';
        }
        return SoundKey.idDict.getValue(key);
    };
    SoundKey.getUrl = function (key) {
        return "ui://" + SoundKey.SoundPackageId + SoundKey.getId(key);
    };
    SoundKey.getPath = function (key) {
        return Fun_1.default.getResPath(SoundKey.SoundPackageName + "_" + SoundKey.getId(key) + SoundKey.extDict.getValue(key), 'fgui');
    };
    SoundKey.init = function () {
        var dict = SoundKey._idDict = new Dictionary_1.default();
        dict.add("click.mp3", "q0800");
        dict.add("bgm_1.mp3", "jx3y1");
        var exts = SoundKey._extDict = new Dictionary_1.default();
        exts.add("click.mp3", ".mp3");
        exts.add("bgm_1.mp3", ".mp3");
    };
    SoundKey.SoundPackageName = "Sound";
    SoundKey.SoundPackageId = "32bbq6lk";
    SoundKey.click = "click.mp3";
    SoundKey.bgm_1 = "bgm_1.mp3";
    return SoundKey;
}());
exports.default = SoundKey;
},{"../Tool/Dictionary":5,"../Tool/Fun":8}],133:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Fun_1 = require("../Tool/Fun");
var Dictionary_1 = require("../Tool/Dictionary");
var SpriteKey = /** @class */ (function () {
    function SpriteKey() {
    }
    Object.defineProperty(SpriteKey, "idDict", {
        get: function () {
            if (!SpriteKey._idDict) {
                SpriteKey.init();
            }
            return SpriteKey._idDict;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SpriteKey, "extDict", {
        get: function () {
            if (!SpriteKey._extDict) {
                SpriteKey.init();
            }
            return SpriteKey._extDict;
        },
        enumerable: true,
        configurable: true
    });
    SpriteKey.getId = function (key) {
        if (!SpriteKey.idDict.hasKey(key)) {
            console.error('SpriteKey 不存在 key=' + key);
            return '';
        }
        return SpriteKey.idDict.getValue(key);
    };
    SpriteKey.getUrl = function (key) {
        return "ui://" + SpriteKey.SoundPackageId + SpriteKey.getId(key);
    };
    SpriteKey.getPath = function (key) {
        return Fun_1.default.getResPath(SpriteKey.SoundPackageName + "_" + SpriteKey.getId(key) + SpriteKey.extDict.getValue(key), 'fgui');
    };
    SpriteKey.init = function () {
        var dict = SpriteKey._idDict = new Dictionary_1.default();
        dict.add("icon_1001.png", "9v6l0");
        dict.add("icon_1002.png", "9v6l1");
        dict.add("icon_1003.png", "9v6l2");
        dict.add("icon_1005.png", "9v6l3");
        dict.add("icon_1006.png", "9v6l4");
        dict.add("icon_1007.png", "9v6l5");
        dict.add("icon_1012.png", "9v6l6");
        dict.add("1.png", "udz47");
        dict.add("2.png", "udz48");
        dict.add("3.png", "udz49");
        dict.add("4.png", "udz4a");
        var exts = SpriteKey._extDict = new Dictionary_1.default();
        exts.add("icon_1001.png", ".png");
        exts.add("icon_1002.png", ".png");
        exts.add("icon_1003.png", ".png");
        exts.add("icon_1005.png", ".png");
        exts.add("icon_1006.png", ".png");
        exts.add("icon_1007.png", ".png");
        exts.add("icon_1012.png", ".png");
        exts.add("1.png", ".png");
        exts.add("2.png", ".png");
        exts.add("3.png", ".png");
        exts.add("4.png", ".png");
    };
    SpriteKey.SoundPackageName = "FSprite";
    SpriteKey.SoundPackageId = "88du1wab";
    SpriteKey.icon_1001 = "icon_1001.png";
    SpriteKey.icon_1002 = "icon_1002.png";
    SpriteKey.icon_1003 = "icon_1003.png";
    SpriteKey.icon_1005 = "icon_1005.png";
    SpriteKey.icon_1006 = "icon_1006.png";
    SpriteKey.icon_1007 = "icon_1007.png";
    SpriteKey.icon_1012 = "icon_1012.png";
    SpriteKey[1] = "1.png";
    SpriteKey[2] = "2.png";
    SpriteKey[3] = "3.png";
    SpriteKey[4] = "4.png";
    return SpriteKey;
}());
exports.default = SpriteKey;
},{"../Tool/Dictionary":5,"../Tool/Fun":8}],134:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameStatus;
(function (GameStatus) {
    GameStatus[GameStatus["Load"] = 0] = "Load";
    GameStatus[GameStatus["Gaming"] = 1] = "Gaming";
    GameStatus[GameStatus["Pause"] = 2] = "Pause";
    GameStatus[GameStatus["Win"] = 3] = "Win";
    GameStatus[GameStatus["Failed"] = 4] = "Failed";
})(GameStatus = exports.GameStatus || (exports.GameStatus = {}));
},{}],135:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HeroAniEnums;
(function (HeroAniEnums) {
    HeroAniEnums["None"] = "none";
    HeroAniEnums["Stand"] = "stand";
    HeroAniEnums["Sign"] = "sign";
    HeroAniEnums["Attack"] = "attack";
    HeroAniEnums["Skill"] = "skill";
    HeroAniEnums["Stun"] = "stun";
    HeroAniEnums["Death"] = "death";
    HeroAniEnums["Move"] = "move";
})(HeroAniEnums = exports.HeroAniEnums || (exports.HeroAniEnums = {}));
},{}],136:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MenuLayerType;
(function (MenuLayerType) {
    // 主界面
    MenuLayerType[MenuLayerType["Home"] = 1] = "Home";
    // 主界面 上一层
    MenuLayerType[MenuLayerType["HomeTop"] = 2] = "HomeTop";
    // 模块
    MenuLayerType[MenuLayerType["Module"] = 3] = "Module";
    // 主UI
    MenuLayerType[MenuLayerType["MainUI"] = 4] = "MainUI";
    // 对话框
    MenuLayerType[MenuLayerType["Dialog"] = 5] = "Dialog";
    // 引导
    MenuLayerType[MenuLayerType["Guide"] = 6] = "Guide";
    // 浮动对话框
    MenuLayerType[MenuLayerType["FloatMsg"] = 7] = "FloatMsg";
    // 加载面板
    MenuLayerType[MenuLayerType["Loader"] = 8] = "Loader";
})(MenuLayerType = exports.MenuLayerType || (exports.MenuLayerType = {}));
},{}],137:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Association = /** @class */ (function () {
    function Association() {
        this._hero = [];
        this._career = 0;
        this._race = 0;
    }
    Object.defineProperty(Association.prototype, "names", {
        get: function () {
            return this._names;
        },
        set: function (v) {
            this._names = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Association.prototype, "num", {
        get: function () {
            return this._num;
        },
        set: function (v) {
            this._num = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Association.prototype, "hero", {
        get: function () {
            return this._hero;
        },
        set: function (v) {
            this._hero = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Association.prototype, "career", {
        get: function () {
            return this._career;
        },
        set: function (v) {
            this._career = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Association.prototype, "race", {
        get: function () {
            return this._race;
        },
        set: function (v) {
            this._race = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Association.prototype, "attribute_id", {
        get: function () {
            return this._attribute_id;
        },
        set: function (v) {
            this._attribute_id = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Association.prototype, "values", {
        get: function () {
            return this._values;
        },
        set: function (v) {
            this._values = v;
        },
        enumerable: true,
        configurable: true
    });
    return Association;
}());
exports.default = Association;
},{}],138:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventManager_1 = require("../../Tool/EventManager");
var EventKey_1 = require("../../Tool/EventKey");
var Game_1 = require("../../Game");
var GameStatus_1 = require("../DataEnums/GameStatus");
var HeroInfo_1 = require("../../dataInfo/HeroInfo");
var Association_1 = require("./Association");
var Dictionary_1 = require("../../Tool/Dictionary");
var AssociationRaceInfo_1 = require("../../dataInfo/AssociationRaceInfo");
var FiveElementsInfo_1 = require("../../dataInfo/FiveElementsInfo");
var AssociationCareerInfo_1 = require("../../dataInfo/AssociationCareerInfo");
var EnemyData_1 = require("./EnemyData");
var Signal_1 = require("../../Tool/Signal");
var BattleData = /** @class */ (function () {
    function BattleData() {
        this.countdown = new Signal_1.default();
        /*******************英雄相关**************************/
        this._startDrag = false;
        // 当前拖拽中的英雄信息
        this._heroInf = null;
        // 当前拖拽中的英雄在阵上那个点
        this._seatPos = -1;
        // 拖拽前的按钮
        this._seatBtn = null;
        // 当前显示那个英雄详情 -- 打开英雄详情时调用
        this._clickHeroInf = null;
        // 当前展示那个羁绊信息 --- 点击推荐羁绊时使用
        this._association = null;
        /*******************敌人相关**************************/
        /*******************玩家操作相关**************************/
        // 玩家技能
        this.map_skills = [1, 2, 3];
        // 关卡id
        this.level_id = 1;
        // 战斗类型 0：闯关，1：试炼，2：探索
        this.fight_type = 0;
        // 地图
        this.play_map = 1;
        // 关卡
        this.play_level = 1;
        // 试炼第几小关
        this.trial_level = 0;
        /*******************战斗结果相关**************************/
        this.fight_result = [];
    }
    Object.defineProperty(BattleData, "Instance", {
        get: function () {
            if (!BattleData._Instance) {
                BattleData._Instance = new BattleData();
            }
            return BattleData._Instance;
        },
        enumerable: true,
        configurable: true
    });
    BattleData.prototype.init = function () {
        EventManager_1.default.on(EventKey_1.default.MAP_REFRUSH, this, this.mapRefrush);
        EventManager_1.default.on(EventKey_1.default.GAMEWIN, this, this.mapStopRefrush, [1]);
        EventManager_1.default.on(EventKey_1.default.GAMELOSE, this, this.mapStopRefrush, [2]);
        EventManager_1.default.on(EventKey_1.default.GAMEEXIT, this, this.mapStopRefrush, [0]);
    };
    /*******************关卡相关**************************/
    BattleData.prototype.mapRefrush = function () {
        EventManager_1.default.on(EventKey_1.default.ENTER_FRAME, this, this.update);
    };
    BattleData.prototype.mapStopRefrush = function (v) {
        EventManager_1.default.off(EventKey_1.default.ENTER_FRAME, this, this.update);
    };
    BattleData.prototype.update = function () {
        if (Game_1.default.gameStatus != GameStatus_1.GameStatus.Gaming)
            return;
        var dt = Laya.timer.delta * 0.001;
        Game_1.default.battleMap.curTime += dt;
        this.countdown.dispatch();
        if (Game_1.default.battleMap.curTime < Game_1.default.battleMap.waveTime) {
            if (Game_1.default.battleMap.curTime >= Game_1.default.battleMap.nextCD) {
                Game_1.default.battleMap.enemyInf();
                var dataInf = new EnemyData_1.default();
                dataInf.monsterInf = Game_1.default.battleMap.nextMonster;
                Game_1.default.battleScene.createEnemy(Game_1.default.battleMap.levelWave % 2, false, dataInf);
                if (Game_1.default.battleMap.bossInfo != null) {
                    var dataInf2 = new EnemyData_1.default();
                    dataInf2.monsterInf = Game_1.default.battleMap.bossInfo;
                    Game_1.default.battleScene.createEnemy(Game_1.default.battleMap.levelWave % 2, true, dataInf2);
                }
            }
        }
        else {
            if (Game_1.default.battleScene.enemyList.length == 0) {
                if (Game_1.default.battleMap.curTime >= Game_1.default.battleMap.waveTime + 2) {
                    EventManager_1.default.event(EventKey_1.default.GAMEWIN);
                }
            }
        }
    };
    Object.defineProperty(BattleData.prototype, "startDrag", {
        get: function () {
            return this._startDrag;
        },
        set: function (v) {
            this._startDrag = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BattleData.prototype, "heroInf", {
        get: function () {
            return this._heroInf;
        },
        set: function (v) {
            this._heroInf = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BattleData.prototype, "seatPos", {
        get: function () {
            return this._seatPos;
        },
        set: function (v) {
            this._seatPos = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BattleData.prototype, "seatBtn", {
        get: function () {
            return this._seatBtn;
        },
        set: function (v) {
            this._seatBtn = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BattleData.prototype, "clickHeroInf", {
        get: function () {
            return this._clickHeroInf;
        },
        set: function (v) {
            this._clickHeroInf = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BattleData.prototype, "association", {
        get: function () {
            return this._association;
        },
        set: function (v) {
            this._association = v;
        },
        enumerable: true,
        configurable: true
    });
    // 刷新当前阵型上阵英雄的羁绊信息
    BattleData.prototype.refrushAssociation = function () {
        var association = [];
        var dic = Game_1.default.battleScene.seatHeroDic.getValue(Game_1.default.battleScene.seatHeroSelect);
        var seatList = dic.getValues();
        var raceDic = new Dictionary_1.default();
        var careerDic = new Dictionary_1.default();
        // 各位置英雄判断
        for (var i = 0; i < 9; i++) {
            if (seatList[i] > 0) {
                var hero = HeroInfo_1.default.getInfo(seatList[i]);
                var race = hero.race;
                var career = hero.career;
                if (!raceDic.hasKey(race)) {
                    raceDic.add(race, 0);
                }
                var raceNum = raceDic.getValue(race) + 1;
                raceDic.set(race, raceNum);
                if (!careerDic.hasKey(career)) {
                    careerDic.add(career, 0);
                }
                var careeNum = careerDic.getValue(career) + 1;
                careerDic.set(career, careeNum);
            }
        }
        // 判断羁绊
        if (raceDic.count > 0) {
            // 种族
            var races = raceDic.getKeys();
            var racelist = AssociationRaceInfo_1.default.getList();
            var temraceList = new Dictionary_1.default();
            for (var i = 0, len = racelist.length; i < len; i++) {
                var temRace = racelist[i].race;
                if (races.indexOf(String(temRace)) != -1) {
                    if (racelist[i].num <= raceDic.getValue(temRace)) {
                        if (temraceList.hasKey(temRace)) {
                            var val = temraceList.getValue(temRace);
                            if (racelist[i].num > val.num) {
                                temraceList.add(racelist[i].race, racelist[i]);
                            }
                        }
                        else {
                            temraceList.add(racelist[i].race, racelist[i]);
                        }
                    }
                }
            }
            if (temraceList.count > 0) {
                var valList = temraceList.getValues();
                for (var i = 0, len = valList.length; i < len; i++) {
                    var _ass = new Association_1.default();
                    _ass.num = valList[i].num;
                    _ass.attribute_id = valList[i].attribute;
                    _ass.values = valList[i].value;
                    _ass.race = valList[i].race;
                    _ass.names = FiveElementsInfo_1.default.getInfoWithType(_ass.race).name;
                    association.push(_ass);
                }
            }
        }
        if (careerDic.count > 0) {
            // 职业
            var races = careerDic.getKeys();
            var racelist = AssociationCareerInfo_1.default.getList();
            var temraceList = new Dictionary_1.default();
            for (var i = 0, len = racelist.length; i < len; i++) {
                var temRace = racelist[i].career;
                if (races.indexOf(String(temRace)) != -1) {
                    if (racelist[i].num <= careerDic.getValue(temRace)) {
                        if (temraceList.hasKey(temRace)) {
                            var val = temraceList.getValue(temRace);
                            if (racelist[i].num > val.num) {
                                temraceList.add(racelist[i].career, racelist[i]);
                            }
                        }
                        else {
                            temraceList.add(racelist[i].career, racelist[i]);
                        }
                    }
                }
            }
            if (temraceList.count > 0) {
                var valList = temraceList.getValues();
                for (var i = 0, len = valList.length; i < len; i++) {
                    var _ass = new Association_1.default();
                    _ass.num = valList[i].num;
                    _ass.attribute_id = valList[i].attribute;
                    _ass.values = valList[i].value;
                    _ass.career = valList[i].career;
                    _ass.names = FiveElementsInfo_1.default.getInfoWithType(_ass.career).name;
                    association.push(_ass);
                }
            }
        }
        return association;
    };
    return BattleData;
}());
exports.default = BattleData;
},{"../../Game":1,"../../Tool/Dictionary":5,"../../Tool/EventKey":6,"../../Tool/EventManager":7,"../../Tool/Signal":15,"../../dataInfo/AssociationCareerInfo":24,"../../dataInfo/AssociationRaceInfo":25,"../../dataInfo/FiveElementsInfo":29,"../../dataInfo/HeroInfo":30,"../DataEnums/GameStatus":134,"./Association":137,"./EnemyData":140}],139:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventManager_1 = require("../../Tool/EventManager");
var EventKey_1 = require("../../Tool/EventKey");
var Dictionary_1 = require("../../Tool/Dictionary");
var WaveformInfo_1 = require("../../dataInfo/WaveformInfo");
var HeroTypeInfo_1 = require("../../dataInfo/HeroTypeInfo");
var DifficultyEfficiencyInfo_1 = require("../../dataInfo/DifficultyEfficiencyInfo");
var MonsterInfo_1 = require("../../dataInfo/MonsterInfo");
var WaveInfo_1 = require("../../dataInfo/WaveInfo");
var MathRandom_1 = require("../../Tool/MathRandom");
var TimeHouseInfo_1 = require("../../dataInfo/TimeHouseInfo");
var WaveStatus_1 = require("./WaveStatus");
var Game_1 = require("../../Game");
var GameStatus_1 = require("../DataEnums/GameStatus");
var BattleMap = /** @class */ (function () {
    function BattleMap() {
        // 关卡状态字典
        this.waveStatusDict = new Dictionary_1.default();
        // 当前地图    
        this._curMap = 1;
        // 最大地图  id 
        this._maxMapId = 1;
        // 关卡波次（当前关卡第几个敌人）
        this._levelWave = 0;
        // 关卡信息
        this.waveInfo = null;
        // 关卡类型
        this.waveType = 0;
        // 基准攻速
        this.benchAtkSpeed = 0;
        // 基准攻击力
        this.benchMarkAtk = 0;
        // 曲线类型
        this.waveform = [];
        // 随机种子
        this.mathrandom1 = null;
        this.bossDic = new Dictionary_1.default();
        // 下一个敌人到来的cd
        this._nextCD = 0;
        // 当前关卡过去了多长时间
        this._curTime = 0;
    }
    Object.defineProperty(BattleMap, "Instance", {
        get: function () {
            if (!BattleMap._Instance) {
                BattleMap._Instance = new BattleMap();
            }
            return BattleMap._Instance;
        },
        enumerable: true,
        configurable: true
    });
    BattleMap.prototype.init = function (json) {
        var maxId = 0;
        var len = json.length;
        if (len > 0) {
            for (var i = 0; i < len; i++) {
                var item = json[i];
                if (maxId < item.id) {
                    maxId = item.id;
                }
                var wavestatus = new WaveStatus_1.default();
                wavestatus.id = item.id;
                wavestatus.level = item.level;
                wavestatus.time = item.time;
                this.waveStatusDict.add(item.id, wavestatus);
            }
        }
        // 第一次进入关卡
        if (maxId == 0) {
            var curwaveinf = WaveInfo_1.default.getInfo(1);
            this.maxMapId = curwaveinf.id;
        }
        else {
            var curwaveinf = WaveInfo_1.default.getInfo(maxId);
            var waveinf = WaveInfo_1.default.getInfo(maxId + 1);
            if (waveinf) {
                this.maxMapId = waveinf.id;
            }
            else {
                // 已通关
                this.maxMapId = curwaveinf.id;
            }
        }
    };
    Object.defineProperty(BattleMap.prototype, "curMap", {
        get: function () {
            return this._curMap;
        },
        set: function (v) {
            this._curMap = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BattleMap.prototype, "maxMapId", {
        get: function () {
            return this._maxMapId;
        },
        set: function (v) {
            this._maxMapId = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BattleMap.prototype, "levelWave", {
        get: function () {
            return this._levelWave;
        },
        set: function (v) {
            this._levelWave = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BattleMap.prototype, "maxWave", {
        get: function () {
            return this._maxWave;
        },
        set: function (v) {
            this._maxWave = v;
        },
        enumerable: true,
        configurable: true
    });
    BattleMap.prototype.openMap = function () {
        var curwaveinf = WaveInfo_1.default.getInfo(Game_1.default.battleData.level_id);
        if (curwaveinf) {
            this.curMap = curwaveinf.map;
            this.levelWave = 0;
            this.setwaveInf(Game_1.default.battleData.level_id);
            EventManager_1.default.event(EventKey_1.default.MAP_REFRUSH);
            Game_1.default.gameStatus = GameStatus_1.GameStatus.Gaming;
            Game_1.default.gm.setGmInf("挑战胜利", Laya.Handler.create(this, this.levelWin, null, false));
            Game_1.default.gm.setGmInf("挑战失败", Laya.Handler.create(this, this.levelLose, null, false));
        }
        else {
            Game_1.default.tipWin.showTip("无法进入，未知的关卡信息");
        }
    };
    BattleMap.prototype.levelWin = function () {
        EventManager_1.default.event(EventKey_1.default.GAMEWIN);
    };
    BattleMap.prototype.levelLose = function () {
        EventManager_1.default.event(EventKey_1.default.GAMELOSE);
    };
    /*******************怪物生成规则***********************/
    BattleMap.prototype.setwaveInf = function (v) {
        // 关卡
        this.waveInfo = WaveInfo_1.default.getInfo(v);
        // 类型
        this.waveType = this.waveInfo.type;
        // 难度
        var _difficulty = this.waveInfo.difficulty;
        // 曲线系数
        this.waveform = WaveformInfo_1.default.getInfoWithType(this.waveInfo.waveform); // this.waveInfo.waveform;
        // 随机种子
        var seed1 = this.waveInfo.random;
        // 关卡时长
        this.waveTime = this.waveInfo.time;
        // 难度效率
        var _difEfficiency = 0;
        var _difList = DifficultyEfficiencyInfo_1.default.getList();
        for (var i = _difList.length - 1; i >= 0; i--) {
            if (_difList[i].difficulty == _difficulty) {
                _difEfficiency = _difList[i].val;
            }
        }
        var _heroTypeInf = HeroTypeInfo_1.default.getInfo(this.waveType);
        // 基准攻速
        this.benchAtkSpeed = _heroTypeInf.bench_atk_speed * _difEfficiency;
        // 基准攻击力
        this.benchMarkAtk = _heroTypeInf.benchmark_atk * _difEfficiency;
        this.mathrandom1 = new MathRandom_1.default(seed1);
        // 时间与精神房子
        this.timeHouse = TimeHouseInfo_1.default.getInfoLv(this.waveInfo.lv);
        var tt = Math.floor(this.timeHouse.lv % 10);
        if (tt < 0)
            tt = 0;
        if (tt > 10)
            tt = 10;
        this.timeHouseVal = this.timeHouse.vals[tt];
        this.nextCD = 0;
        this.curTime = 0;
        this.bossDic.clear();
    };
    Object.defineProperty(BattleMap.prototype, "waveTime", {
        get: function () {
            return this._waveTime;
        },
        set: function (v) {
            this._waveTime = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BattleMap.prototype, "nextMonster", {
        get: function () {
            return this._nextMonster;
        },
        set: function (v) {
            this._nextMonster = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BattleMap.prototype, "timeHouse", {
        get: function () {
            return this._timeHouse;
        },
        set: function (v) {
            this._timeHouse = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BattleMap.prototype, "timeHouseVal", {
        get: function () {
            return this._timeHouseVal;
        },
        set: function (v) {
            this._timeHouseVal = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BattleMap.prototype, "bossInfo", {
        get: function () {
            return this._bossInfo;
        },
        set: function (v) {
            this._bossInfo = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BattleMap.prototype, "nextCD", {
        get: function () {
            return this._nextCD;
        },
        set: function (v) {
            this._nextCD = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BattleMap.prototype, "curTime", {
        get: function () {
            return this._curTime;
        },
        set: function (v) {
            this._curTime = v;
        },
        enumerable: true,
        configurable: true
    });
    // 获取下一个敌人的信息
    BattleMap.prototype.enemyInf = function () {
        this.nextMonster = null;
        this.bossInfo = null;
        var infList = MonsterInfo_1.default.getList();
        var list = [];
        var listBoss = [];
        for (var i = infList.length - 1; i >= 0; i--) {
            if (infList[i].type == this.waveType) {
                // 适用关卡判断
                var bigWave = infList[i].big_wave.toString();
                var canAdd = false;
                for (var k = bigWave.length - 1; k >= 0; k--) {
                    if (this.curMap == Number(bigWave[k])) {
                        canAdd = true;
                        break;
                    }
                }
                if (canAdd) {
                    if (infList[i].boss == 1) {
                        listBoss.push(infList[i]);
                    }
                    else {
                        list.push(infList[i]);
                    }
                }
            }
        }
        if (list.length > 0) {
            this.nextMonster = list[Math.floor(this.mathrandom1.random(list.length))]; // 
        }
        else {
            console.log("敌人刷新完毕");
            this.nextCD = this.curTime * 100;
            return;
        }
        if (this.nextMonster != null) {
            this.levelWave++;
            var curTimePeriod = Math.floor(this.waveTime / 10);
            for (var i = 9; i >= 0; i--) {
                if (this.curTime >= curTimePeriod * i) {
                    var _waveform1 = void 0;
                    var _waveform2 = void 0;
                    for (var ll = this.waveform.length - 1; ll >= 0; ll--) {
                        if (this.waveform[ll].index == i) {
                            _waveform1 = this.waveform[ll];
                        }
                        else if (this.waveform[ll].index == i + 1) {
                            _waveform2 = this.waveform[ll];
                        }
                    }
                    var _xiaolv = _waveform1.waveform + (_waveform2.waveform - _waveform1.waveform) * (this.curTime - curTimePeriod * i) / 10;
                    // 是否创建boss判断
                    var bossNum = _waveform1.boss;
                    if (bossNum > 0 && listBoss.length > 0) {
                        var dicNum = 0;
                        if (this.bossDic.hasKey(i)) {
                            dicNum = this.bossDic.getValue(i);
                        }
                        if (bossNum > dicNum) {
                            dicNum++;
                            this.bossDic.set(i, dicNum);
                            // 生成一个boss
                            this.bossInfo = listBoss[Math.floor(this.mathrandom1.random(listBoss.length))];
                        }
                    }
                    // 攻速判断
                    if (this.waveType == 1 || this.waveType == 2 || this.waveType == 3) {
                        // 最大攻速
                        var atkSpeed = this.benchAtkSpeed * _xiaolv;
                        var remain = this.nextMonster.base_num / atkSpeed;
                        remain = remain < 0.5 ? 0.5 : remain;
                        this.nextCD = this.curTime + remain;
                    }
                    // 攻击判断
                    else {
                        var atkMark = this.benchMarkAtk * _xiaolv;
                        var remain = Number(this.nextMonster.base_hp) / atkMark;
                        this.nextCD = this.curTime + remain;
                    }
                    break;
                }
            }
        }
    };
    return BattleMap;
}());
exports.default = BattleMap;
},{"../../Game":1,"../../Tool/Dictionary":5,"../../Tool/EventKey":6,"../../Tool/EventManager":7,"../../Tool/MathRandom":11,"../../dataInfo/DifficultyEfficiencyInfo":28,"../../dataInfo/HeroTypeInfo":31,"../../dataInfo/MonsterInfo":32,"../../dataInfo/TimeHouseInfo":38,"../../dataInfo/WaveInfo":40,"../../dataInfo/WaveformInfo":41,"../DataEnums/GameStatus":134,"./WaveStatus":147}],140:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../../Game");
var EnemyData = /** @class */ (function () {
    function EnemyData() {
        // 敌人模型id
        this._skId = 1;
        // 分裂次数
        this._splits = 0;
        // 复活次数
        this._resurrection = 0;
        // 当前开启下一列的点的位置
        this._curStarIndex = 0;
        // 上一列开启下一列的点的位置
        this._preStarIndex = 0;
        // 当前移动点
        this._curMoveIndex = 0;
        // 当前处于那一列
        this._curMoveX = -1;
        // 当前血量
        this._curHp = 0;
        // 最大血量
        this._maxHp = 1;
    }
    Object.defineProperty(EnemyData.prototype, "monsterInf", {
        get: function () {
            return this._monsterInf;
        },
        set: function (v) {
            this._monsterInf = v;
            this.splits = this._monsterInf.split;
            this.resurrection = this._monsterInf.resurrection;
            this.curHp = this._monsterInf.hp * Game_1.default.battleMap.timeHouseVal;
            this.maxHp = this.curHp;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EnemyData.prototype, "skId", {
        get: function () {
            return this._skId;
        },
        set: function (v) {
            this._skId = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EnemyData.prototype, "splits", {
        get: function () {
            return this._splits;
        },
        set: function (v) {
            this._splits = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EnemyData.prototype, "resurrection", {
        get: function () {
            return this._resurrection;
        },
        set: function (v) {
            this._resurrection = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EnemyData.prototype, "curStarIndex", {
        get: function () {
            return this._curStarIndex;
        },
        set: function (v) {
            this._curStarIndex = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EnemyData.prototype, "preStarIndex", {
        get: function () {
            return this._preStarIndex;
        },
        set: function (v) {
            this._preStarIndex = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EnemyData.prototype, "curMoveIndex", {
        get: function () {
            return this._curMoveIndex;
        },
        set: function (v) {
            this._curMoveIndex = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EnemyData.prototype, "curMoveX", {
        get: function () {
            return this._curMoveX;
        },
        set: function (v) {
            this._curMoveX = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EnemyData.prototype, "movePath", {
        get: function () {
            return this._movePath;
        },
        set: function (v) {
            this._movePath = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EnemyData.prototype, "curHp", {
        get: function () {
            return this._curHp;
        },
        set: function (v) {
            if (v < 0)
                v = 0;
            this._curHp = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EnemyData.prototype, "maxHp", {
        get: function () {
            return this._maxHp;
        },
        set: function (v) {
            this._maxHp = v;
            if (this._maxHp < 1)
                this._maxHp = 1;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EnemyData.prototype, "scales", {
        get: function () {
            return this._sc;
        },
        set: function (v) {
            this._sc = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EnemyData.prototype, "shadowScales", {
        get: function () {
            return this._shadowScales;
        },
        set: function (v) {
            this._shadowScales = v;
        },
        enumerable: true,
        configurable: true
    });
    // 复活敌人
    EnemyData.prototype.resurrectionEnemy = function () {
        this.resurrection--;
    };
    // 分裂发生变化的属性
    EnemyData.prototype.splitEnemy = function () {
        this.splits--;
        this.maxHp *= 0.9;
        this.curHp = this.maxHp;
        this.scales = new Laya.Point(this.scales.x * 0.9, this.scales.y * 0.9);
        this.shadowScales = new Laya.Point(this.shadowScales.x * 0.9, this.shadowScales.y * 0.9);
    };
    // 分裂敌人
    EnemyData.createSplitNew = function (old) {
        var dat = new EnemyData;
        old.splitEnemy();
        dat.monsterInf = old.monsterInf;
        dat.maxHp = old.maxHp;
        dat.curHp = old.curHp;
        dat.scales = old.scales;
        dat.shadowScales = old.shadowScales;
        dat.splits = old.splits;
        dat.resurrection = old.resurrection;
        dat.curStarIndex = old.curStarIndex;
        dat.preStarIndex = old.preStarIndex;
        dat.curMoveIndex = old.curMoveIndex;
        dat.curMoveX = old.curMoveX;
        dat.movePath = old.movePath;
        dat.skId = old.skId;
        return dat;
    };
    Object.defineProperty(EnemyData.prototype, "interval", {
        get: function () {
            return 3000;
        },
        enumerable: true,
        configurable: true
    });
    return EnemyData;
}());
exports.default = EnemyData;
},{"../../Game":1}],141:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GMData = /** @class */ (function () {
    function GMData() {
        this.tipList = [];
        this.handlerList = [];
    }
    Object.defineProperty(GMData, "Instance", {
        get: function () {
            if (!GMData._Instance) {
                GMData._Instance = new GMData();
            }
            return GMData._Instance;
        },
        enumerable: true,
        configurable: true
    });
    GMData.prototype.setGmInf = function (tip, onComplete) {
        if (this.tipList.indexOf(tip) == -1) {
            this.tipList.push(tip);
            this.handlerList.push(onComplete);
        }
    };
    return GMData;
}());
exports.default = GMData;
},{}],142:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameTimeData = /** @class */ (function () {
    function GameTimeData() {
        this._preFrame = 0;
        this._localTime = 0;
    }
    Object.defineProperty(GameTimeData.prototype, "localTime", {
        // 	本地，当前时间， unix时间戳 毫秒
        get: function () {
            if (Laya.timer.currFrame != this._preFrame) {
                this._localTime = new Date().getTime();
                this._preFrame = Laya.timer.currFrame;
            }
            return this._localTime;
        },
        enumerable: true,
        configurable: true
    });
    return GameTimeData;
}());
exports.default = GameTimeData;
},{}],143:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HeroInfo_1 = require("../../dataInfo/HeroInfo");
var HeroData = /** @class */ (function () {
    function HeroData() {
        this._skId = 1;
    }
    Object.defineProperty(HeroData.prototype, "heroInf", {
        get: function () {
            return this._heroInf;
        },
        enumerable: true,
        configurable: true
    });
    HeroData.prototype.setHeroInf = function (id) {
        this._heroInf = HeroInfo_1.default.getInfo(id);
    };
    Object.defineProperty(HeroData.prototype, "skId", {
        get: function () {
            return this._skId;
        },
        set: function (v) {
            this._skId = v;
        },
        enumerable: true,
        configurable: true
    });
    return HeroData;
}());
exports.default = HeroData;
},{"../../dataInfo/HeroInfo":30}],144:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ItemInfo = /** @class */ (function () {
    function ItemInfo() {
        /**
         * 10001 钻石
         * 10002 金币
         *
         * heroid
         */
        this.itemId = 0;
        this.itemNum = 0;
    }
    return ItemInfo;
}());
exports.default = ItemInfo;
},{}],145:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventManager_1 = require("../../Tool/EventManager");
var EventKey_1 = require("../../Tool/EventKey");
var Dictionary_1 = require("../../Tool/Dictionary");
var PlayerData = /** @class */ (function () {
    function PlayerData() {
        this._newbied = true;
        // 当前金币
        this._curGold = 0;
        // 当前翡翠
        this._curJadeite = 0;
        // 当前宝石
        this._curDiamond = 0;
        // 当前魔尘数量
        this._curMagic = 0;
        // 当前等级
        this._curStar = 0;
        // 当前星级
        this._curLevel = 0;
        // 当前英雄碎片数量
        this._curClips = new Dictionary_1.default();
        // 当前拥有的英雄
        this._curHero = [];
    }
    Object.defineProperty(PlayerData, "Instance", {
        get: function () {
            if (!PlayerData._Instance) {
                PlayerData._Instance = new PlayerData();
            }
            return PlayerData._Instance;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PlayerData.prototype, "newbie", {
        get: function () {
            return this._newbied;
        },
        set: function (v) {
            this._newbied = v;
        },
        enumerable: true,
        configurable: true
    });
    PlayerData.prototype.newbied = function () {
        console.log("新手结束");
        this._newbied = false;
        return;
    };
    Object.defineProperty(PlayerData.prototype, "curGold", {
        get: function () {
            return this._curGold;
        },
        set: function (v) {
            this._curGold = v;
            EventManager_1.default.event(EventKey_1.default.COIN_GOLD_UPDATE);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PlayerData.prototype, "curJadeite", {
        get: function () {
            return this._curJadeite;
        },
        set: function (v) {
            this._curJadeite = v;
            EventManager_1.default.event(EventKey_1.default.COIN_JADEITE_UPDATE);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PlayerData.prototype, "curDiamond", {
        get: function () {
            return this._curDiamond;
        },
        set: function (v) {
            this._curDiamond = v;
            EventManager_1.default.event(EventKey_1.default.COIN_DIAMOND_UPDATE);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PlayerData.prototype, "curMagic", {
        get: function () {
            return this._curMagic;
        },
        set: function (v) {
            this._curMagic = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PlayerData.prototype, "curStar", {
        get: function () {
            return this._curStar;
        },
        set: function (v) {
            this._curStar = v;
            EventManager_1.default.event(EventKey_1.default.HERO_STAR_UPDATE);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PlayerData.prototype, "curLevel", {
        get: function () {
            return this._curLevel;
        },
        set: function (v) {
            this._curLevel = v;
            EventManager_1.default.event(EventKey_1.default.HERO_LEVEL_UPDATE);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PlayerData.prototype, "curClips", {
        get: function () {
            return this._curClips;
        },
        set: function (v) {
            this._curClips = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PlayerData.prototype, "curHero", {
        get: function () {
            return this._curHero;
        },
        set: function (v) {
            this._curHero = v;
        },
        enumerable: true,
        configurable: true
    });
    return PlayerData;
}());
exports.default = PlayerData;
},{"../../Tool/Dictionary":5,"../../Tool/EventKey":6,"../../Tool/EventManager":7}],146:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WaveData = /** @class */ (function () {
    function WaveData() {
    }
    Object.defineProperty(WaveData, "Instance", {
        get: function () {
            if (!WaveData._Instance) {
                WaveData._Instance = new WaveData();
            }
            return WaveData._Instance;
        },
        enumerable: true,
        configurable: true
    });
    WaveData.prototype.init = function () {
    };
    return WaveData;
}());
exports.default = WaveData;
},{}],147:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventManager_1 = require("../../Tool/EventManager");
var EventKey_1 = require("../../Tool/EventKey");
var WaveStatus = /** @class */ (function () {
    function WaveStatus() {
        // 关卡id
        this._id = 0;
        // 第几小关
        this._level = 0;
        // 探索时间
        this._time = 0;
        // 挑战cd
        this._fightCd = 0;
    }
    Object.defineProperty(WaveStatus.prototype, "id", {
        get: function () {
            return this._id;
        },
        set: function (v) {
            this._id = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WaveStatus.prototype, "level", {
        get: function () {
            return this._level;
        },
        set: function (v) {
            this._level = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WaveStatus.prototype, "time", {
        get: function () {
            return this._time;
        },
        set: function (v) {
            this._time = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WaveStatus.prototype, "fightCd", {
        get: function () {
            return this._fightCd;
        },
        set: function (v) {
            this._fightCd = v;
            EventManager_1.default.on(EventKey_1.default.ENTER_SECOND, this, this.update);
        },
        enumerable: true,
        configurable: true
    });
    WaveStatus.prototype.update = function () {
        if (this._fightCd > 0) {
            this._fightCd--;
        }
        else {
            this._fightCd = 0;
            EventManager_1.default.off(EventKey_1.default.ENTER_SECOND, this, this.update);
        }
    };
    return WaveStatus;
}());
exports.default = WaveStatus;
},{"../../Tool/EventKey":6,"../../Tool/EventManager":7}],148:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GamePreload_1 = require("../fgui/GamePreload");
var Dictionary_1 = require("../Tool/Dictionary");
var AssetManager_1 = require("../fgui/AssetManager");
var Game_1 = require("../Game");
var Signal_1 = require("../Tool/Signal");
var FWindow = /** @class */ (function (_super) {
    __extends(FWindow, _super);
    function FWindow() {
        var _this = _super.call(this) || this;
        // 消息--显示完成
        _this.sShowComplete = new Signal_1.default();
        // 消息--隐藏完成
        _this.sHideComplete = new Signal_1.default();
        // 是否初始化视图
        _this.menuIsCreated = false;
        // win窗口添加的子节点
        _this.windowChildren = new Dictionary_1.default();
        // 依赖资源列表
        _this._loadAssets = [];
        // 动态资源列表
        _this._dynamicAssetsList = [];
        return _this;
    }
    FWindow.prototype.onInit = function () {
        this.onMenuCreate();
    };
    FWindow.prototype.doShowAnimation = function () {
        this.setChildWindow(this.contentPane);
        if (this.openAnimation) {
            // 出现的缓动
            // 缓动结束调用 this.onShown();
        }
        else {
            _super.prototype.doShowAnimation.call(this);
        }
    };
    FWindow.prototype.onShown = function () {
        this.sShowComplete.dispatch();
        if (this.contentPane) {
            this.callChildOnWindowShow(this.contentPane);
        }
    };
    FWindow.prototype.doHideAnimation = function () {
        if (this.closeAnimation) {
            // 关闭的缓动
            // 缓动结束调用 this.hideImmediately();
        }
        else {
            _super.prototype.doHideAnimation.call(this);
        }
    };
    FWindow.prototype.onHide = function () {
        if (this.contentPane) {
            this.callChildOnWindowHide(this.contentPane);
        }
        this.callChildOnWindowHide();
    };
    FWindow.prototype.onMenuCreate = function () {
        this.menuIsCreated = true;
        this.onMenuOpen(this.menuParameter);
    };
    FWindow.prototype.onMenuOpen = function (parameter) {
        this.menuParameter = parameter;
    };
    // 菜单显示
    FWindow.prototype.menuShow = function (root) {
        this.showOn(root);
    };
    // 菜单管理器调的关闭
    FWindow.prototype.onMenuClose = function () {
        this.hide();
    };
    FWindow.prototype.windowAddChild = function (com) {
        if (com) {
            if (!this.windowChildren.hasKey(this.menuId)) {
                this.windowChildren.add(this.menuId, new Dictionary_1.default());
            }
            var child = this.windowChildren.getValue(this.menuId);
            if (!child.hasKey(com.id)) {
                child.add(com.id, com);
            }
            this.windowContainer.addChild(com);
            this.setChildWindow(com);
            this.callChildOnWindowShow(com);
        }
    };
    FWindow.prototype.windowRemoveChild = function (com) {
        if (com) {
            this.callChildOnWindowHide(com);
            if (this.windowChildren.hasKey(this.menuId)) {
                var child = this.windowChildren.getValue(this.menuId);
                child.remove(com.id);
            }
            com.removeFromParent();
        }
    };
    //=========================
    // 设置child.moduleWindow
    //-------------------------
    FWindow.prototype.setChildWindow = function (com) {
        if (com) {
            com["moduleWindow"] = this;
            // if (com._children) {
            // 	for (let i = 0; i < com._children.length; i++) {
            // 		this.setChildWindow(com._children[i]);
            // 	}
            // }
        }
    };
    //=========================
    // 调用child GComponent的 onWindowShow
    //-------------------------
    FWindow.prototype.callChildOnWindowShow = function (com) {
        if (com) {
            var enbaleCall = true;
            var fun = com["onWindowShow"];
            if (fun) {
                if (enbaleCall) {
                    fun.apply(com);
                }
            }
            if (enbaleCall && com._children) {
                for (var i = 0; i < com._children.length; i++) {
                    this.callChildOnWindowShow(com._children[i]);
                }
            }
        }
    };
    //=========================
    // 调用child GComponent的 onWindowHide
    //-------------------------
    FWindow.prototype.callChildOnWindowHide = function (com) {
        if (com) {
            var enbaleCall = true;
            var fun = com["onWindowHide"];
            if (fun) {
                if (enbaleCall) {
                    fun.apply(com);
                }
            }
            if (enbaleCall && com._children) {
                for (var i = 0; i < com._children.length; i++) {
                    this.callChildOnWindowHide(com._children[i]);
                }
            }
        }
        else {
            if (this.windowChildren.hasKey(this.menuId)) {
                var winChild = this.windowChildren.getValue(this.menuId);
                if (winChild.count > 0) {
                    var list = winChild.getValues();
                    for (var i = winChild.count - 1; i >= 0; i--) {
                        this.windowRemoveChild(list[i]);
                    }
                }
            }
        }
    };
    // 关闭
    FWindow.prototype.menuClose = function () {
        Game_1.default.menu.close(this.menuId);
    };
    // 返回, 到之前打开该模块的面板
    FWindow.prototype.menuBack = function () {
        Game_1.default.menu.back(this.menuId);
    };
    // 获取最后的menuParameter
    FWindow.prototype.getLastMenuParameter = function () {
        return this.menuParameter;
    };
    Object.defineProperty(FWindow.prototype, "openAnimation", {
        get: function () {
            return false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FWindow.prototype, "closeAnimation", {
        get: function () {
            return false;
        },
        enumerable: true,
        configurable: true
    });
    FWindow.prototype.destory = function () {
        this.sShowComplete.removeAll();
        this.sHideComplete.removeAll();
        if (this.contentPane) {
            this.contentPane.dispose();
            this.contentPane = null;
        }
        _super.prototype.dispose.call(this);
    };
    // 添加依赖资源--fgui 包名
    FWindow.prototype.addAssetForFguiPackagename = function (packagename) {
        this._loadAssets.push({ url: packagename, type: GamePreload_1.AssetItemType.FguiPackage });
    };
    // 添加依赖资源--组件
    FWindow.prototype.addAssetForFguiComponent = function (fguiCom) {
        var names = fguiCom["DependPackages"];
        for (var i = 0; i < names.length; i++) {
            this.addAssetForFguiPackagename(names[i]);
        }
    };
    // 获取资源加载列表
    FWindow.prototype.getLoadAssets = function (list, dict) {
        var assets = this._loadAssets;
        for (var i = 0; i < assets.length; i++) {
            var key = assets[i].type + " " + assets[i].url;
            if (!dict.hasKey(key)) {
                list.push(assets[i]);
                dict.add(key, assets[i]);
            }
        }
        return list;
    };
    FWindow.prototype.unloadAssetForFguiPackagename = function (packagename) {
        // switch (packagename) {
        // 	case GuiPackageNames.MainUI:
        // 		return;
        // }
        AssetManager_1.default.unloadFgui(packagename);
    };
    // 卸载依赖资源--组件
    FWindow.prototype.unloadAssetForFguiComponent = function (fguiCom) {
        var names = fguiCom["DependPackages"];
        for (var i = 0; i < names.length; i++) {
            this.unloadAssetForFguiPackagename(names[i]);
        }
    };
    // 卸载依赖资源--初始化时加载的
    FWindow.prototype.unloadAssetFroAssetList = function () {
        for (var i = 0; i < this._loadAssets.length; i++) {
            this.unloadAssetForFguiPackagename(this._loadAssets[i].url);
        }
    };
    // 添加动态资源
    FWindow.prototype.addDynamicAsset = function (assetItem) {
        if (assetItem)
            this._dynamicAssetsList.push(assetItem);
    };
    // // 添加动态资源--AvatarConfig里的所有
    // addDynmicAssetForAvatarAll(avatarConfig: AvatarConfig)  {
    // 	avatarConfig.getAllAssset(this._dynamicAssetsList);
    // }
    // 生成动态预加载资源
    FWindow.prototype.generateAssetsForDynmic = function () {
        this._dynamicAssetsList = [];
    };
    // 获取动态资源加载列表
    FWindow.prototype.getLoadAssetsForDynamic = function (list, dict) {
        var assets = this._dynamicAssetsList;
        for (var i = 0; i < assets.length; i++) {
            var key = assets[i].type + " " + assets[i].url;
            if (!dict.hasKey(key)) {
                list.push(assets[i]);
                dict.add(key, assets[i]);
            }
        }
        return list;
    };
    return FWindow;
}(fairygui.Window));
exports.default = FWindow;
},{"../Game":1,"../Tool/Dictionary":5,"../Tool/Signal":15,"../fgui/AssetManager":42,"../fgui/GamePreload":86}],149:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LocalStorage_1 = require("./LocalStorage");
var GameLocalStorage = /** @class */ (function (_super) {
    __extends(GameLocalStorage, _super);
    function GameLocalStorage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(GameLocalStorage, "Instance", {
        get: function () {
            if (!GameLocalStorage._Instance) {
                GameLocalStorage._Instance = new GameLocalStorage();
            }
            return GameLocalStorage._Instance;
        },
        enumerable: true,
        configurable: true
    });
    return GameLocalStorage;
}(LocalStorage_1.default));
exports.default = GameLocalStorage;
},{"./LocalStorage":150}],150:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../../Game");
var LocalStorage = /** @class */ (function () {
    function LocalStorage() {
    }
    Object.defineProperty(LocalStorage.prototype, "openid", {
        get: function () {
            if (!this._openid) {
                this._openid = this.getString("openid", true);
            }
            return this._openid;
        },
        set: function (value) {
            this._openid = value;
            this.setString("openid", value, true);
            Game_1.default.sound.onLogin();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LocalStorage.prototype, "password", {
        get: function () {
            if (!this._password) {
                this._password = this.getString("password", true);
            }
            return this._password;
        },
        set: function (value) {
            this._password = value;
            this.setString("password", value, true);
        },
        enumerable: true,
        configurable: true
    });
    LocalStorage.prototype.getKey = function (key, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        if (isGobal) {
            return key;
        }
        else {
            return this.openid + "_" + key;
        }
    };
    // string
    LocalStorage.prototype.setItem = function (key, value, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        Laya.LocalStorage.setItem(this.getKey(key, isGobal), value);
    };
    LocalStorage.prototype.getItem = function (key, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        return Laya.LocalStorage.getItem(this.getKey(key, isGobal));
    };
    // string
    LocalStorage.prototype.setString = function (key, value, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        Laya.LocalStorage.setItem(this.getKey(key, isGobal), value);
    };
    LocalStorage.prototype.getString = function (key, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        var val = Laya.LocalStorage.getItem(this.getKey(key, isGobal));
        if (val === undefined || val === null) {
            val = "";
        }
        return val;
    };
    // boolean
    LocalStorage.prototype.setBoolean = function (key, value, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        Laya.LocalStorage.setItem(this.getKey(key, isGobal), value ? "true" : "false");
    };
    LocalStorage.prototype.getBoolean = function (key, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        return Laya.LocalStorage.getItem(this.getKey(key, isGobal)) == "true";
    };
    // int
    LocalStorage.prototype.setInt = function (key, value, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        Laya.LocalStorage.setItem(this.getKey(key, isGobal), value.toString());
    };
    LocalStorage.prototype.getInt = function (key, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        var val = Laya.LocalStorage.getItem(this.getKey(key, isGobal));
        if (val) {
            return parseInt(val);
        }
        return 0;
    };
    // float
    LocalStorage.prototype.setFloat = function (key, value, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        Laya.LocalStorage.setItem(this.getKey(key, isGobal), value.toString());
    };
    LocalStorage.prototype.getFloat = function (key, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        var val = Laya.LocalStorage.getItem(this.getKey(key, isGobal));
        if (val) {
            return parseFloat(val);
        }
        return 0;
    };
    LocalStorage.prototype.setJSON = function (key, value, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        Laya.LocalStorage.setJSON(this.getKey(key, isGobal), value);
    };
    LocalStorage.prototype.getJSON = function (key, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        return Laya.LocalStorage.getJSON(this.getKey(key, isGobal));
    };
    LocalStorage.prototype.removeItem = function (key, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        return Laya.LocalStorage.removeItem(this.getKey(key, isGobal));
    };
    LocalStorage.prototype.hasItem = function (key, isGobal) {
        if (isGobal === void 0) { isGobal = false; }
        return Laya.LocalStorage.getItem(this.getKey(key, isGobal)) !== null;
    };
    LocalStorage.prototype.clear = function () {
        return Laya.LocalStorage.clear();
    };
    return LocalStorage;
}());
exports.default = LocalStorage;
},{"../../Game":1}],151:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MenuId_1 = require("./MenuId");
var Dictionary_1 = require("../Tool/Dictionary");
var AssetManager_1 = require("../fgui/AssetManager");
var MenuCtlStateType_1 = require("./MenuCtlStateType");
var Game_1 = require("../Game");
var MenuLayer_1 = require("./MenuLayer");
var MenuLayerType_1 = require("./DataEnums/MenuLayerType");
var EventManager_1 = require("../Tool/EventManager");
var EventKey_1 = require("../Tool/EventKey");
var MenuCtl = /** @class */ (function () {
    function MenuCtl() {
        this._closeOther = false;
        // 返回菜单ID
        this.backMenuId = -1;
        // 内存停留时间
        this.cacheTime = 100;
        // 关闭时间
        this.closeTime = 0;
        // 此次关闭是否销毁
        this.closeIsDestory = false;
    }
    MenuCtl.prototype.open = function (parametar) {
        this.openParametar = parametar;
        if (!this.moduleWindow) {
            this.moduleWindow = new this.menuWindowConfig.windowClass();
            this.moduleWindow.menuId = this.menuId;
            switch (this.menuId) {
                case MenuId_1.MenuId.Load:
                    this.moduleWindow.windowContainer = MenuLayer_1.default.getLayer(MenuLayerType_1.MenuLayerType.Loader);
                    break;
                default:
                    this.moduleWindow.windowContainer = MenuLayer_1.default.getLayer(MenuLayerType_1.MenuLayerType.Module);
                    break;
            }
        }
        this.load();
    };
    MenuCtl.prototype.load = function () {
        this.state = MenuCtlStateType_1.MenuCtlStateType.Loading;
        var list = this.getLoadAssets();
        if (!list || list.length == 0) {
            this.onLoadComplete();
        }
        else {
            // 打开加载面板
            var onProgress = function (rate, current, max, assetItemInfo) {
                EventManager_1.default.event(EventKey_1.default.LOADER_PROGRESS, [current, max]);
            };
            AssetManager_1.default.loadList(list, this, this.onLoadComplete, onProgress);
        }
    };
    // 加载完成
    MenuCtl.prototype.onLoadComplete = function () {
        this.setShow();
        EventManager_1.default.event(EventKey_1.default.LOADER_OVER);
    };
    MenuCtl.prototype.setShow = function () {
        if (!this.moduleWindow) {
            console.warn("\u8BBE\u7F6E\u663E\u793A \u4F46\u662F\u6A21\u5757\u5DF2\u9500\u6BC1 : " + this.menuId, "MenuId." + MenuId_1.MenuId[this.menuId]);
            return;
        }
        console.log("设置显示面板 : ", "MenuId." + MenuId_1.MenuId[this.menuId]);
        this.moduleWindow.sShowComplete.addOnce(this.closeOther, this);
        this.state = MenuCtlStateType_1.MenuCtlStateType.Opened;
        if (this.moduleWindow.menuIsCreated) {
            this.moduleWindow.onMenuOpen(this.openParametar);
        }
        else {
            this.moduleWindow.menuParameter = this.openParametar;
        }
        this.moduleWindow.menuShow(this.moduleWindow.windowContainer);
    };
    // 关闭其他模块
    MenuCtl.prototype.closeOther = function () {
        var hasCloseOtherMenu = false;
        // 设置返回MenuID
        var backMenuId = this.__menuManager.getLastOpenMenuId([this.menuId]);
        if (!this.openParametar.dontCloseOther) {
            var homeIsOpen = this.__menuManager.isOpened(MenuId_1.MenuId.Home);
            var list = Game_1.default.menu.dict.getValues();
            for (var i = 0; i < list.length; i++) {
                var ctl = list[i];
                if (ctl.menuId == MenuId_1.MenuId.Home)
                    continue;
                if (ctl != this) {
                    ctl.closeIsDestory = homeIsOpen;
                    ctl.close();
                    hasCloseOtherMenu = true;
                }
            }
        }
        this.backMenuId = hasCloseOtherMenu ? backMenuId : -1;
    };
    // 关闭
    MenuCtl.prototype.close = function () {
        if (this.state == MenuCtlStateType_1.MenuCtlStateType.Closed || this.state == MenuCtlStateType_1.MenuCtlStateType.Destoryed)
            return;
        this.__menuManager.__onMenuClose(this);
    };
    // 延时关闭，等把主界面打开再关闭
    MenuCtl.prototype.__delayClose = function () {
        this.backMenuId = -1;
        if (this.moduleWindow && this.moduleWindow.menuIsCreated) {
            this.moduleWindow.onMenuClose();
            this.closeTime = Game_1.default.time.localTime;
        }
        this.state = MenuCtlStateType_1.MenuCtlStateType.Closed;
    };
    // 销毁
    MenuCtl.prototype.destory = function () {
        if (this.moduleWindow && this.menuId != MenuId_1.MenuId.Load) {
            console.log("销毁面板", "MenuId." + MenuId_1.MenuId[this.menuId]);
            this.moduleWindow.sShowComplete.remove(this.closeOther, this);
            this.moduleWindow.dispose();
            this.moduleWindow = null;
        }
        this.state = MenuCtlStateType_1.MenuCtlStateType.Destoryed;
    };
    // 获取模块资源列表
    MenuCtl.prototype.getLoadAssets = function () {
        var list = [];
        var dict = new Dictionary_1.default();
        if (!this.moduleWindow.menuIsCreated) {
            this.moduleWindow.getLoadAssets(list, dict);
        }
        this.moduleWindow.generateAssetsForDynmic();
        this.moduleWindow.getLoadAssetsForDynamic(list, dict);
        return list;
    };
    return MenuCtl;
}());
exports.default = MenuCtl;
},{"../Game":1,"../Tool/Dictionary":5,"../Tool/EventKey":6,"../Tool/EventManager":7,"../fgui/AssetManager":42,"./DataEnums/MenuLayerType":136,"./MenuCtlStateType":152,"./MenuId":153,"./MenuLayer":154}],152:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// ===========================
// menu状态
// ---------------------------
var MenuCtlStateType;
(function (MenuCtlStateType) {
    // 关闭的，或者没打开过
    MenuCtlStateType[MenuCtlStateType["Closed"] = 1] = "Closed";
    // 加载中
    MenuCtlStateType[MenuCtlStateType["Loading"] = 2] = "Loading";
    // 打开的
    MenuCtlStateType[MenuCtlStateType["Opened"] = 3] = "Opened";
    // 销毁的
    MenuCtlStateType[MenuCtlStateType["Destoryed"] = 4] = "Destoryed";
})(MenuCtlStateType = exports.MenuCtlStateType || (exports.MenuCtlStateType = {}));
},{}],153:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MenuId;
(function (MenuId) {
    MenuId[MenuId["Home"] = 1] = "Home";
    MenuId[MenuId["Battle"] = 2] = "Battle";
    MenuId[MenuId["Arrange"] = 3] = "Arrange";
    MenuId[MenuId["Load"] = 4] = "Load";
    MenuId[MenuId["MenuSelect"] = 5] = "MenuSelect";
    MenuId[MenuId["Bag"] = 6] = "Bag";
    MenuId[MenuId["GM"] = 100] = "GM";
})(MenuId = exports.MenuId || (exports.MenuId = {}));
},{}],154:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MenuLayerType_1 = require("./DataEnums/MenuLayerType");
var Dictionary_1 = require("../Tool/Dictionary");
// 层级管理器
var MenuLayer = /** @class */ (function () {
    function MenuLayer() {
    }
    // 初始化
    MenuLayer.install = function () {
        // 根容器
        Laya.stage.addChild(fairygui.GRoot.inst.displayObject);
        MenuLayer.root = fairygui.GRoot.inst;
        MenuLayer.home = MenuLayer.createLayer("MenuLayer-home");
        MenuLayer.homeTop = MenuLayer.createLayer("MenuLayer-homeTop");
        MenuLayer.module = MenuLayer.createLayer("MenuLayer-module");
        MenuLayer.mainUI = MenuLayer.createLayer("MenuLayer-mainUI");
        MenuLayer.dialog = MenuLayer.createLayer("MenuLayer-dialog");
        MenuLayer.floatMsg = MenuLayer.createLayer("MenuLayer-floatMsg");
        MenuLayer.loader = MenuLayer.createLayer("MenuLayer-loader");
        MenuLayer.guide = MenuLayer.createLayer("MenuLayer-guide");
        MenuLayer.dict.add(MenuLayerType_1.MenuLayerType.Home, MenuLayer.home);
        MenuLayer.dict.add(MenuLayerType_1.MenuLayerType.HomeTop, MenuLayer.homeTop);
        MenuLayer.dict.add(MenuLayerType_1.MenuLayerType.Module, MenuLayer.module);
        MenuLayer.dict.add(MenuLayerType_1.MenuLayerType.MainUI, MenuLayer.mainUI);
        MenuLayer.dict.add(MenuLayerType_1.MenuLayerType.Dialog, MenuLayer.dialog);
        MenuLayer.dict.add(MenuLayerType_1.MenuLayerType.FloatMsg, MenuLayer.floatMsg);
        MenuLayer.dict.add(MenuLayerType_1.MenuLayerType.Loader, MenuLayer.loader);
        MenuLayer.dict.add(MenuLayerType_1.MenuLayerType.Guide, MenuLayer.guide);
    };
    MenuLayer.getLayer = function (layerType) {
        return MenuLayer.dict.getValue(layerType);
    };
    MenuLayer.showHideLayer = function (layerType, show) {
        var preShow = MenuLayer.visDict.hasKey(layerType) ? MenuLayer.visDict.getValue(layerType) : true;
        if (preShow != show) {
            MenuLayer.dict.getValue(layerType).visible = show;
            MenuLayer.visDict.set(layerType, show);
        }
    };
    MenuLayer.createLayer = function (name) {
        var root = MenuLayer.root;
        var v = new fairygui.GRoot();
        if (name) {
            v.name = name;
        }
        v.setSize(root.width, root.height);
        root.addChild(v);
        return v;
    };
    // 字典
    MenuLayer.dict = new Dictionary_1.default();
    MenuLayer.visDict = new Dictionary_1.default();
    return MenuLayer;
}());
exports.default = MenuLayer;
},{"../Tool/Dictionary":5,"./DataEnums/MenuLayerType":136}],155:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Tool/Dictionary");
var MenuId_1 = require("./MenuId");
var MenuCtl_1 = require("./MenuCtl");
var MenuWindows_1 = require("./MenuWindows");
var MenuCtlStateType_1 = require("./MenuCtlStateType");
var Game_1 = require("../Game");
var MenuManager = /** @class */ (function () {
    function MenuManager() {
        /** 模块最小缓存时间 */
        this.menuCacheTime = 10000;
        this.dict = new Dictionary_1.default();
        this.list = [];
        this.stack = [];
    }
    // 获取模块控制器
    MenuManager.prototype.getMenuCtl = function (menuId) {
        return this.dict.getValue(menuId);
    };
    // 销毁
    MenuManager.prototype.destory = function (menuId) {
        var ctl = this.getMenuCtl(menuId);
        if (ctl) {
            if (ctl.state == MenuCtlStateType_1.MenuCtlStateType.Opened) {
                ctl.close();
                setTimeout(function () {
                    ctl.destory();
                }, 100);
            }
            else {
                ctl.destory();
            }
        }
    };
    // 关闭模块
    MenuManager.prototype.close = function (menuId) {
        var ctl = this.getMenuCtl(menuId);
        if (ctl) {
            ctl.close();
        }
    };
    // 返回
    MenuManager.prototype.back = function (menuId) {
        var _this = this;
        var ctl = this.getMenuCtl(menuId);
        if (ctl) {
            var backMenuId = ctl.backMenuId;
            if (backMenuId > 0) {
                var backMenuCtl = this.getMenuCtl(backMenuId);
                if (backMenuCtl) {
                    var openParametar = backMenuCtl.moduleWindow ? backMenuCtl.moduleWindow.getLastMenuParameter() : null;
                    if (!openParametar) {
                        openParametar = backMenuCtl.openParametar;
                    }
                    this._open(backMenuId, openParametar);
                }
            }
            setTimeout(function () {
                _this.close(menuId);
            }, 10);
        }
    };
    // 获取最后打开的面板
    MenuManager.prototype.getLastOpenMenuId = function (excludeMenuId) {
        for (var i = this.stack.length - 1; i >= 0; i--) {
            var ctl = this.stack[i];
            if (ctl.menuId != MenuId_1.MenuId.Load) {
                if (excludeMenuId && excludeMenuId.indexOf(ctl.menuId) != -1) {
                    continue;
                }
                return ctl.menuId;
            }
        }
        return -1;
    };
    // 获取模块是否打开        
    MenuManager.prototype.isOpened = function (menuId) {
        var result = false;
        var ctl = this.getMenuCtl(menuId);
        if (ctl && ctl.state == MenuCtlStateType_1.MenuCtlStateType.Opened) {
            if (ctl.menuId == MenuId_1.MenuId.Home) {
                if (ctl.moduleWindow && ctl.moduleWindow.contentPane)
                    result = ctl.moduleWindow.contentPane.visible;
            }
            else {
                result = true;
            }
        }
        return result;
    };
    /**
     * 打开模块
     * @param menuId 模块id
     * @param args 携带的参数
     */
    MenuManager.prototype.open = function (menuId) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        return this._open(menuId, { openIndex: 0, args: args, dontCloseOther: false, initFunction: new Dictionary_1.default() });
    };
    // 打开模块
    MenuManager.prototype._open = function (menuId, parametar) {
        var ctl = this.getMenuCtl(menuId);
        if (!ctl) {
            var menuWindowConfig = MenuWindows_1.default.get(menuId);
            if (!menuWindowConfig) {
                console.log("MenuManager.open \u6CA1\u6709\u627E\u5230menuWindowConfig, menuId=" + menuId);
                return null;
            }
            if (!menuWindowConfig.windowClass) {
                console.log("MenuManager.open menuWindowConfig.windowClass=" + menuWindowConfig.windowClass + ", menuId=" + menuId);
                return null;
            }
            ctl = new MenuCtl_1.default();
            ctl.__menuManager = this;
            ctl.menuId = menuId;
            ctl.menuWindowConfig = menuWindowConfig;
            this.dict.add(menuId, ctl);
            if (ctl.menuId != MenuId_1.MenuId.Home)
                this.list.push(ctl);
        }
        if (menuId == MenuId_1.MenuId.GM)
            parametar.dontCloseOther = true;
        ctl.open(parametar);
        var index = this.stack.indexOf(ctl);
        if (index != -1)
            this.stack.splice(index, 1);
        this.stack.push(ctl);
        //
        return ctl;
    };
    MenuManager.prototype.__onMenuClose = function (ctl) {
        for (var i = this.stack.length - 1; i >= 0; i--) {
            if (this.stack[i] == ctl)
                this.stack.splice(i, 1);
        }
        // console.log(`关闭面板 :`, "MenuId." + MenuId[ctl.menuId]);
        // 关闭前打开主界面
        // let home = this.getMenuCtl(MenuId.Home);
        // if (!home || home.state != MenuCtlStateType.Opened) {
        // 	home = this.open(MenuId.Home);
        // }
        ctl.__delayClose();
        this.onTick();
    };
    /** 检测销毁模块 */
    MenuManager.prototype.onTick = function () {
        for (var i = 0; i < this.list.length; i++) {
            var ctl = this.list[i];
            if (ctl.state == MenuCtlStateType_1.MenuCtlStateType.Closed) {
                if (ctl.cacheTime != -1) {
                    var cacheTime = Math.max(ctl.cacheTime, this.menuCacheTime);
                    var subtime = Game_1.default.time.localTime - ctl.closeTime;
                    if (subtime >= cacheTime && ctl.closeIsDestory) {
                        ctl.destory();
                    }
                }
            }
        }
    };
    return MenuManager;
}());
exports.default = MenuManager;
},{"../Game":1,"../Tool/Dictionary":5,"./MenuCtl":151,"./MenuCtlStateType":152,"./MenuId":153,"./MenuWindows":156}],156:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../Tool/Dictionary");
var MenuId_1 = require("./MenuId");
var ModuleConfig_1 = require("./ModuleConfig");
var SystemWin_1 = require("./Windows/SystemWin");
var BattleWin_1 = require("./Windows/BattleWin");
var MenusWin_1 = require("./Windows/MenusWin");
var HomeWin_1 = require("./Windows/HomeWin");
var ArrangementWin_1 = require("./Windows/ArrangementWin");
var BagWin_1 = require("./Windows/BagWin");
var GMWin_1 = require("./Windows/GMWin");
var MenuWindows = /** @class */ (function () {
    function MenuWindows() {
    }
    MenuWindows.get = function (menuid) {
        return MenuWindows.dict.getValue(menuid);
    };
    MenuWindows.add = function (menuId, windowClass) {
        // 请在该地方配置menuId对应的 MWindow
        MenuWindows.dict.add(menuId, new ModuleConfig_1.default(menuId, windowClass));
    };
    MenuWindows.install = function () {
        MenuWindows.add(MenuId_1.MenuId.Home, HomeWin_1.default);
        MenuWindows.add(MenuId_1.MenuId.Battle, BattleWin_1.default);
        MenuWindows.add(MenuId_1.MenuId.Arrange, ArrangementWin_1.default);
        MenuWindows.add(MenuId_1.MenuId.Load, SystemWin_1.default);
        MenuWindows.add(MenuId_1.MenuId.MenuSelect, MenusWin_1.default);
        MenuWindows.add(MenuId_1.MenuId.Bag, BagWin_1.default);
        MenuWindows.add(MenuId_1.MenuId.GM, GMWin_1.default);
    };
    MenuWindows.dict = new Dictionary_1.default();
    return MenuWindows;
}());
exports.default = MenuWindows;
},{"../Tool/Dictionary":5,"./MenuId":153,"./ModuleConfig":165,"./Windows/ArrangementWin":171,"./Windows/BagWin":172,"./Windows/BattleWin":173,"./Windows/GMWin":174,"./Windows/HomeWin":175,"./Windows/MenusWin":176,"./Windows/SystemWin":177}],157:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Pools_1 = require("../../Tool/Pools");
// 光环
var BattleBuffHalo = /** @class */ (function (_super) {
    __extends(BattleBuffHalo, _super);
    function BattleBuffHalo(target, skill) {
        var _this = _super.call(this) || this;
        _this._sk = null;
        _this._target = null;
        _this._skill = null;
        _this._sk = Pools_1.default.skFetch("effect_1" + skill.effectID);
        target.sk.addChild(_this._sk);
        _this._target = target;
        _this._skill = skill;
        return _this;
    }
    BattleBuffHalo.create = function (target, skill) {
        return new BattleBuffHalo(target, skill);
    };
    Object.defineProperty(BattleBuffHalo.prototype, "target", {
        get: function () {
            return this._target;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BattleBuffHalo.prototype, "addAP", {
        get: function () {
            return this._skill.addAP;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BattleBuffHalo.prototype, "addSP", {
        get: function () {
            return this._skill.addSP;
        },
        enumerable: true,
        configurable: true
    });
    return BattleBuffHalo;
}(Laya.Sprite));
exports.default = BattleBuffHalo;
},{"../../Tool/Pools":12}],158:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Pools_1 = require("../../Tool/Pools");
var BattleEffectEnemy = /** @class */ (function (_super) {
    __extends(BattleEffectEnemy, _super);
    function BattleEffectEnemy(id, loop, parent) {
        var _this = _super.call(this) || this;
        _this._sk = null;
        _this.id = null;
        _this.loop = true;
        _this._handler = Laya.Handler.create(_this, _this.over, null, false);
        _this._num = 1;
        _this.id = id;
        _this._sk = Pools_1.default.skFetch("effect_" + id);
        parent.addChild(_this._sk);
        _this.replay(loop);
        return _this;
    }
    BattleEffectEnemy.create = function (id, loop, parent) {
        return new BattleEffectEnemy(id, loop, parent);
    };
    Object.defineProperty(BattleEffectEnemy.prototype, "sk", {
        get: function () {
            return this._sk;
        },
        enumerable: true,
        configurable: true
    });
    BattleEffectEnemy.prototype.replay = function (loop) {
        this.loop = loop;
        this.sk.visible = true;
        this._sk.play("effect", this.loop);
        this.visible = true;
        this._sk.removeStopEvent(this._handler);
        if (this.loop) {
            this._num++;
        }
        else {
            this._sk.addStopEvent(this._handler);
        }
    };
    BattleEffectEnemy.prototype.removeNum = function () {
        this._num -= 2;
        if (this._num <= 1) {
            this._num = 1;
            this._sk.stop();
            this.over();
        }
    };
    BattleEffectEnemy.prototype.over = function () {
        this.visible = false;
        this._sk.visible = false;
    };
    return BattleEffectEnemy;
}(Laya.Sprite));
exports.default = BattleEffectEnemy;
},{"../../Tool/Pools":12}],159:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HeroAniEnums_1 = require("../DataEnums/HeroAniEnums");
var Game_1 = require("../../Game");
var EventManager_1 = require("../../Tool/EventManager");
var EventKey_1 = require("../../Tool/EventKey");
var Pools_1 = require("../../Tool/Pools");
var BattleSkillAttack_1 = require("./BattleSkillAttack");
var BattleModel_1 = require("./BattleModel");
var HeroData_1 = require("../DataStructs/HeroData");
var BattleHero = /** @class */ (function (_super) {
    __extends(BattleHero, _super);
    function BattleHero(id, index) {
        var _this = _super.call(this, true) || this;
        // 英雄数据
        _this.dataInf = null;
        _this.posX = 0;
        _this.posY = 0;
        // 当前正在攻击的敌人
        _this.curEnemy = null;
        // 当前已经攻击的敌人
        _this.curHitEnemy = null;
        // 技能列表
        _this.attackSkillList = [null, null];
        _this.haloSkillList = [null, null];
        // 当前使用那个技能
        _this.currentAttackSkill = null;
        _this.useSkillNum = 0;
        // 可攻击到的格子范围
        _this.keyList = [];
        _this.dataInf = new HeroData_1.default();
        _this.dataInf.setHeroInf(id);
        if (_this.dataInf.heroInf) {
            _this._id = 12; //id;
            _this._index = Number(index);
            _this._sk = Pools_1.default.skFetch("hero_" + _this._id);
            _this.sk.addStopEvent(Laya.Handler.create(_this, _this.overEvent));
            _this.sk.addLableEvent(Laya.Handler.create(_this, _this.frameEvent));
            Game_1.default.parentObject.addChild(_this.sk);
            // 初始化技能
            if (_this.dataInf.heroInf.normal_id > 0) {
                _this.attackSkillList[0] = BattleSkillAttack_1.default.create(_this.dataInf.heroInf.normal_id, _this.dataInf.heroInf.normal_cd);
            }
            if (_this.dataInf.heroInf.skill_id > 0) {
                _this.attackSkillList[0] = BattleSkillAttack_1.default.create(_this.dataInf.heroInf.skill_id, _this.dataInf.heroInf.skill_cd);
            }
            _this.init();
            EventManager_1.default.event(EventKey_1.default.ADD_HERO, [index, _this]);
        }
        return _this;
    }
    BattleHero.create = function (id, index) {
        return new BattleHero(id, index);
    };
    Object.defineProperty(BattleHero.prototype, "index", {
        get: function () {
            return this._index;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BattleHero.prototype, "haloList", {
        get: function () {
            return this.haloSkillList;
        },
        enumerable: true,
        configurable: true
    });
    BattleHero.prototype.init = function () {
        this.playStand();
        this.posX = 458 + Math.floor(this._index % 3) * 224;
        this.posY = 361 + Math.floor(this._index / 3) * 162;
        this.sk.pos(this.posX, this.posY);
    };
    BattleHero.prototype.update = function (dt) {
        _super.prototype.update.call(this, dt);
        this.findEnemy();
        var canUserList = [];
        for (var i = 0; i < this.attackSkillList.length; i++) {
            if (this.attackSkillList[i] != null) {
                var attackSkill = this.attackSkillList[i];
                if (attackSkill.getReady(dt)) {
                    canUserList.push(i);
                }
            }
        }
        if (this.currentState == HeroAniEnums_1.HeroAniEnums.Attack || this.currentState == HeroAniEnums_1.HeroAniEnums.Skill) {
            this.standTime += dt;
            if (this.standTime > 2000) {
                this.playStand();
            }
            return;
        }
        else {
            this.standTime = 0;
        }
        if (this.currentState != HeroAniEnums_1.HeroAniEnums.Stand)
            return;
        if (this.curEnemy != null && canUserList.length) {
            this.useSkillNum = canUserList.pop(); //优先使用特殊技能
            this.currentAttackSkill = this.attackSkillList[this.useSkillNum];
            this.sk.scaleX = this.curEnemy.sk.x > this.sk.x ? 1 : -1;
            this.curHitEnemy = this.curEnemy;
            this.castSkill(this.useSkillNum);
            this.currentAttackSkill.cast();
        }
    };
    BattleHero.prototype.castSkill = function (index) {
        if (index == 0) {
            this.playAttack();
        }
        else {
            this.playCast();
        }
    };
    // 查找可攻击敌人
    BattleHero.prototype.findEnemy = function () {
        // 当前攻击敌人是否可继续攻击
        if (this.curEnemy != null && !this.curEnemy.canHit) {
            this.curEnemy = null;
        }
        // 此处需判断当前敌人是否在英雄的工具范围内
        if (this.curEnemy != null) {
            if (this.keyList.indexOf(this.curEnemy.atkRangIndex) == -1) {
                this.curEnemy = null;
            }
            else {
                return;
            }
        }
        if (Game_1.default.battleScene.atkCellDIc.count == 0)
            return;
        if (this.keyList.length == 0) {
            this.checkKeyList();
        }
        else {
            for (var i = 0, len = this.keyList.length; i < len; i++) {
                if (Game_1.default.battleScene.atkCellDIc.hasKey(this.keyList[i])) {
                    var list = Game_1.default.battleScene.atkCellDIc.getValue(this.keyList[i]);
                    if (list.length > 0) {
                        this.curEnemy = list[0];
                        break;
                    }
                }
            }
        }
    };
    BattleHero.prototype.checkKeyList = function () {
        // 一格攻击范围
        this.keyList = [];
        var ten0 = Math.floor(this._index % 3);
        var ten = 1;
        if (ten0 == 1) {
            ten = 3;
        }
        else if (ten0 == 2) {
            ten = 5;
        }
        if (this._index < 3) {
            var sim = 1;
            for (var i = 0; i < 9; i++) {
                this.keyList.push(ten * 10 + sim);
                sim += 2;
                if (sim > 5) {
                    ten++;
                    sim = 1;
                }
            }
        }
        else if (this._index < 6) {
            var sim = 0;
            for (var i = 0; i < 9; i++) {
                this.keyList.push(ten * 10 + sim);
                sim++;
                if (sim > 2) {
                    ten++;
                    sim = 0;
                }
            }
        }
        else {
            var sim = 2;
            for (var i = 0; i < 9; i++) {
                this.keyList.push(ten * 10 + sim);
                sim += 2;
                if (sim > 6) {
                    ten++;
                    sim = 2;
                }
            }
        }
        for (var i = 0, len = this.keyList.length; i < len; i++) {
            if (Game_1.default.battleScene.atkCellDIc.hasKey(this.keyList[i])) {
                var list = Game_1.default.battleScene.atkCellDIc.getValue(this.keyList[i]);
                if (list.length > 0) {
                    this.curEnemy = list[0];
                    break;
                }
            }
        }
    };
    BattleHero.prototype.overEvent = function () {
        if (this.currentState != HeroAniEnums_1.HeroAniEnums.Attack && this.currentState != HeroAniEnums_1.HeroAniEnums.Skill)
            return;
        this.playStand();
        this.currentAttackSkill = null;
    };
    BattleHero.prototype.frameEvent = function (event) {
        if (this.curHitEnemy == null || this.curHitEnemy.haveDeath)
            return;
        if (event.name == "cast_time") {
            this.curHitEnemy.skillHit(this, this.currentAttackSkill);
        }
    };
    BattleHero.prototype.removeThis = function () {
        EventManager_1.default.event(EventKey_1.default.ADD_HERO, [this._index, this]);
        EventManager_1.default.offAllCaller(this);
        this.curEnemy = null;
        Pools_1.default.skRecycle(this.sk);
        this.destroy();
    };
    return BattleHero;
}(BattleModel_1.default));
exports.default = BattleHero;
},{"../../Game":1,"../../Tool/EventKey":6,"../../Tool/EventManager":7,"../../Tool/Pools":12,"../DataEnums/HeroAniEnums":135,"../DataStructs/HeroData":143,"./BattleModel":160,"./BattleSkillAttack":163}],160:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../../Game");
var HeroAniEnums_1 = require("../DataEnums/HeroAniEnums");
var Point = Laya.Point;
var EventManager_1 = require("../../Tool/EventManager");
var Pools_1 = require("../../Tool/Pools");
var BattleEffectEnemy_1 = require("./BattleEffectEnemy");
var Dictionary_1 = require("../../Tool/Dictionary");
var EventKey_1 = require("../../Tool/EventKey");
var BattleModel = /** @class */ (function (_super) {
    __extends(BattleModel, _super);
    function BattleModel(isUp) {
        var _this = _super.call(this) || this;
        _this._destination = new Laya.Point();
        _this._posState = 0;
        _this._sk = null;
        _this.currentState = HeroAniEnums_1.HeroAniEnums.None;
        // 出生点
        _this.initPointTop = new Point(1380, 480);
        _this.initPointBom = new Point(1380, 580);
        _this.initPoint = new Point();
        _this.initPos = 0;
        // 下一个动作攻击
        _this.nextAttack = HeroAniEnums_1.HeroAniEnums.None;
        // 基础移动点
        _this.pathX = [1000, 780, 560, 340, 220];
        _this.pathY = [280, 460, 480, 550, 580, 640, 800];
        // update中的时间
        _this.standTime = 0;
        // 血条
        _this.blood = null;
        // 脚下阴影
        _this.shadow = null;
        // 战斗特效列表
        _this.battleEffectList = new Dictionary_1.default();
        // 敌人在那个攻击范围的格子内
        _this._atkRangIndex = -1;
        _this.skillPrevState = HeroAniEnums_1.HeroAniEnums.None;
        // 是否已死亡
        _this._haveDeath = false;
        // 能否被攻击
        _this._canHit = true;
        return _this;
        // 模型动作暂停和恢复控制
    }
    Object.defineProperty(BattleModel.prototype, "sk", {
        get: function () {
            return this._sk;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BattleModel.prototype, "atkRangIndex", {
        get: function () {
            return this._atkRangIndex;
        },
        set: function (v) {
            this._atkRangIndex = v;
        },
        enumerable: true,
        configurable: true
    });
    BattleModel.prototype.update = function (dt) {
    };
    BattleModel.prototype.playPause = function () {
        if (this.currentState == HeroAniEnums_1.HeroAniEnums.Death)
            return;
        this._sk.pauseAni();
    };
    BattleModel.prototype.playResume = function () {
        this._sk.resumeAni();
    };
    BattleModel.prototype.playStand = function () {
        this.playAnimation(HeroAniEnums_1.HeroAniEnums.Stand, true);
    };
    BattleModel.prototype.playMove = function () {
        this.playAnimation(HeroAniEnums_1.HeroAniEnums.Move, true);
    };
    BattleModel.prototype.playAttack = function () {
        this.playAnimation(HeroAniEnums_1.HeroAniEnums.Attack, false);
    };
    BattleModel.prototype.playCast = function () {
        this.skillPrevState = this.currentState;
        this.playAnimation(HeroAniEnums_1.HeroAniEnums.Skill, false);
    };
    BattleModel.prototype.playStun = function () {
        this.playAnimation(HeroAniEnums_1.HeroAniEnums.Stun, true);
    };
    BattleModel.prototype.playDeath = function () {
        if (this.currentState == HeroAniEnums_1.HeroAniEnums.Death)
            return;
        this.playAnimation(HeroAniEnums_1.HeroAniEnums.Death, false);
    };
    BattleModel.prototype.playAnimation = function (state, loop) {
        this.currentState = state;
        this._sk.play(state, loop);
    };
    BattleModel.prototype.onDisable = function () {
        EventManager_1.default.offAllCaller(this);
    };
    Object.defineProperty(BattleModel.prototype, "haveDeath", {
        get: function () {
            return this._haveDeath;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BattleModel.prototype, "canHit", {
        get: function () {
            return this._canHit && !this._haveDeath;
        },
        enumerable: true,
        configurable: true
    });
    // 敌人死亡
    BattleModel.prototype.enemyDeath = function () {
        Game_1.default.battleScene.enemyList.splice(1, 0);
        this._haveDeath = true;
        if (this.blood) {
            // 回收血条
            Pools_1.default.recycle(this.blood);
            this.blood = null;
        }
        if (this.shadow) {
            // 回收血条
            Pools_1.default.recycle(this.shadow);
            this.shadow = null;
        }
        this.playDeath();
    };
    BattleModel.prototype.addClearEvent = function () {
        EventManager_1.default.on(EventKey_1.default.GAMEWIN, this, this.clearThis);
        EventManager_1.default.on(EventKey_1.default.GAMEEXIT, this, this.clearThis);
        EventManager_1.default.on(EventKey_1.default.GAMELOSE, this, this.clearThis);
    };
    BattleModel.prototype.clearThis = function () {
        this._haveDeath = true;
        if (this.blood) {
            // 回收血条
            Pools_1.default.recycle(this.blood);
            this.blood = null;
        }
        if (this.shadow) {
            // 回收血条
            Pools_1.default.recycle(this.shadow);
            this.shadow = null;
        }
        Pools_1.default.skRecycle(this.sk);
        this.destroy();
    };
    // 受击特效
    BattleModel.prototype.addBattleEffect = function (id, loop) {
        var key = String(id);
        var _effect = null;
        if (this.battleEffectList.hasKey(key)) {
            _effect = this.battleEffectList.getValue(key);
            var _style = _effect.getStyle();
            if (_style) {
                _effect.replay(loop);
            }
            else {
                Pools_1.default.skRecycle(_effect.sk);
                _effect.destroy();
                _effect = null;
            }
        }
        if (_effect == null) {
            _effect = BattleEffectEnemy_1.default.create(id, loop, this.sk);
            this.battleEffectList.add(key, _effect);
        }
        var _size = 1;
        _effect.scale(_size, _size, true);
        _effect.sk.pos(0, -50);
        return _effect;
    };
    return BattleModel;
}(Laya.Sprite));
exports.default = BattleModel;
},{"../../Game":1,"../../Tool/Dictionary":5,"../../Tool/EventKey":6,"../../Tool/EventManager":7,"../../Tool/Pools":12,"../DataEnums/HeroAniEnums":135,"./BattleEffectEnemy":158}],161:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../../Tool/Dictionary");
var BattleSoldier_1 = require("./BattleSoldier");
var Game_1 = require("../../Game");
var EventManager_1 = require("../../Tool/EventManager");
var EventKey_1 = require("../../Tool/EventKey");
var BattleHero_1 = require("./BattleHero");
var BattleScene = /** @class */ (function () {
    function BattleScene() {
        // 敌人列表
        this.enemyList = new Array();
        // 英雄列表
        this.heroList = new Array();
        // 指定为位置的英雄字典
        this.seatHeroDic = new Dictionary_1.default();
        // 当前那一列阵容生效
        this.seatHeroSelect = 0;
        // 石头列表
        this.stoneList = new Array();
        // 底座列表
        this.battleSeat = new Array();
        // 敌人所在的攻击范围
        this.atkCellDIc = new Dictionary_1.default();
    }
    Object.defineProperty(BattleScene, "Instance", {
        get: function () {
            if (!BattleScene._Instance) {
                BattleScene._Instance = new BattleScene();
            }
            return BattleScene._Instance;
        },
        enumerable: true,
        configurable: true
    });
    BattleScene.prototype.init = function () {
        EventManager_1.default.on(EventKey_1.default.RE_TRYPLAY, this, this.reTryPlay);
    };
    // 生成敌人
    BattleScene.prototype.createEnemy = function (initPos, isboss, monster, initPoint) {
        if (initPoint === void 0) { initPoint = null; }
        var soldier = BattleSoldier_1.default.create(initPos, isboss, monster, initPoint);
        Game_1.default.total.toastMsg("出现第" + Game_1.default.battleMap.levelWave + "个敌人" + Game_1.default.battleMap.curTime, true);
        this.enemyList.push(soldier);
    };
    // 重新开始游戏
    BattleScene.prototype.reTryPlay = function () {
        this.stoneReset();
        this.clearEnemy();
        Game_1.default.battleMap.openMap();
    };
    BattleScene.prototype.clearBattleScene = function () {
        Game_1.default.battleScene.stoneReset();
        Game_1.default.battleScene.clearEnemy();
        Game_1.default.battleScene.clearHero();
    };
    // 石头重生
    BattleScene.prototype.stoneReset = function () {
        for (var i = 0; i < 6; i++) {
            this.stoneList[i].reInit();
        }
    };
    // 战斗结束，移除怪物
    BattleScene.prototype.clearEnemy = function () {
        if (this.enemyList.length > 0) {
            for (var i = this.enemyList.length - 1; i >= 0; i--) {
                var enemy = this.enemyList[i];
                if (enemy) {
                    enemy.clearThis();
                }
                this.enemyList.splice(i, 1);
            }
        }
    };
    // 战斗结束，移除英雄
    BattleScene.prototype.clearHero = function () {
        for (var i = this.heroList.length - 1; i >= 0; i--) {
            var hero = this.heroList[i];
            this.heroList.splice(i, 1);
            hero.removeThis();
        }
    };
    // 在指定位置生成英雄
    BattleScene.prototype.initHeroSeat = function () {
        if (this.seatHeroDic.hasKey(this.seatHeroSelect)) {
            var cur = this.seatHeroDic.getValue(this.seatHeroSelect);
            var list = cur.getValues();
            for (var i = 0, len = list.length; i < len; i++) {
                if (list[i] > 0) {
                    var hero = BattleHero_1.default.create(list[i], i);
                    Game_1.default.battleScene.heroList.push(hero);
                }
            }
        }
    };
    return BattleScene;
}());
exports.default = BattleScene;
},{"../../Game":1,"../../Tool/Dictionary":5,"../../Tool/EventKey":6,"../../Tool/EventManager":7,"./BattleHero":159,"./BattleSoldier":164}],162:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventManager_1 = require("../../Tool/EventManager");
var Game_1 = require("../../Game");
var SoundKey_1 = require("../../fgui/SoundKey");
var BattleBuffHalo_1 = require("./BattleBuffHalo");
var EventKey_1 = require("../../Tool/EventKey");
var BattleSeat = /** @class */ (function (_super) {
    __extends(BattleSeat, _super);
    function BattleSeat(facade, index) {
        var _this = _super.call(this) || this;
        _this.facade = null;
        _this.frame = 0;
        _this.haloList = [];
        _this.facade = facade;
        _this._index = index;
        _this.facade.onClick(_this, _this.onClick);
        return _this;
    }
    BattleSeat.create = function (facade, index) {
        return new BattleSeat(facade, index);
    };
    BattleSeat.prototype.onShow = function () {
        EventManager_1.default.on(EventKey_1.default.ENTER_FRAME, this, this.update);
        EventManager_1.default.on(EventKey_1.default.ADD_HERO, this, this.addHero);
        EventManager_1.default.on(EventKey_1.default.REMOVE_HERO, this, this.removeHero);
    };
    BattleSeat.prototype.onClose = function () {
        this.facade.offClick(this, this.onClick);
        EventManager_1.default.offAllCaller(this);
    };
    BattleSeat.prototype.onClick = function () {
        // if (!PlayerData.newbie) {
        //     EventManager.event(ConstEvent.CLICK_SEAT, this._index);
        // }
        Game_1.default.sound.playSound(SoundKey_1.default.click);
        // if (Game.battleScene.seatHeroDic.hasKey(this._index)) {
        //     for (let i = Game.battleScene.heroList.length - 1; i >= 0; i--) {
        //         var hero: BattleHero = Game.battleScene.heroList[i] as BattleHero;
        //         if (hero.index == this._index) {
        //             Game.battleScene.heroList.splice(i, 1);
        //             hero.removeThis();
        //             Game.total.toastMsg("英雄被移除了！");
        //             Game.battleScene.seatHeroDic.remove(this._index);
        //             break;
        //         }
        //     }
        // }
        // else {
        //     Game.total.toastMsg("太好了，英雄召唤成功");
        //     let hero = BattleHero.create(12, this._index);
        //     Game.battleScene.heroList.push(hero);
        //     Game.battleScene.seatHeroDic.add(this._index, 12);
        // }
    };
    BattleSeat.prototype.update = function () {
        this.frame++;
        if (this.frame % this.INTERVAL != 0)
            return;
        if (this.haloList.length) {
            var _index = Math.floor(this.frame / this.INTERVAL) % this.haloList.length;
            for (var i = 0; i < this.haloList.length; i++) {
                var _buff = this.haloList[i];
                _buff.visible = (_index == i);
            }
        }
    };
    Object.defineProperty(BattleSeat.prototype, "INTERVAL", {
        get: function () {
            return 20;
        },
        enumerable: true,
        configurable: true
    });
    BattleSeat.prototype.addHero = function (seat, hero) {
        for (var i = 0; i < 2; i++) {
            var info = hero.haloList[i];
            if (info) {
                if (Math.floor(seat / 3) == Math.floor(this._index / 3)) {
                    var buff = BattleBuffHalo_1.default.create(hero, info);
                    this.addChild(buff);
                    this.haloList.push(buff);
                }
            }
        }
    };
    BattleSeat.prototype.removeHero = function (seat, hero) {
        for (var i = this.haloList.length - 1; i >= 0; i--) {
            var buff = this.haloList[i];
            if (buff.target == hero) {
                this.haloList.splice(i, 1);
                buff.destroy();
            }
        }
    };
    Object.defineProperty(BattleSeat.prototype, "addAP", {
        get: function () {
            var v = 0;
            for (var i = 0; i < this.haloList.length; i++) {
                var _buff = this.haloList[i];
                v += _buff.addAP;
            }
            return v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BattleSeat.prototype, "addSP", {
        get: function () {
            var v = 0;
            for (var i = 0; i < this.haloList.length; i++) {
                var _buff = this.haloList[i];
                if (_buff.addSP > v) {
                    v = _buff.addSP;
                }
            }
            return v;
        },
        enumerable: true,
        configurable: true
    });
    return BattleSeat;
}(Laya.Sprite));
exports.default = BattleSeat;
},{"../../Game":1,"../../Tool/EventKey":6,"../../Tool/EventManager":7,"../../fgui/SoundKey":132,"./BattleBuffHalo":157}],163:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SkillInfo_1 = require("../../dataInfo/SkillInfo");
var BattleSkillAttack = /** @class */ (function () {
    function BattleSkillAttack(id, cd) {
        this.skillInfo = null;
        this.cd = 0;
        this.maxCd = 0;
        this.skillInfo = SkillInfo_1.default.getInfo(id);
        this.cd = 0;
        this.maxCd = cd * 1000;
    }
    BattleSkillAttack.create = function (id, cd) {
        return new BattleSkillAttack(id, cd);
    };
    BattleSkillAttack.prototype.getReady = function (dt) {
        this.cd -= dt;
        if (this.cd <= 0) {
            return true;
        }
        return false;
    };
    /**
     * 施放技能
     */
    BattleSkillAttack.prototype.cast = function () {
        this.cd = this.maxCd;
    };
    return BattleSkillAttack;
}());
exports.default = BattleSkillAttack;
},{"../../dataInfo/SkillInfo":37}],164:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HeroAniEnums_1 = require("../DataEnums/HeroAniEnums");
var Game_1 = require("../../Game");
var Point = Laya.Point;
var EnemyData_1 = require("../DataStructs/EnemyData");
var EventKey_1 = require("../../Tool/EventKey");
var Pools_1 = require("../../Tool/Pools");
var EventManager_1 = require("../../Tool/EventManager");
var BattleModel_1 = require("./BattleModel");
var UI_Blood_1 = require("../../fgui/Extend/Battle/UI_Blood");
var UI_Shadow_1 = require("../../fgui/Extend/Battle/UI_Shadow");
var UI_DriftingBlood_1 = require("../../fgui/Extend/Battle/UI_DriftingBlood");
var GameStatus_1 = require("../DataEnums/GameStatus");
var Fun_1 = require("../../Tool/Fun");
var BattleSoldier = /** @class */ (function (_super) {
    __extends(BattleSoldier, _super);
    function BattleSoldier(initPos, isboss, monster, initPoint) {
        if (initPoint === void 0) { initPoint = null; }
        var _this = _super.call(this, true) || this;
        _this._id = 1;
        _this.speed = 0;
        _this.dataInf = null;
        _this.goalStone = null;
        _this.dataInf = monster;
        if (initPos == 0 || initPos == 1) {
            _this._id = 1;
            if (Math.random() * 6 < 3)
                _this._id = 28;
            _this._sk = Pools_1.default.skFetch("enemy_" + _this._id);
            if (_this._id == 1) {
                _this._sk.scale(2, 2);
            }
            _this.dataInf.skId = _this._id;
            _this.dataInf.scales = new Laya.Point(_this._sk.scaleX, _this._sk.scaleY);
            _this.dataInf.shadowScales = new Laya.Point(1.7, 1.7);
        }
        else if (initPos == 2) {
            _this._sk = Pools_1.default.skFetch("enemy_" + _this.dataInf.skId);
            _this._sk.scale(_this.dataInf.scales.x, _this.dataInf.scales.y);
        }
        _this.playStand();
        Game_1.default.parentObject.addChild(_this.sk);
        _this.sk.addLableEvent(Laya.Handler.create(_this, _this.frameEvent));
        _this.sk.addStopEvent(Laya.Handler.create(_this, _this.overEvent));
        // 添加血条
        _this.blood = Pools_1.default.fetch(UI_Blood_1.default);
        Game_1.default.bloodParent.addChild(_this.blood);
        _this.speed = _this.dataInf.monsterInf.move_speed * 0.1;
        _this.blood.max = _this.dataInf.curHp;
        _this.blood.value = _this.dataInf.maxHp;
        // 添加阴影
        _this.shadow = Pools_1.default.fetch(UI_Shadow_1.default);
        _this.shadow.setScale(_this.dataInf.shadowScales.x, _this.dataInf.shadowScales.y);
        Game_1.default.parentObject.addChild(_this.shadow.displayObject);
        _this.initPos = initPos;
        _this.init(initPoint);
        return _this;
    }
    BattleSoldier.create = function (initPos, isboss, monster, initPoint) {
        if (initPoint === void 0) { initPoint = null; }
        return new BattleSoldier(initPos, isboss, monster, initPoint);
    };
    BattleSoldier.prototype.updateBlood = function (x, y) {
        this.sk.pos(x, y);
        if (this.blood) {
            this.blood.setXY(x, y - 150);
        }
        if (this.shadow) {
            this.shadow.setXY(x, y);
        }
    };
    BattleSoldier.prototype.init = function (initPoint) {
        this.dataInf.curHp = this.dataInf.maxHp;
        this.blood.value = this.dataInf.maxHp;
        this.blood.max = this.dataInf.maxHp;
        this._haveDeath = false;
        this.blood.visible = false;
        if (this.initPos == 1) {
            this.initPoint = this.initPointTop;
        }
        else if (this.initPos == 0) {
            this.initPoint = this.initPointBom;
        }
        else {
            this.initPoint = initPoint;
        }
        this.updateBlood(this.initPoint.x, this.initPoint.y);
        if (this.initPos != 2) {
            this.setMovePath();
        }
        else {
            this.playMove();
        }
    };
    // 设置当前移动路径
    BattleSoldier.prototype.setMovePath = function () {
        this.goalStone = null;
        this.dataInf.curMoveX++;
        if (this.dataInf.curMoveX >= 4) {
            // 到达终点，游戏失败
            EventManager_1.default.event(EventKey_1.default.GAMELOSE);
            return;
        }
        this.dataInf.movePath = [];
        this.dataInf.curMoveIndex = 0;
        if (this.dataInf.curMoveX == 0) {
            this.dataInf.movePath.push(this.initPoint);
            if (this.initPos) {
                this.dataInf.movePath.push(new Point(this.pathX[this.dataInf.curMoveX], this.pathY[2]));
                this.dataInf.movePath.push(new Point(this.pathX[this.dataInf.curMoveX], this.pathY[1]));
                this.dataInf.movePath.push(new Point(this.pathX[this.dataInf.curMoveX], this.pathY[0]));
            }
            else {
                this.dataInf.movePath.push(new Point(this.pathX[this.dataInf.curMoveX], this.pathY[4]));
                this.dataInf.movePath.push(new Point(this.pathX[this.dataInf.curMoveX], this.pathY[5]));
                this.dataInf.movePath.push(new Point(this.pathX[this.dataInf.curMoveX], this.pathY[6]));
            }
        }
        else if (this.dataInf.curMoveX == 3) {
            if (this.dataInf.curStarIndex > 0) {
                this.dataInf.movePath.push(new Point(this.pathX[this.dataInf.curMoveX], this.pathY[this.dataInf.curStarIndex]));
                this.dataInf.movePath.push(new Point(this.pathX[this.dataInf.curMoveX], this.pathY[3]));
                this.dataInf.movePath.push(new Point(this.pathX[this.dataInf.curMoveX + 1], this.pathY[3]));
            }
            else {
                var mmmtop = false;
                if (this.initPos) {
                    mmmtop = this.dataInf.curMoveX % 2 == 1;
                }
                else {
                    mmmtop = this.dataInf.curMoveX % 2 == 0;
                }
                if (mmmtop) {
                    for (var i = 0, len = 4; i < len; i++) {
                        this.dataInf.movePath.push(new Point(this.pathX[this.dataInf.curMoveX], this.pathY[i]));
                    }
                }
                else {
                    for (var i = this.pathY.length - 1; i >= 3; i--) {
                        this.dataInf.movePath.push(new Point(this.pathX[this.dataInf.curMoveX], this.pathY[i]));
                    }
                }
                this.dataInf.movePath.push(new Point(this.pathX[this.dataInf.curMoveX + 1], this.pathY[3]));
            }
        }
        else {
            var mmmtop = false;
            if (this.initPos) {
                mmmtop = this.dataInf.curMoveX % 2 == 1;
            }
            else {
                mmmtop = this.dataInf.curMoveX % 2 == 0;
            }
            if (mmmtop) {
                for (var i = this.dataInf.curStarIndex, len = this.pathY.length; i < len; i++) {
                    this.dataInf.movePath.push(new Point(this.pathX[this.dataInf.curMoveX], this.pathY[i]));
                }
            }
            else {
                var start = this.dataInf.curStarIndex > 0 ? this.dataInf.curStarIndex : this.pathY.length - 1;
                for (var i = start; i >= 0; i--) {
                    this.dataInf.movePath.push(new Point(this.pathX[this.dataInf.curMoveX], this.pathY[i]));
                }
            }
        }
        this.dataInf.curStarIndex = 0;
        this.playMove();
    };
    BattleSoldier.prototype.update = function (dt) {
        _super.prototype.update.call(this, dt);
        switch (this.currentState) {
            case HeroAniEnums_1.HeroAniEnums.Move:
                {
                    // 移动
                    if (this.dataInf.curMoveIndex < this.dataInf.movePath.length) {
                        var disX = this.dataInf.movePath[this.dataInf.curMoveIndex].x - this.sk.x;
                        var disY = this.dataInf.movePath[this.dataInf.curMoveIndex].y - this.sk.y;
                        var dis = Math.pow(disX * disX + disY * disY, 0.5);
                        if (dis > this.speed) {
                            this.updateBlood(this.sk.x + disX * this.speed / dis, this.sk.y + disY * this.speed / dis);
                        }
                        else {
                            var xx = this.dataInf.movePath[this.dataInf.curMoveIndex].x;
                            var yy = this.dataInf.movePath[this.dataInf.curMoveIndex].y;
                            this.updateBlood(xx, yy);
                            var ran = Math.floor(Math.random() * 3);
                            if (ran == 1 && this._id != 1) {
                                var stone = null;
                                if (xx > 500 && xx < 1100) {
                                    var index = this.dataInf.curMoveX * 2;
                                    if (Math.abs(yy - 460) < 50) {
                                        if (this.dataInf.preStarIndex != 1) {
                                            stone = Game_1.default.battleScene.stoneList[index];
                                            this.dataInf.curStarIndex = 1;
                                            this.dataInf.preStarIndex = 1;
                                        }
                                    }
                                    else if (Math.abs(yy - 640) < 50) {
                                        if (this.dataInf.preStarIndex != 5) {
                                            stone = Game_1.default.battleScene.stoneList[index + 1];
                                            this.dataInf.curStarIndex = 5;
                                            this.dataInf.preStarIndex = 5;
                                        }
                                    }
                                }
                                if (stone && !stone.breaked) {
                                    this.goalStone = stone;
                                    this.standTime = 0;
                                    this.playAttack();
                                }
                                else {
                                    this.dataInf.curMoveIndex++;
                                }
                            }
                            else {
                                this.dataInf.curMoveIndex++;
                            }
                        }
                    }
                    else {
                        this.currentState = HeroAniEnums_1.HeroAniEnums.None;
                        this.dataInf.curStarIndex = 0;
                        this.setMovePath();
                    }
                }
                break;
            case HeroAniEnums_1.HeroAniEnums.Attack:
                {
                    if (this.goalStone == null || this.goalStone.breaked) {
                        break;
                    }
                    else {
                        // 攻击
                        this.standTime += dt;
                        if (this.standTime >= this.dataInf.interval) {
                            this.standTime = 0;
                            this.playAttack();
                        }
                    }
                }
                break;
            case HeroAniEnums_1.HeroAniEnums.Stand:
                if (this._posState == 0) {
                    console.log("break");
                    break;
                }
                if (this.goalStone == null || this.goalStone.breaked) {
                    this.currentState = HeroAniEnums_1.HeroAniEnums.None;
                    this.setMovePath();
                }
                else {
                    this.standTime += dt;
                    if (this.standTime >= this.dataInf.interval) {
                        this.playAttack();
                    }
                }
                break;
        }
    };
    BattleSoldier.prototype.frameEvent = function (event) {
        if (event.name == "cast_time") {
            switch (this.currentState) {
                case HeroAniEnums_1.HeroAniEnums.Attack:
                    this.hitStone();
                    break;
            }
        }
    };
    BattleSoldier.prototype.overEvent = function () {
        switch (this.currentState) {
            case HeroAniEnums_1.HeroAniEnums.Death:
                var point1 = new Laya.Point(this.sk.x, this.sk.y + 15 + Math.random() * 10);
                var point2 = new Laya.Point(this.sk.x, this.sk.y - 15 - Math.random() * 10);
                Pools_1.default.skRecycle(this.sk);
                if (Game_1.default.gameStatus == GameStatus_1.GameStatus.Gaming) {
                    if (this.dataInf.resurrection > 0) {
                        this.dataInf.resurrectionEnemy();
                        Game_1.default.battleScene.createEnemy(2, true, this.dataInf, point1);
                    }
                    else if (this.dataInf.splits > 0) {
                        var data1 = EnemyData_1.default.createSplitNew(this.dataInf);
                        var data2 = EnemyData_1.default.createSplitNew(this.dataInf);
                        Game_1.default.battleScene.createEnemy(2, true, data1, point1);
                        Game_1.default.battleScene.createEnemy(2, true, data2, point2);
                    }
                }
                this.destroy();
                break;
            case HeroAniEnums_1.HeroAniEnums.Attack:
                {
                    if (this.goalStone == null || this.goalStone.breaked) {
                        this.currentState = HeroAniEnums_1.HeroAniEnums.None;
                        this.setMovePath();
                    }
                    else if (this.dataInf.interval > 0) {
                        this.standTime = 0;
                        this._posState = 1;
                        this.playStand();
                    }
                    else {
                        this.playAttack();
                    }
                }
                break;
        }
    };
    // 攻击石头
    BattleSoldier.prototype.hitStone = function () {
        if (this.goalStone && !this.goalStone.breaked) {
            this.goalStone.hit(1);
        }
    };
    // 受到攻击
    BattleSoldier.prototype.skillHit = function (hero, skill) {
        if (this.dataInf.curHp <= 0) {
            return;
        }
        this.addBattleEffect(1, false);
        // this.addBattleEffect(1, false).removeNum();// 移除
        if (this.blood) {
            this.blood.visible = true;
            var sub = hero.dataInf.heroInf.normal_attack;
            if (hero.useSkillNum == 1) {
                sub = hero.dataInf.heroInf.skill_atk;
            }
            var drop_1 = Pools_1.default.fetch(UI_DriftingBlood_1.default);
            Game_1.default.bloodParent.addChild(drop_1);
            drop_1.setXY(this.blood.x - 50 + Math.random() * 50, this.blood.y);
            drop_1.title = Fun_1.default.format("-{0}", sub);
            drop_1.m_t0.play(Laya.Handler.create(this, function () {
                Pools_1.default.recycle(drop_1);
            }), 1);
            this.dataInf.curHp -= sub;
            this.blood.value = this.dataInf.curHp;
            if (this.dataInf.curHp <= 0) {
                this.enemyDeath();
            }
        }
    };
    return BattleSoldier;
}(BattleModel_1.default));
exports.default = BattleSoldier;
},{"../../Game":1,"../../Tool/EventKey":6,"../../Tool/EventManager":7,"../../Tool/Fun":8,"../../Tool/Pools":12,"../../fgui/Extend/Battle/UI_Blood":57,"../../fgui/Extend/Battle/UI_DriftingBlood":58,"../../fgui/Extend/Battle/UI_Shadow":60,"../DataEnums/GameStatus":134,"../DataEnums/HeroAniEnums":135,"../DataStructs/EnemyData":140,"./BattleModel":160}],165:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ModuleConfig = /** @class */ (function () {
    function ModuleConfig(menuId, windowClass) {
        this.menuId = menuId;
        this.windowClass = windowClass;
    }
    return ModuleConfig;
}());
exports.default = ModuleConfig;
},{}],166:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SoundManager = Laya.SoundManager;
var Handler = Laya.Handler;
var Dictionary_1 = require("../../Tool/Dictionary");
var SoundKey_1 = require("../../fgui/SoundKey");
var Game_1 = require("../../Game");
// 声音管理器
var AudioManager = /** @class */ (function () {
    function AudioManager() {
        // 正在播放中的音效列表
        this.soundPlayingDic = new Dictionary_1.default();
        this.localUseGlobal = true;
    }
    // 初始化
    AudioManager.prototype.install = function () {
    };
    AudioManager.prototype.onLogin = function () {
        this.muted = this.muted;
        this.soundMuted = this.soundMuted;
        this.musicMuted = this.musicMuted;
        this.musicVolume = this.musicVolume;
        this.soundVolume = this.soundVolume;
    };
    /**
     * 播放背景音乐。背景音乐同时只能播放一个，如果在播放背景音乐时再次调用本方法，会先停止之前的背景音乐，再播发当前的背景音乐。
     * @param soundKey	声音Key。
     * @param loops		循环次数,0表示无限循环。
     * @param complete	声音播放完成回调。
     * @param startTime	声音播放起始时间。
     * @return SoundChannel对象，通过此对象可以对声音进行控制，以及获取声音信息。
     */
    AudioManager.prototype.playMusic = function (soundKey, loops, complete, startTime) {
        // if (BrowserDetect.isMobile)
        // 	return;
        this.lastMusic = soundKey;
        if (this.musicMuted) {
            return;
        }
        var path = SoundKey_1.default.getPath(soundKey);
        SoundManager.stopMusic();
        return SoundManager.playMusic(path, loops, complete, startTime);
    };
    /**
     * 重新播放背景音乐
     */
    AudioManager.prototype.replayMusic = function () {
        if (this.lastMusic) {
            this.playMusic(this.lastMusic);
        }
        else {
            this.playMusic(SoundKey_1.default.bgm_1);
        }
    };
    /**
     * 播放音效。音效可以同时播放多个。
     * @param url			声音文件地址。
     * @param isStopPreSound 是否停止其它声音
     * @param loops			循环次数,0表示无限循环。
     * @param complete		声音播放完成回调  Handler对象。
     * @param soundClass	使用哪个声音类进行播放，null表示自动选择。
     * @param startTime		声音播放起始时间。
     * @return SoundChannel对象，通过此对象可以对声音进行控制，以及获取声音信息。
     */
    AudioManager.prototype.playSound = function (soundKey, isStopPreSound, loops, complete, startTime) {
        if (!this.soundPlayingDic || this.soundPlayingDic === null) {
            this.soundPlayingDic = new Dictionary_1.default();
        }
        if (isStopPreSound) {
            this.stopAllSound();
            this.soundPlayingDic.clear();
        }
        var path = SoundKey_1.default.getPath(soundKey);
        var isPlay = true;
        if (!complete || complete === null) {
            complete = Handler.create(this, this.playSoundComplete, [path]);
            if (this.soundPlayingDic.hasKey(path)) {
                isPlay = false;
            }
        }
        if (isPlay) {
            var soundChannel = SoundManager.playSound(path, loops, complete, startTime);
            this.soundPlayingDic.add(path, soundChannel);
        }
        return this.soundPlayingDic.getValue(path);
    };
    // 声音播放完成
    AudioManager.prototype.playSoundComplete = function (path) {
        if (this.soundPlayingDic.hasKey(path)) {
            this.soundPlayingDic.remove(path);
        }
    };
    /**
     * 停止声音播放。此方法能够停止任意声音的播放（包括背景音乐和音效），只需传入对应的声音播放地址。
     * @param url  声音文件地址。
     */
    AudioManager.prototype.stopSound = function (soundKey) {
        var path = SoundKey_1.default.getPath(soundKey);
        if (this.soundPlayingDic.hasKey(path)) {
            this.soundPlayingDic.remove(path);
        }
        SoundManager.stopSound(path);
    };
    /**
     * 停止播放所有声音（包括背景音乐和音效）。
     */
    AudioManager.prototype.stopAll = function () {
        if (this.soundPlayingDic) {
            this.soundPlayingDic.clear();
        }
        SoundManager.stopAll();
    };
    /**
     * 停止播放所有音效（不包括背景音乐）。
     */
    AudioManager.prototype.stopAllSound = function () {
        if (this.soundPlayingDic) {
            this.soundPlayingDic.clear();
        }
        SoundManager.stopAllSound();
    };
    /**
     * 停止播放背景音乐（不包括音效）。
     * @param url  声音文件地址。
     */
    AudioManager.prototype.stopMusic = function () {
        SoundManager.stopMusic();
    };
    Object.defineProperty(AudioManager.prototype, "muted", {
        get: function () {
            if (this._muted === undefined) {
                this._muted = Game_1.default.localStorage.hasItem("sound_muted", this.localUseGlobal) ? Game_1.default.localStorage.getBoolean("sound_muted", this.localUseGlobal) : false;
            }
            return this._muted;
        },
        set: function (value) {
            this._muted = value;
            Game_1.default.localStorage.setBoolean("sound_muted", value, this.localUseGlobal);
            SoundManager.muted = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AudioManager.prototype, "soundMuted", {
        get: function () {
            if (this._soundMuted === undefined) {
                this._soundMuted = Game_1.default.localStorage.hasItem("sound_soundMuted", this.localUseGlobal) ? Game_1.default.localStorage.getBoolean("sound_soundMuted", this.localUseGlobal) : false;
            }
            return this._soundMuted;
        },
        set: function (value) {
            this._soundMuted = value;
            Game_1.default.localStorage.setBoolean("sound_soundMuted", value, this.localUseGlobal);
            SoundManager.soundMuted = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AudioManager.prototype, "musicMuted", {
        get: function () {
            if (this._musicMuted === undefined) {
                this._musicMuted = Game_1.default.localStorage.hasItem("sound_musicMuted", this.localUseGlobal) ? Game_1.default.localStorage.getBoolean("sound_musicMuted", this.localUseGlobal) : false;
            }
            return this._musicMuted;
        },
        set: function (value) {
            this._musicMuted = value;
            Game_1.default.localStorage.setBoolean("sound_musicMuted", value, this.localUseGlobal);
            SoundManager.musicMuted = value;
            if (value) {
                SoundManager.stopMusic();
            }
            else {
                this.replayMusic();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AudioManager.prototype, "musicVolume", {
        get: function () {
            if (this._musicVolume === undefined) {
                this._musicVolume = Game_1.default.localStorage.hasItem("sound_musicVolume", this.localUseGlobal) ? Game_1.default.localStorage.getFloat("sound_musicVolume", this.localUseGlobal) : 1;
            }
            return this._musicVolume;
        },
        set: function (value) {
            this._musicVolume = value;
            Game_1.default.localStorage.setFloat("sound_musicVolume", value, this.localUseGlobal);
            SoundManager.musicVolume = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AudioManager.prototype, "soundVolume", {
        get: function () {
            if (this._soundVolume === undefined) {
                this._soundVolume = Game_1.default.localStorage.hasItem("sound_soundVolume", this.localUseGlobal) ? Game_1.default.localStorage.getFloat("sound_soundVolume", this.localUseGlobal) : 1;
            }
            return this._soundVolume;
        },
        set: function (value) {
            this._soundVolume = value;
            Game_1.default.localStorage.setFloat("sound_soundVolume", value, this.localUseGlobal);
            SoundManager.soundVolume = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AudioManager.prototype, "autoStopMusic", {
        get: function () {
            return this._autoStopMusic;
        },
        set: function (value) {
            SoundManager.autoStopMusic = value;
            this._autoStopMusic = value;
        },
        enumerable: true,
        configurable: true
    });
    return AudioManager;
}());
exports.default = AudioManager;
},{"../../Game":1,"../../Tool/Dictionary":5,"../../fgui/SoundKey":132}],167:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var UI_GuideLayer_1 = require("../../fgui/Extend/System/UI_GuideLayer");
var SystemGuide = /** @class */ (function () {
    function SystemGuide() {
        this._guideLayer = null;
    }
    Object.defineProperty(SystemGuide, "Instance", {
        get: function () {
            if (!SystemGuide._Instance) {
                SystemGuide._Instance = new SystemGuide();
            }
            return SystemGuide._Instance;
        },
        enumerable: true,
        configurable: true
    });
    SystemGuide.prototype.showGuide = function (target, onComplete) {
        if (this._guideLayer == null) {
            this._guideLayer = UI_GuideLayer_1.default.createInstance();
        }
        this._guideLayer.showGuide(target, onComplete);
    };
    SystemGuide.prototype.hideGuide = function () {
        if (this._guideLayer != null) {
            this._guideLayer.hideGuide();
        }
    };
    return SystemGuide;
}());
exports.default = SystemGuide;
},{"../../fgui/Extend/System/UI_GuideLayer":78}],168:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var UI_PopupMenu_1 = require("../../fgui/Extend/System/UI_PopupMenu");
var SystemPopup = /** @class */ (function () {
    function SystemPopup() {
        this._popupMenu = null;
    }
    Object.defineProperty(SystemPopup, "Instance", {
        get: function () {
            if (!SystemPopup._Instance) {
                SystemPopup._Instance = new SystemPopup();
            }
            return SystemPopup._Instance;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 显示popup弹出提示
     * @param button 点击哪个按钮
     * @param showInBtnPos 是否在按钮位置弹出popup，true表示在按钮位置，false表示在鼠标点击的位置弹出
     * @param arg 数据，待定
     */
    SystemPopup.prototype.showPopup = function (button, showInBtnPos) {
        if (showInBtnPos === void 0) { showInBtnPos = true; }
        var arg = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            arg[_i - 2] = arguments[_i];
        }
        if (this._popupMenu == null) {
            this._popupMenu = UI_PopupMenu_1.default.createInstance();
        }
        this._popupMenu.showPopup(button, showInBtnPos, arg);
    };
    return SystemPopup;
}());
exports.default = SystemPopup;
},{"../../fgui/Extend/System/UI_PopupMenu":80}],169:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Handler = Laya.Handler;
var UI_TipWin_1 = require("../../fgui/Extend/System/UI_TipWin");
var SystemTipWin = /** @class */ (function () {
    function SystemTipWin() {
        // 所有的
        this.list = [];
        // 可以使用的池
        this.pools = [];
    }
    Object.defineProperty(SystemTipWin, "Instance", {
        get: function () {
            if (!SystemTipWin._Instance) {
                SystemTipWin._Instance = new SystemTipWin();
            }
            return SystemTipWin._Instance;
        },
        enumerable: true,
        configurable: true
    });
    SystemTipWin.prototype.showTip = function (txt, onComplete) {
        if (this._onCompleteHandler) {
            this._onCompleteHandler.recover();
        }
        var item;
        if (this.pools.length > 0) {
            item = this.pools.pop();
        }
        else {
            item = UI_TipWin_1.default.createInstance();
            this.list.push(item);
        }
        this._onCompleteHandler = onComplete;
        item.showTxt(txt, Handler.create(this, this.onItemComplete));
    };
    SystemTipWin.prototype.onItemComplete = function (item) {
        this.pools.push(item);
        if (this._onCompleteHandler) {
            this._onCompleteHandler.runWith(this);
            this._onCompleteHandler.recover();
            this._onCompleteHandler = null;
        }
    };
    return SystemTipWin;
}());
exports.default = SystemTipWin;
},{"../../fgui/Extend/System/UI_TipWin":82}],170:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dictionary_1 = require("../../Tool/Dictionary");
var UI_TotalMessage_1 = require("../../fgui/Extend/System/UI_TotalMessage");
var SystemToastMessag = /** @class */ (function () {
    function SystemToastMessag() {
        // 所有的
        this.list = [];
        // 可以使用的池
        this.pools = [];
        this.timeSpacing = 1;
        this.moveDic = new Dictionary_1.default();
    }
    Object.defineProperty(SystemToastMessag, "Instance", {
        get: function () {
            if (!SystemToastMessag._Instance) {
                SystemToastMessag._Instance = new SystemToastMessag();
            }
            return SystemToastMessag._Instance;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 浮动消息
     * @param txt 消息内容
     * @param move 是否跑马灯
     */
    SystemToastMessag.prototype.toastMsg = function (txt, move) {
        if (move === void 0) { move = false; }
        this.moveDic.add(txt, move);
        if (txt != this.lastTxt) {
            this.show(txt);
        }
        else if (new Date().getTime() - this.lastTime >= this.timeSpacing) {
            this.show(txt);
        }
    };
    SystemToastMessag.prototype.show = function (txt) {
        this.lastTxt = txt;
        this.lastTime = new Date().getTime();
        var item;
        if (this.pools.length > 0) {
            item = this.pools.pop();
        }
        else {
            item = UI_TotalMessage_1.default.createInstance();
            this.list.push(item);
        }
        if (this.moveDic.getValue(txt)) {
            item.playMove(txt, Laya.Handler.create(this, this.onItemComplete));
        }
        else {
            item.playTop(txt, Laya.Handler.create(this, this.onItemComplete));
        }
    };
    SystemToastMessag.prototype.onItemComplete = function (item) {
        this.pools.push(item);
    };
    return SystemToastMessag;
}());
exports.default = SystemToastMessag;
},{"../../Tool/Dictionary":5,"../../fgui/Extend/System/UI_TotalMessage":83}],171:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var FWindow_1 = require("../FWindow");
var UI_ArrangementMain_1 = require("../../fgui/Extend/Arrangement/UI_ArrangementMain");
var UI_PropBtn_1 = require("../../fgui/Extend/Arrangement/UI_PropBtn");
var UI_Recommend_1 = require("../../fgui/Extend/Arrangement/UI_Recommend");
var UI_Association_1 = require("../../fgui/Extend/Arrangement/UI_Association");
var UI_txt_1 = require("../../fgui/Extend/Arrangement/UI_txt");
var UI_HeroInfo_1 = require("../../fgui/Extend/Arrangement/UI_HeroInfo");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var ArrangementWin = /** @class */ (function (_super) {
    __extends(ArrangementWin, _super);
    function ArrangementWin() {
        var _this = _super.call(this) || this;
        _this.addAssetForFguiComponent(UI_ArrangementMain_1.default);
        _this.addAssetForFguiComponent(UI_PropBtn_1.default);
        _this.addAssetForFguiComponent(UI_Recommend_1.default);
        _this.addAssetForFguiComponent(UI_HeroInfo_1.default);
        _this.addAssetForFguiComponent(UI_Association_1.default);
        _this.addAssetForFguiComponent(UI_txt_1.default);
        return _this;
    }
    ArrangementWin.prototype.onMenuCreate = function () {
        this.content = UI_ArrangementMain_1.default.createInstance();
        this.contentPane = this.content;
        _super.prototype.onMenuCreate.call(this);
    };
    ArrangementWin.prototype.createRecommend = function () {
        if (!this.Recommend || this.Recommend == null) {
            this.Recommend = UI_Recommend_1.default.createInstance();
        }
        this.windowAddChild(this.Recommend);
        this.Recommend.setXY(this.content.m_recommendPos.x, this.content.m_recommendPos.y);
    };
    ArrangementWin.prototype.createHeroInfoUI = function () {
        if (!this.HeroInfoUI || this.HeroInfoUI == null) {
            this.HeroInfoUI = UI_HeroInfo_1.default.createInstance();
        }
        this.windowAddChild(this.HeroInfoUI);
    };
    return ArrangementWin;
}(FWindow_1.default));
exports.default = ArrangementWin;
},{"../../fgui/Extend/Arrangement/UI_ArrangementMain":43,"../../fgui/Extend/Arrangement/UI_Association":44,"../../fgui/Extend/Arrangement/UI_HeroInfo":45,"../../fgui/Extend/Arrangement/UI_PropBtn":46,"../../fgui/Extend/Arrangement/UI_Recommend":47,"../../fgui/Extend/Arrangement/UI_txt":48,"../FWindow":148}],172:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var FWindow_1 = require("../FWindow");
var UI_BagMain_1 = require("../../fgui/Extend/Bag/UI_BagMain");
var UI_HeroInfo_1 = require("../../fgui/Extend/Arrangement/UI_HeroInfo");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var BagWin = /** @class */ (function (_super) {
    __extends(BagWin, _super);
    function BagWin() {
        var _this = _super.call(this) || this;
        _this.addAssetForFguiComponent(UI_BagMain_1.default);
        return _this;
    }
    BagWin.prototype.onMenuCreate = function () {
        this.content = UI_BagMain_1.default.createInstance();
        this.contentPane = this.content;
        _super.prototype.onMenuCreate.call(this);
    };
    BagWin.prototype.createHeroInfoUI = function () {
        if (!this.HeroInfoUI || this.HeroInfoUI == null) {
            this.HeroInfoUI = UI_HeroInfo_1.default.createInstance();
        }
        this.windowAddChild(this.HeroInfoUI);
    };
    return BagWin;
}(FWindow_1.default));
exports.default = BagWin;
},{"../../fgui/Extend/Arrangement/UI_HeroInfo":45,"../../fgui/Extend/Bag/UI_BagMain":49,"../FWindow":148}],173:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var FWindow_1 = require("../FWindow");
var UI_AssociationBtn_1 = require("../../fgui/Extend/Battle/UI_AssociationBtn");
var UI_bagua_1 = require("../../fgui/Extend/Battle/UI_bagua");
var UI_BattleLeftBottom_1 = require("../../fgui/Extend/Battle/UI_BattleLeftBottom");
var UI_BattleLeftTop_1 = require("../../fgui/Extend/Battle/UI_BattleLeftTop");
var UI_BattleMain_1 = require("../../fgui/Extend/Battle/UI_BattleMain");
var UI_BattleRightBottom_1 = require("../../fgui/Extend/Battle/UI_BattleRightBottom");
var UI_BattleRightTop_1 = require("../../fgui/Extend/Battle/UI_BattleRightTop");
var UI_BattleTopMiddle_1 = require("../../fgui/Extend/Battle/UI_BattleTopMiddle");
var UI_Blood_1 = require("../../fgui/Extend/Battle/UI_Blood");
var UI_DriftingBlood_1 = require("../../fgui/Extend/Battle/UI_DriftingBlood");
var UI_GameOver_1 = require("../../fgui/Extend/Battle/UI_GameOver");
var UI_Shadow_1 = require("../../fgui/Extend/Battle/UI_Shadow");
var UI_SkillBtn_1 = require("../../fgui/Extend/Battle/UI_SkillBtn");
var UI_Stone_1 = require("../../fgui/Extend/Battle/UI_Stone");
var Fun_1 = require("../../Tool/Fun");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var BattleWin = /** @class */ (function (_super) {
    __extends(BattleWin, _super);
    function BattleWin() {
        var _this = _super.call(this) || this;
        _this.addAssetForFguiComponent(UI_AssociationBtn_1.default);
        _this.addAssetForFguiComponent(UI_bagua_1.default);
        _this.addAssetForFguiComponent(UI_BattleLeftBottom_1.default);
        _this.addAssetForFguiComponent(UI_BattleLeftTop_1.default);
        _this.addAssetForFguiComponent(UI_BattleMain_1.default);
        _this.addAssetForFguiComponent(UI_BattleRightBottom_1.default);
        _this.addAssetForFguiComponent(UI_BattleRightTop_1.default);
        _this.addAssetForFguiComponent(UI_BattleTopMiddle_1.default);
        _this.addAssetForFguiComponent(UI_Blood_1.default);
        _this.addAssetForFguiComponent(UI_DriftingBlood_1.default);
        _this.addAssetForFguiComponent(UI_GameOver_1.default);
        _this.addAssetForFguiComponent(UI_Shadow_1.default);
        _this.addAssetForFguiComponent(UI_SkillBtn_1.default);
        _this.addAssetForFguiComponent(UI_Stone_1.default);
        return _this;
    }
    BattleWin.prototype.onMenuCreate = function () {
        this.content = UI_BattleMain_1.default.createInstance();
        this.contentPane = this.content;
        _super.prototype.onMenuCreate.call(this);
    };
    // 游戏结束，胜利或失败
    BattleWin.prototype.gameResult = function () {
        if (!this.GameOver || this.GameOver == null) {
            this.GameOver = UI_GameOver_1.default.createInstance();
        }
        this.windowAddChild(this.GameOver);
    };
    // 左上角UI
    BattleWin.prototype.createLeftTop = function () {
        if (!this.BattleLeftTop || this.BattleLeftTop == null) {
            this.BattleLeftTop = UI_BattleLeftTop_1.default.createInstance();
        }
        this.windowAddChild(this.BattleLeftTop);
        this.BattleLeftTop.setXY(Fun_1.default.leftTopPoint.x, Fun_1.default.leftTopPoint.y);
    };
    // 左下角UI
    BattleWin.prototype.createLeftBottom = function () {
        if (!this.BattleLeftBottom || this.BattleLeftBottom == null) {
            this.BattleLeftBottom = UI_BattleLeftBottom_1.default.createInstance();
        }
        this.windowAddChild(this.BattleLeftBottom);
        this.BattleLeftBottom.setXY(Fun_1.default.leftBottomPoint.x, Fun_1.default.leftBottomPoint.y);
    };
    // 右上角UI
    BattleWin.prototype.createRightTop = function () {
        if (!this.BattleRightTop || this.BattleRightTop == null) {
            this.BattleRightTop = UI_BattleRightTop_1.default.createInstance();
        }
        this.windowAddChild(this.BattleRightTop);
        this.BattleRightTop.setXY(Fun_1.default.rightTopPoint.x, Fun_1.default.rightTopPoint.y);
    };
    // 右下角UI
    BattleWin.prototype.createRightBottom = function () {
        if (!this.BattleRightBottom || this.BattleRightBottom == null) {
            this.BattleRightBottom = UI_BattleRightBottom_1.default.createInstance();
        }
        this.windowAddChild(this.BattleRightBottom);
        this.BattleRightBottom.setXY(Fun_1.default.rightBottomPoint.x, Fun_1.default.rightBottomPoint.y);
    };
    // 顶部中间UI
    BattleWin.prototype.createTopMiddle = function () {
        if (!this.BattleTopMiddle || this.BattleTopMiddle == null) {
            this.BattleTopMiddle = UI_BattleTopMiddle_1.default.createInstance();
        }
        this.windowAddChild(this.BattleTopMiddle);
        this.BattleTopMiddle.setXY(Fun_1.default.topMiddlePoint.x, Fun_1.default.topMiddlePoint.y);
    };
    return BattleWin;
}(FWindow_1.default));
exports.default = BattleWin;
},{"../../Tool/Fun":8,"../../fgui/Extend/Battle/UI_AssociationBtn":50,"../../fgui/Extend/Battle/UI_BattleLeftBottom":51,"../../fgui/Extend/Battle/UI_BattleLeftTop":52,"../../fgui/Extend/Battle/UI_BattleMain":53,"../../fgui/Extend/Battle/UI_BattleRightBottom":54,"../../fgui/Extend/Battle/UI_BattleRightTop":55,"../../fgui/Extend/Battle/UI_BattleTopMiddle":56,"../../fgui/Extend/Battle/UI_Blood":57,"../../fgui/Extend/Battle/UI_DriftingBlood":58,"../../fgui/Extend/Battle/UI_GameOver":59,"../../fgui/Extend/Battle/UI_Shadow":60,"../../fgui/Extend/Battle/UI_SkillBtn":61,"../../fgui/Extend/Battle/UI_Stone":62,"../../fgui/Extend/Battle/UI_bagua":63,"../FWindow":148}],174:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var FWindow_1 = require("../FWindow");
var UI_GMMain_1 = require("../../fgui/Extend/GM/UI_GMMain");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var GMWin = /** @class */ (function (_super) {
    __extends(GMWin, _super);
    function GMWin() {
        var _this = _super.call(this) || this;
        _this.addAssetForFguiComponent(UI_GMMain_1.default);
        return _this;
    }
    GMWin.prototype.onMenuCreate = function () {
        this.content = UI_GMMain_1.default.createInstance();
        this.contentPane = this.content;
        _super.prototype.onMenuCreate.call(this);
    };
    return GMWin;
}(FWindow_1.default));
exports.default = GMWin;
},{"../../fgui/Extend/GM/UI_GMMain":64,"../FWindow":148}],175:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var FWindow_1 = require("../FWindow");
var UI_GeneralBtns_1 = require("../../fgui/Extend/Home/UI_GeneralBtns");
var UI_HomeMain_1 = require("../../fgui/Extend/Home/UI_HomeMain");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var HomeWin = /** @class */ (function (_super) {
    __extends(HomeWin, _super);
    function HomeWin() {
        var _this = _super.call(this) || this;
        _this.addAssetForFguiComponent(UI_GeneralBtns_1.default);
        _this.addAssetForFguiComponent(UI_HomeMain_1.default);
        return _this;
    }
    HomeWin.prototype.onMenuCreate = function () {
        this.content = UI_HomeMain_1.default.createInstance();
        this.contentPane = this.content;
        _super.prototype.onMenuCreate.call(this);
    };
    return HomeWin;
}(FWindow_1.default));
exports.default = HomeWin;
},{"../../fgui/Extend/Home/UI_GeneralBtns":65,"../../fgui/Extend/Home/UI_HomeMain":66,"../FWindow":148}],176:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var FWindow_1 = require("../FWindow");
var UI_HeadIcon_1 = require("../../fgui/Extend/Menus/UI_HeadIcon");
var UI_HeadIcon2_1 = require("../../fgui/Extend/Menus/UI_HeadIcon2");
var UI_HeroIcon_1 = require("../../fgui/Extend/Menus/UI_HeroIcon");
var UI_MenusMain_1 = require("../../fgui/Extend/Menus/UI_MenusMain");
var UI_Selection_1 = require("../../fgui/Extend/Menus/UI_Selection");
var UI_selectionBtn_1 = require("../../fgui/Extend/Menus/UI_selectionBtn");
var UI_Trial_1 = require("../../fgui/Extend/Menus/UI_Trial");
var UI_WaveTip_1 = require("../../fgui/Extend/Menus/UI_WaveTip");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var MenusWin = /** @class */ (function (_super) {
    __extends(MenusWin, _super);
    function MenusWin() {
        var _this = _super.call(this) || this;
        _this.addAssetForFguiComponent(UI_HeadIcon_1.default);
        _this.addAssetForFguiComponent(UI_HeadIcon2_1.default);
        _this.addAssetForFguiComponent(UI_HeroIcon_1.default);
        _this.addAssetForFguiComponent(UI_MenusMain_1.default);
        _this.addAssetForFguiComponent(UI_Selection_1.default);
        _this.addAssetForFguiComponent(UI_selectionBtn_1.default);
        _this.addAssetForFguiComponent(UI_Trial_1.default);
        _this.addAssetForFguiComponent(UI_WaveTip_1.default);
        return _this;
    }
    MenusWin.prototype.onMenuCreate = function () {
        this.content = UI_MenusMain_1.default.createInstance();
        this.contentPane = this.content;
        _super.prototype.onMenuCreate.call(this);
    };
    MenusWin.prototype.createTrialUI = function () {
        if (!this.Trial || this.Trial == null) {
            this.Trial = UI_Trial_1.default.createInstance();
        }
        this.windowAddChild(this.Trial);
        if (!this.menuParameter.initFunction.hasKey(this.Trial.id)) {
            this.menuParameter.initFunction.add(this.Trial.id, this.createTrialUI);
        }
    };
    return MenusWin;
}(FWindow_1.default));
exports.default = MenusWin;
},{"../../fgui/Extend/Menus/UI_HeadIcon":67,"../../fgui/Extend/Menus/UI_HeadIcon2":68,"../../fgui/Extend/Menus/UI_HeroIcon":69,"../../fgui/Extend/Menus/UI_MenusMain":70,"../../fgui/Extend/Menus/UI_Selection":71,"../../fgui/Extend/Menus/UI_Trial":72,"../../fgui/Extend/Menus/UI_WaveTip":73,"../../fgui/Extend/Menus/UI_selectionBtn":74,"../FWindow":148}],177:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var FWindow_1 = require("../FWindow");
var UI_Circle_1 = require("../../fgui/Extend/System/UI_Circle");
var UI_CloseBtn_1 = require("../../fgui/Extend/System/UI_CloseBtn");
var UI_GeneralBtn_1 = require("../../fgui/Extend/System/UI_GeneralBtn");
var UI_GuideLayer_1 = require("../../fgui/Extend/System/UI_GuideLayer");
var UI_OkBtn_1 = require("../../fgui/Extend/System/UI_OkBtn");
var UI_PopupMenu_1 = require("../../fgui/Extend/System/UI_PopupMenu");
var UI_ScrollTxt_1 = require("../../fgui/Extend/System/UI_ScrollTxt");
var UI_TipWin_1 = require("../../fgui/Extend/System/UI_TipWin");
var UI_TotalMessage_1 = require("../../fgui/Extend/System/UI_TotalMessage");
/** 此文件自动生成，可以直接修改，后续不会覆盖 **/
var SystemWin = /** @class */ (function (_super) {
    __extends(SystemWin, _super);
    function SystemWin() {
        var _this = _super.call(this) || this;
        _this.addAssetForFguiComponent(UI_Circle_1.default);
        _this.addAssetForFguiComponent(UI_CloseBtn_1.default);
        _this.addAssetForFguiComponent(UI_GeneralBtn_1.default);
        _this.addAssetForFguiComponent(UI_GuideLayer_1.default);
        _this.addAssetForFguiComponent(UI_OkBtn_1.default);
        _this.addAssetForFguiComponent(UI_PopupMenu_1.default);
        _this.addAssetForFguiComponent(UI_ScrollTxt_1.default);
        _this.addAssetForFguiComponent(UI_TipWin_1.default);
        _this.addAssetForFguiComponent(UI_TotalMessage_1.default);
        return _this;
    }
    SystemWin.prototype.onMenuCreate = function () {
        this.content = UI_Circle_1.default.createInstance();
        this.contentPane = this.content;
        _super.prototype.onMenuCreate.call(this);
    };
    return SystemWin;
}(FWindow_1.default));
exports.default = SystemWin;
},{"../../fgui/Extend/System/UI_Circle":75,"../../fgui/Extend/System/UI_CloseBtn":76,"../../fgui/Extend/System/UI_GeneralBtn":77,"../../fgui/Extend/System/UI_GuideLayer":78,"../../fgui/Extend/System/UI_OkBtn":79,"../../fgui/Extend/System/UI_PopupMenu":80,"../../fgui/Extend/System/UI_ScrollTxt":81,"../../fgui/Extend/System/UI_TipWin":82,"../../fgui/Extend/System/UI_TotalMessage":83,"../FWindow":148}],178:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ProtoServer_1 = require("./ProtoServer");
var EventManager_1 = require("../Tool/EventManager");
var ProtoEvent_1 = require("./ProtoEvent");
var Proto = /** @class */ (function () {
    function Proto() {
    }
    Proto.prototype.send = function (data) {
        if (data === void 0) { data = {}; }
    };
    Proto.prototype.request = function (data) {
        ProtoServer_1.default.request(data);
    };
    Proto.prototype.callBack = function (json) {
        this.read(json);
        this.callEvent();
    };
    Proto.prototype.read = function (json) {
    };
    Proto.prototype.callEvent = function () {
        EventManager_1.default.event(ProtoEvent_1.default.getProtoEvent(this.protoid));
    };
    return Proto;
}());
exports.default = Proto;
},{"../Tool/EventManager":7,"./ProtoEvent":191,"./ProtoServer":194}],179:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Proto_1 = require("./Proto");
var Game_1 = require("../Game");
var Proto1000 = /** @class */ (function (_super) {
    __extends(Proto1000, _super);
    function Proto1000() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.protoid = 1000;
        return _this;
    }
    Proto1000.prototype.send = function (data) {
        if (data === void 0) { data = {}; }
        var sendData = {
            protoId: this.protoid,
            data: data,
        };
        this.request(sendData);
    };
    Proto1000.prototype.read = function (json) {
        Game_1.default.configs.setCSVInit(json);
    };
    return Proto1000;
}(Proto_1.default));
exports.default = Proto1000;
},{"../Game":1,"./Proto":178}],180:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Proto_1 = require("./Proto");
var Game_1 = require("../Game");
var Dictionary_1 = require("../Tool/Dictionary");
var Proto1001 = /** @class */ (function (_super) {
    __extends(Proto1001, _super);
    function Proto1001() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.protoid = 1001;
        return _this;
    }
    Proto1001.prototype.send = function (data) {
        if (data === void 0) { data = {}; }
        var sendData = {
            protoId: this.protoid,
            data: data,
        };
        this.request(sendData);
    };
    // any == T
    Proto1001.prototype.read = function (json) {
        Game_1.default.userData.openid = json.openId;
        Game_1.default.userData.playerid = json.playerId;
        Game_1.default.userData.password = json.password;
        Game_1.default.playData.newbie = Boolean(json.newbie);
        // 货币情况
        Game_1.default.playData.curGold = Number(json.gold);
        Game_1.default.playData.curDiamond = Number(json.diamond);
        Game_1.default.playData.curJadeite = Number(json.jadeite);
        Game_1.default.playData.curMagic = Number(json.magic);
        // 英雄等级和星级
        Game_1.default.playData.curLevel = Number(json.level);
        Game_1.default.playData.curStar = Number(json.star);
        // 布阵情况
        Game_1.default.battleScene.seatHeroDic.clear();
        var seat = [json.seat.seat0, json.seat.seat1, json.seat.seat2];
        for (var j = 0; j < 3; j++) {
            Game_1.default.battleScene.seatHeroDic.add(j, new Dictionary_1.default());
            var dic = Game_1.default.battleScene.seatHeroDic.getValue(j);
            for (var i = 0; i < 9; i++) {
                dic.add(i, seat[j][i]);
            }
        }
        // 当前那个阵
        Game_1.default.battleScene.seatHeroSelect = Number(json.seatNum);
        // 拥有的英雄
        Game_1.default.playData.curHero = json.heros;
        // 拥有的碎片
        var clips = json.clips;
        var clipsDic = Game_1.default.playData.curClips;
        for (var i = clips.length - 1; i >= 0; i--) {
            clipsDic.add(clips[i].id, clips[i].clips);
        }
        // 关卡情况
        if (json.hasOwnProperty("map")) {
            Game_1.default.battleMap.init(json.map);
        }
    };
    return Proto1001;
}(Proto_1.default));
exports.default = Proto1001;
},{"../Game":1,"../Tool/Dictionary":5,"./Proto":178}],181:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Proto_1 = require("./Proto");
var Game_1 = require("../Game");
var Proto1002 = /** @class */ (function (_super) {
    __extends(Proto1002, _super);
    function Proto1002() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.protoid = 1002;
        return _this;
    }
    Proto1002.prototype.send = function (data) {
        if (data === void 0) { data = {}; }
        var sendData = {
            protoId: this.protoid,
            openId: Game_1.default.userData.openid,
            password: Game_1.default.userData.password,
            data: data,
        };
        this.request(sendData);
    };
    // any == T
    Proto1002.prototype.read = function (json) {
    };
    return Proto1002;
}(Proto_1.default));
exports.default = Proto1002;
},{"../Game":1,"./Proto":178}],182:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Proto_1 = require("./Proto");
var Game_1 = require("../Game");
var Proto1003 = /** @class */ (function (_super) {
    __extends(Proto1003, _super);
    function Proto1003() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.protoid = 1003;
        return _this;
    }
    Proto1003.prototype.send = function (data) {
        if (data === void 0) { data = {}; }
        var sendData = {
            protoId: this.protoid,
            openId: Game_1.default.userData.openid,
            password: Game_1.default.userData.password,
            data: data,
        };
        this.request(sendData);
    };
    // any == T
    Proto1003.prototype.read = function (json) {
        // let list = json.wave;
        // for (let i = 0, len = list.length; i < len; i++) {
        //     let wavestatus: WaveStatus = new WaveStatus();
        //     wavestatus.id = list[i].id;
        //     wavestatus.comple = list[i].comple;
        //     wavestatus.time = list[i].time;
        //     wavestatus.status = list[i].status;
        //     Game.battleMap.waveStatusDict.add(wavestatus.id, wavestatus);
        // }
    };
    return Proto1003;
}(Proto_1.default));
exports.default = Proto1003;
},{"../Game":1,"./Proto":178}],183:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Proto_1 = require("./Proto");
var Game_1 = require("../Game");
var Proto1004 = /** @class */ (function (_super) {
    __extends(Proto1004, _super);
    function Proto1004() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.protoid = 1004;
        return _this;
    }
    Proto1004.prototype.send = function (data) {
        if (data === void 0) { data = {}; }
        var sendData = {
            protoId: this.protoid,
            openId: Game_1.default.userData.openid,
            password: Game_1.default.userData.password,
            data: data,
        };
        this.request(sendData);
    };
    // any == T
    Proto1004.prototype.read = function (json) {
        Game_1.default.battleData.level_id = Number(json.waveId);
        Game_1.default.battleData.fight_type = Number(json.fightType);
    };
    return Proto1004;
}(Proto_1.default));
exports.default = Proto1004;
},{"../Game":1,"./Proto":178}],184:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Proto_1 = require("./Proto");
var Game_1 = require("../Game");
var Proto1005 = /** @class */ (function (_super) {
    __extends(Proto1005, _super);
    function Proto1005() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.protoid = 1005;
        return _this;
    }
    Proto1005.prototype.send = function (data) {
        if (data === void 0) { data = {}; }
        var sendData = {
            protoId: this.protoid,
            openId: Game_1.default.userData.openid,
            password: Game_1.default.userData.password,
            data: data,
        };
        this.request(sendData);
    };
    // any == T
    Proto1005.prototype.read = function (json) {
    };
    return Proto1005;
}(Proto_1.default));
exports.default = Proto1005;
},{"../Game":1,"./Proto":178}],185:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Proto_1 = require("./Proto");
var Game_1 = require("../Game");
var Proto1006 = /** @class */ (function (_super) {
    __extends(Proto1006, _super);
    function Proto1006() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.protoid = 1006;
        return _this;
    }
    Proto1006.prototype.send = function (data) {
        if (data === void 0) { data = {}; }
        var sendData = {
            protoId: this.protoid,
            openId: Game_1.default.userData.openid,
            password: Game_1.default.userData.password,
            data: data,
        };
        this.request(sendData);
    };
    // any == T
    Proto1006.prototype.read = function (json) {
    };
    return Proto1006;
}(Proto_1.default));
exports.default = Proto1006;
},{"../Game":1,"./Proto":178}],186:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Proto_1 = require("./Proto");
var Game_1 = require("../Game");
var ItemInfo_1 = require("../gamemodule/DataStructs/ItemInfo");
var WaveStatus_1 = require("../gamemodule/DataStructs/WaveStatus");
var Proto1007 = /** @class */ (function (_super) {
    __extends(Proto1007, _super);
    function Proto1007() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.protoid = 1007;
        return _this;
    }
    Proto1007.prototype.send = function (data) {
        if (data === void 0) { data = {}; }
        var sendData = {
            protoId: this.protoid,
            openId: Game_1.default.userData.openid,
            password: Game_1.default.userData.password,
            data: data,
        };
        this.request(sendData);
    };
    // any == T
    Proto1007.prototype.read = function (json) {
        Game_1.default.battleData.fight_result = [];
        if (json.hasOwnProperty("diamond")) {
            var item = new ItemInfo_1.default();
            item.itemId = 10001;
            item.itemNum = json.diamond - Game_1.default.playData.curDiamond;
            Game_1.default.playData.curDiamond = json.diamond;
            Game_1.default.battleData.fight_result.push(item);
        }
        if (json.hasOwnProperty("gold")) {
            var item = new ItemInfo_1.default();
            item.itemId = 10002;
            item.itemNum = json.gold - Game_1.default.playData.curGold;
            Game_1.default.playData.curGold = json.gold;
            Game_1.default.battleData.fight_result.push(item);
        }
        if (json.hasOwnProperty("map")) {
            var wavestatus = new WaveStatus_1.default();
            wavestatus.id = json.map.id;
            wavestatus.level = json.map.level;
            wavestatus.time = json.map.time;
            wavestatus.fightCd = json.map.cd;
            Game_1.default.battleMap.waveStatusDict.add(json.map.id, wavestatus);
        }
        if (json.hasOwnProperty("clips")) {
            var clips = json.clips;
            var clipsDic = Game_1.default.playData.curClips;
            for (var i = clips.length - 1; i >= 0; i--) {
                var num = clips[i].clips;
                if (clipsDic.hasKey(clips[i].id)) {
                    num -= clipsDic.getValue(clips[i].id);
                }
                clipsDic.add(clips[i].id, clips[i].clips);
                if (num > 0) {
                    var item = new ItemInfo_1.default();
                    item.itemId = clips[i].id;
                    item.itemNum = num;
                    Game_1.default.battleData.fight_result.push(item);
                }
            }
        }
    };
    return Proto1007;
}(Proto_1.default));
exports.default = Proto1007;
},{"../Game":1,"../gamemodule/DataStructs/ItemInfo":144,"../gamemodule/DataStructs/WaveStatus":147,"./Proto":178}],187:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Proto_1 = require("./Proto");
var Game_1 = require("../Game");
var Proto1008 = /** @class */ (function (_super) {
    __extends(Proto1008, _super);
    function Proto1008() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.protoid = 1008;
        return _this;
    }
    Proto1008.prototype.send = function (data) {
        if (data === void 0) { data = {}; }
        var sendData = {
            protoId: this.protoid,
            openId: Game_1.default.userData.openid,
            password: Game_1.default.userData.password,
            data: data,
        };
        this.request(sendData);
    };
    // any == T
    Proto1008.prototype.read = function (json) {
        Game_1.default.playData.curLevel = Number(json.level);
        Game_1.default.playData.curGold = Number(json.gold);
    };
    return Proto1008;
}(Proto_1.default));
exports.default = Proto1008;
},{"../Game":1,"./Proto":178}],188:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Proto_1 = require("./Proto");
var Game_1 = require("../Game");
var Proto1009 = /** @class */ (function (_super) {
    __extends(Proto1009, _super);
    function Proto1009() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.protoid = 1009;
        return _this;
    }
    Proto1009.prototype.send = function (data) {
        if (data === void 0) { data = {}; }
        var sendData = {
            protoId: this.protoid,
            openId: Game_1.default.userData.openid,
            password: Game_1.default.userData.password,
            data: data,
        };
        this.request(sendData);
    };
    // any == T
    Proto1009.prototype.read = function (json) {
        Game_1.default.playData.curJadeite = Number(json.jadeite);
        Game_1.default.playData.curStar = Number(json.star);
    };
    return Proto1009;
}(Proto_1.default));
exports.default = Proto1009;
},{"../Game":1,"./Proto":178}],189:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Proto_1 = require("./Proto");
var Game_1 = require("../Game");
var HeroInfo_1 = require("../dataInfo/HeroInfo");
var Proto1010 = /** @class */ (function (_super) {
    __extends(Proto1010, _super);
    function Proto1010() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.protoid = 1010;
        return _this;
    }
    Proto1010.prototype.send = function (data) {
        if (data === void 0) { data = {}; }
        var sendData = {
            protoId: this.protoid,
            openId: Game_1.default.userData.openid,
            password: Game_1.default.userData.password,
            data: data,
        };
        this.request(sendData);
    };
    // any == T
    Proto1010.prototype.read = function (json) {
        var clipsDic = Game_1.default.playData.curClips;
        if (clipsDic.hasKey(json.heroId)) {
            if (json.hasOwnProperty("clips") && Number(json.clips) > 0) {
                clipsDic.set(json.heroId, Number(json.clips));
            }
            else {
                clipsDic.remove(json.heroId);
            }
        }
        if (Game_1.default.playData.curHero.indexOf(json.heroId) == -1) {
            Game_1.default.playData.curHero.push(json.heroId);
            var heroInf = HeroInfo_1.default.getInfo(json.heroId);
            Game_1.default.tipWin.showTip("恭喜你合成新英雄 " + heroInf.name);
        }
    };
    return Proto1010;
}(Proto_1.default));
exports.default = Proto1010;
},{"../Game":1,"../dataInfo/HeroInfo":30,"./Proto":178}],190:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Proto_1 = require("./Proto");
var Game_1 = require("../Game");
var Proto1011 = /** @class */ (function (_super) {
    __extends(Proto1011, _super);
    function Proto1011() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.protoid = 1011;
        return _this;
    }
    Proto1011.prototype.send = function (data) {
        if (data === void 0) { data = {}; }
        var sendData = {
            protoId: this.protoid,
            openId: Game_1.default.userData.openid,
            password: Game_1.default.userData.password,
            data: data,
        };
        this.request(sendData);
    };
    // any == T
    Proto1011.prototype.read = function (json) {
    };
    return Proto1011;
}(Proto_1.default));
exports.default = Proto1011;
},{"../Game":1,"./Proto":178}],191:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ProtoEvent = /** @class */ (function () {
    function ProtoEvent() {
    }
    ProtoEvent.getProtoEvent = function (protoid) {
        return "PROTO_CALL_BACK_" + protoid;
    };
    Object.defineProperty(ProtoEvent, "LOGIN_CALL_BACK", {
        get: function () {
            return this.getProtoEvent(1001);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ProtoEvent, "WAVEINFO_CALL_BACK", {
        get: function () {
            return this.getProtoEvent(1003);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ProtoEvent, "SELECTWAVE_CALL_BACK", {
        get: function () {
            return this.getProtoEvent(1004);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ProtoEvent, "PASSWAVE_CALL_BACK", {
        get: function () {
            return this.getProtoEvent(1007);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ProtoEvent, "SYNTHETISE_CALL_BACK", {
        get: function () {
            return this.getProtoEvent(1010);
        },
        enumerable: true,
        configurable: true
    });
    return ProtoEvent;
}());
exports.default = ProtoEvent;
},{}],192:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Proto1000_1 = require("./Proto1000");
var Proto1001_1 = require("./Proto1001");
var Proto1002_1 = require("./Proto1002");
var Proto1003_1 = require("./Proto1003");
var Proto1004_1 = require("./Proto1004");
var Proto1005_1 = require("./Proto1005");
var Proto1006_1 = require("./Proto1006");
var Proto1007_1 = require("./Proto1007");
var Proto1008_1 = require("./Proto1008");
var Proto1009_1 = require("./Proto1009");
var Proto1010_1 = require("./Proto1010");
var Proto1011_1 = require("./Proto1011");
var ProtoHash = /** @class */ (function () {
    function ProtoHash() {
    }
    ProtoHash.protoHash = {
        "1000": new Proto1000_1.default(),
        "1001": new Proto1001_1.default(),
        "1002": new Proto1002_1.default(),
        "1003": new Proto1003_1.default(),
        "1004": new Proto1004_1.default(),
        "1005": new Proto1005_1.default(),
        "1006": new Proto1006_1.default(),
        "1007": new Proto1007_1.default(),
        "1008": new Proto1008_1.default(),
        "1009": new Proto1009_1.default(),
        "1010": new Proto1010_1.default(),
        "1011": new Proto1011_1.default(),
    };
    return ProtoHash;
}());
exports.default = ProtoHash;
},{"./Proto1000":179,"./Proto1001":180,"./Proto1002":181,"./Proto1003":182,"./Proto1004":183,"./Proto1005":184,"./Proto1006":185,"./Proto1007":186,"./Proto1008":187,"./Proto1009":188,"./Proto1010":189,"./Proto1011":190}],193:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ProtoHash_1 = require("./ProtoHash");
var ProtoManager = /** @class */ (function () {
    function ProtoManager() {
    }
    ProtoManager.getProto = function (protoid) {
        protoid = String(protoid);
        return ProtoHash_1.default.protoHash[protoid];
    };
    ProtoManager.prototype.sendPro = function (data, id) {
        var pro = ProtoManager.getProto(id);
        pro.send(data);
    };
    /**
     * 获取配置表信息
     */
    ProtoManager.prototype.reqConfig = function () {
        // let pro: Proto = ProtoManager.getProto(1000);
        // pro.send();
    };
    /**
     * 登录
     */
    ProtoManager.prototype.login = function (data) {
        if (data === void 0) { data = {}; }
        this.sendPro(data, 1001);
    };
    /**
     * 玩家完成新手引导后调用(一个账号只会调用一次)
     */
    ProtoManager.prototype.initPlay = function () {
        this.sendPro({}, 1002);
    };
    /**
     * 获取关卡数据
     * @param data
     */
    ProtoManager.prototype.waveInfo = function (data) {
        this.sendPro(data, 1003);
    };
    /**
     * 选择关卡
     * @param data
     */
    ProtoManager.prototype.selectWave = function (data) {
        this.sendPro(data, 1004);
    };
    /**
     * 获取布阵
     * @param data
     */
    ProtoManager.prototype.getSeat = function (data) {
        this.sendPro(data, 1005);
    };
    /**
     * 设置布阵
     * @param data
     */
    ProtoManager.prototype.setSeat = function (data) {
        this.sendPro(data, 1006);
    };
    /**
     * 战斗结果奖励
     * @param data
     */
    ProtoManager.prototype.passWave = function (data) {
        this.sendPro(data, 1007);
    };
    /**
     * 升级
     * @param data
     */
    ProtoManager.prototype.upLevel = function (data) {
        this.sendPro(data, 1008);
    };
    /**
     * 升星
     * @param data
     */
    ProtoManager.prototype.upStar = function (data) {
        this.sendPro(data, 1009);
    };
    /**
     * 召唤，获得英雄
     * @param data
     */
    ProtoManager.prototype.synthetise = function (data) {
        this.sendPro(data, 1010);
    };
    /**
     * 悬赏
     * @param data
     */
    ProtoManager.prototype.offerReward = function (data) {
        this.sendPro(data, 1011);
    };
    return ProtoManager;
}());
exports.default = ProtoManager;
},{"./ProtoHash":192}],194:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventManager_1 = require("../Tool/EventManager");
var TimerManager_1 = require("../Tool/TimerManager");
var ProtoManager_1 = require("./ProtoManager");
var EventKey_1 = require("../Tool/EventKey");
var Game_1 = require("../Game");
var ProtoServer = /** @class */ (function () {
    function ProtoServer() {
    }
    Object.defineProperty(ProtoServer, "SERVER_URL", {
        get: function () {
            return "http://192.168.10.178/td2/v1/facade.php";
        },
        enumerable: true,
        configurable: true
    });
    ProtoServer.init = function () {
        EventManager_1.default.on(EventKey_1.default.ENTER_SECOND, ProtoServer, ProtoServer.update);
    };
    ProtoServer.update = function () {
        ProtoServer.time++;
        if (ProtoServer.time >= 8) {
            ProtoServer.forceCall();
        }
    };
    ProtoServer.request = function (data) {
        console.log("============request=========", data);
        this.dataList.push(data);
        this.callServer();
    };
    ProtoServer.forceCall = function () {
        ProtoServer.time = 0;
        this.calling = false;
        this.callServer();
    };
    ProtoServer.callServer = function () {
        if (this.calling)
            return;
        if (this.dataList.length == 0)
            return;
        EventManager_1.default.event(EventKey_1.default.SHOW_WAIT);
        this.calling = true;
        ProtoServer.time = 0;
        var data = this.dataList[0];
        data["order"] = this.nextOrder;
        wx.request({
            url: ProtoServer.SERVER_URL,
            data: data,
            header: {
                "content-type": "application/text"
            },
            method: "GET",
            dataType: "text",
            responseType: "text",
            success: function (res) {
                ProtoServer.callback(res.data);
            },
            fail: null,
            complete: null
        });
    };
    ProtoServer.callback = function (data) {
        try {
            var json = JSON.parse(data);
            if (json.hasOwnProperty("order")) {
                if (this.nextOrder == Number(json.order)) {
                    this.currentOrder = Number(json.order);
                    //处理返回服务器时间
                    if (json.hasOwnProperty("sysTime")) {
                        TimerManager_1.default.timestamp = json.sysTime;
                    }
                    if (json.hasOwnProperty("errCode")) {
                        Game_1.default.tipWin.showTip(this.errorStr(parseInt(json.errCode)), Laya.Handler.create(this, this.closeWait));
                    }
                    else {
                        // console.log("   >>> back:", json.protoId, json);
                        // // 用户数据变更
                        // if (json.hasOwnProperty("userData")) {
                        // 	this.parseUserData(json.userData);
                        // }
                        var pro = ProtoManager_1.default.getProto(json.protoId);
                        console.log("  >>> back:" + json.protoId, json);
                        pro.callBack(json);
                    }
                    ProtoServer.dataList.shift();
                }
                else {
                    console.error("出错啦，订单序号有错误~~~order：", json.order);
                    Game_1.default.tipWin.showTip("出错啦，订单序号有错误~~~\norder：" + json.order, Laya.Handler.create(this, this.closeWait));
                    return;
                }
            }
            this.closeWait();
        }
        catch (error) {
            // 服务器代码异常
            console.error("服务器出错,data:", data);
            console.error("服务器出错,error:", error);
            return;
        }
        ProtoServer.calling = false;
        ProtoServer.callServer();
    };
    ProtoServer.closeWait = function () {
        EventManager_1.default.event(EventKey_1.default.CLOSE_WAIT);
    };
    // 错误码处理
    ProtoServer.errorStr = function (code) {
        var str = "错误码：" + code;
        switch (code) {
            case 4006:
                str = "金币不足";
                break;
            case 4007:
                str = "宝石不足";
                break;
            case 4008:
                str = "钻石不足";
                break;
            case 4009:
                str = "密码错误";
                break;
            case 4010:
                str = "布阵错误";
                break;
            case 4011:
                str = "已领取";
                break;
            case 4012:
                str = "无法领取";
                break;
            case 4013:
                str = "充值的金额不足，无法领取";
                break;
            case 4020:
                str = "数据出错，请联系QQ群812835839管理员";
                break;
            case 5009:
                str = "10级后可以升星";
                break;
            case 5011:
                str = "20级后可以升星";
                break;
            case 5012:
                str = "已经拥有此英雄，无法再次合成";
                break;
        }
        return str;
    };
    Object.defineProperty(ProtoServer, "currentOrder", {
        set: function (v) {
            this._order = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ProtoServer, "nextOrder", {
        get: function () {
            return this._order + 1;
        },
        enumerable: true,
        configurable: true
    });
    // 请求超时时间计数器
    ProtoServer.time = 0;
    ProtoServer.calling = false;
    ProtoServer.dataList = [];
    /**
     * 下一个订单序号
     */
    ProtoServer._order = 0;
    return ProtoServer;
}());
exports.default = ProtoServer;
},{"../Game":1,"../Tool/EventKey":6,"../Tool/EventManager":7,"../Tool/TimerManager":19,"./ProtoManager":193}],195:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventManager = /** @class */ (function (_super) {
    __extends(EventManager, _super);
    function EventManager() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    EventManager.getInstance = function () {
        if (this._instance == null) {
            this._instance = new EventManager();
        }
        return this._instance;
    };
    EventManager.on = function (type, caller, listener, args) {
        this.getInstance().on(type, caller, listener, args);
    };
    EventManager.once = function (type, caller, listener, args) {
        this.getInstance().once(type, caller, listener, args);
    };
    EventManager.event = function (type, data) {
        this.getInstance().event(type, data);
    };
    EventManager.off = function (type, caller, listener, onceOnly) {
        this.getInstance().off(type, caller, listener, onceOnly);
    };
    EventManager.offAll = function (type) {
        this.getInstance().offAll(type);
    };
    EventManager.offAllCaller = function (caller) {
        this.getInstance().offAllCaller(caller);
    };
    EventManager._instance = null;
    return EventManager;
}(Laya.EventDispatcher));
exports.default = EventManager;
},{}]},{},[4])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
